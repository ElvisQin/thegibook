%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G1212) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 349 168
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 349 168
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HLTHFP+Helvetica
%!FontType1-1.0: HLTHFP+Helvetica 1.0000.0.0000
14 dict begin/FontName /HLTHFP+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /p put
dup 34 /i put
dup 35 /hyphen put
dup 36 /one put
dup 37 /two put
dup 38 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA0000000200840000013B05BD000300070036401C07E50400010006030A0917171A06010229070300190809AA216242182B2B4EF43C4DC4FD3CC44E456544E6003F3F3C3F4DED3130133311231133152384B7B7B7B7042AFBD605BDCC000000020076FE5504250449000E00220074402CA908A717022808201C110E061D15070F060E1D1C0B220E0227181A240A2E102E2129220F1923248721BD5D182B2B4EF43C4DFDE4E44E10F64DED003F3FED3F3FED1139123931304379401C161B00051A260426001B022601051602260101190E260003170626012B2B012B2B2B2B8181005D243635342726232207061514171633013315363736333212111007062322272627112302C6A72546BABB45252546BAFE2EAF36405B7BB6FEB7749A7952303BB479D3D2805CB1BB649A7C57A603B18E49283CFEE9FEFDFEA2965F351E49FDDD000002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50041303A6A8A8FC5A03A60146A7A700000001000000000000493EDC1E5F0F3CF500110800000000005F4D8F0000000000D154CD90F865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B910001000000000000000000000000000000080512004202AA005504730040047300C40473004001C70084047300760473002F00000036005400C200E8017401A20214022E000000010000000800920009006B0007000200100010005D000007E80A1D00040001B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21F

00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/hyphen 1 def
/zero 2 def
/one 3 def
/two 4 def
/i 5 def
/p 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4449566 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A64BC3AB0F9692F6BC106AE217BF94B71975CBCEAD28FD587E1BFB01FDF6931915C89E8032677890B9B723498510FBFA80C605F161F06E859104BA241B4B3BC00C118CB198E09586F62DA3AE06FE893DABAABAF5C68A0621EE262F8E450676E21FE8EEE55DBC0DB3C742F9D3FD67D34143C7BC47A4FCC0B7231DF6A1FD75B163610144AE074F6DD8ED1AACC3015719523E05F81E5CEF288ADB667A77328D710CF8879A9C8124DCBDD89F8FB5442499E5AE9CBD9FE73D2277231CB2A9DD8ADEFA925A491FD68FAB8F2D7F2C3A620C08FF03074A9BF5C55007893B2934130CCF94574A2E76FC062AD116D2EC6139B4314CBF7039DC617EEB186E28D30F8AF92FEDFEE2FF95A9BB62FE06917511C62A5DD1B1C896EDB55255ECE2AADF185BDA70825F42E971EED21956D1E1D0D93D3D4A6356C400DCEFFA6CF0EB7E262D5CFA40286A39D987EDF4D8E0A9CCC431C87B8FA3E80ABCD92F2C9C4B15D935AD6623EEDE80964935BE78BDDE55151934693231000F550F4E99A9D24E5308FED2BAF75CB9C7BBA981FE710087F2BE73B83B07EFCD48622D0A7F5FF059FD22A758A701CAB57422A8581176D8DFCFA06602BB3AE84BEF13482C47AF12178E88C1C8B6FCF0524669D7CAAA0C4026949E1F74ABAAA302C748ADF3FC34489A1FA6D9A536FEBE78A2A2F5DC59234F0D73B0DBB749D086C075083D8F3964BB2D3320C8ABCB56513539F737BB3E237

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HLTHFP+Helvetica cguidfix
/F1.1/HLTHFP+Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 348.19223 167.42467 rc
1 0 0 -1 -103.88787 499.29691 cm
144.37306 492.80383 m
194.60135 494.85043 l
214.07594 465.98718 l
157.70396 461.85104 l
145.50645 493.36627 l
S
233.6555 363.70853 m
283.88376 365.75513 l
303.35837 336.89188 l
246.98639 332.75574 l
234.78888 364.27097 l
S
316.82941 496.17911 m
367.05768 498.22571 l
386.53226 469.36246 l
330.16028 465.22629 l
317.96277 496.74152 l
S
0.89411765 0 1 sc
CM
295.64642 146.01982 m
339.64893 133.22078 l
347.27383 150.76918 l
302.75156 166.22018 l
295.34158 145.80501 l
f
0 0 0 sc
1 0 0 -1 -103.88787 499.29691 cm
399.5343 353.2771 m
443.5368 366.07614 l
451.16171 348.52774 l
406.63943 333.07672 l
399.22946 353.49191 l
S
CM
9.102623 161.05206 m
9.1029348 161.61516 8.9909782 162.17799 8.7752056 162.6981 c
8.560008 163.21844 8.2411833 163.6956 7.8427982 164.09355 c
7.4448538 164.49193 6.9676986 164.81076 6.4473524 165.02596 c
5.9272447 165.24173 5.3644013 165.35368 4.8013115 165.35338 c
4.2382221 165.35368 3.6753788 165.24173 3.1552711 165.02596 c
2.6349249 164.81076 2.1577694 164.49193 1.759825 164.09355 c
1.3614404 163.6956 1.0426154 163.21844 0.82741785 162.6981 c
0.61164522 162.17799 0.49968877 161.61516 0.5 161.05206 c
0.49968877 160.48897 0.61164522 159.92613 0.82741785 159.40602 c
1.0426154 158.88568 1.3614404 158.40852 1.759825 158.01057 c
2.1577694 157.6122 2.6349249 157.29337 3.1552711 157.07817 c
3.6753788 156.8624 4.2382221 156.75044 4.8013115 156.75075 c
5.3644013 156.75044 5.9272447 156.8624 6.4473524 157.07817 c
6.9676986 157.29337 7.4448538 157.6122 7.8427982 158.01057 c
8.2411833 158.40852 8.560008 158.88568 8.7752056 159.40602 c
8.9909782 159.92613 9.1029348 160.48897 9.102623 161.05206 c
h
9.102623 161.05206 m
f
1 0 0 -1 -103.88787 499.29691 cm
112.99049 338.24484 m
112.99081 337.68176 112.87885 337.11893 112.66308 336.59882 c
112.44788 336.07846 112.12906 335.60132 111.73067 335.20337 c
111.33273 334.80499 110.85558 334.48615 110.33523 334.27097 c
109.81512 334.05518 109.25227 333.94324 108.68919 333.94354 c
108.1261 333.94324 107.56326 334.05518 107.04314 334.27097 c
106.5228 334.48615 106.04565 334.80499 105.6477 335.20337 c
105.24931 335.60132 104.93049 336.07846 104.71529 336.59882 c
104.49952 337.11893 104.38757 337.68176 104.38787 338.24484 c
104.38757 338.80795 104.49952 339.37079 104.71529 339.8909 c
104.93049 340.41125 105.24931 340.8884 105.6477 341.28635 c
106.04565 341.68472 106.5228 342.00354 107.04314 342.21875 c
107.56326 342.43451 108.1261 342.54648 108.68919 342.54617 c
109.25227 342.54648 109.81512 342.43451 110.33523 342.21875 c
110.85558 342.00354 111.33273 341.68472 111.73067 341.28635 c
112.12906 340.8884 112.44788 340.41125 112.66308 339.8909 c
112.87885 339.37079 112.99081 338.80795 112.99049 338.24484 c
h
112.99049 338.24484 m
S
CM
76.329933 20.371145 m
76.330246 20.934235 76.218285 21.497078 76.002518 22.017187 c
75.787315 22.537533 75.468491 23.014688 75.070107 23.412632 c
74.672165 23.811016 74.195007 24.129843 73.67466 24.345039 c
73.154556 24.560812 72.591713 24.67277 72.028618 24.672457 c
71.46553 24.67277 70.902687 24.560812 70.382584 24.345039 c
69.862236 24.129843 69.385078 23.811016 68.987137 23.412632 c
68.588753 23.014688 68.269928 22.537533 68.054726 22.017187 c
67.838951 21.497078 67.726997 20.934235 67.72731 20.371145 c
67.726997 19.808056 67.838951 19.245213 68.054726 18.725105 c
68.269928 18.20476 68.588753 17.727604 68.987137 17.329659 c
69.385078 16.931274 69.862236 16.61245 70.382584 16.397251 c
70.902687 16.181479 71.46553 16.069523 72.028618 16.069834 c
72.591713 16.069523 73.154556 16.181479 73.67466 16.397251 c
74.195007 16.61245 74.672165 16.931274 75.070107 17.329659 c
75.468491 17.727604 75.787315 18.20476 76.002518 18.725105 c
76.218285 19.245213 76.330246 19.808056 76.329933 20.371145 c
h
76.329933 20.371145 m
f
1 0 0 -1 -103.88787 499.29691 cm
180.2178 478.92578 m
180.21812 478.36267 180.10616 477.79984 179.8904 477.27972 c
179.67519 476.75937 179.35637 476.28223 178.95798 475.88428 c
178.56004 475.4859 178.08289 475.16708 177.56253 474.95187 c
177.04243 474.73611 176.47958 474.62415 175.91649 474.62445 c
175.35341 474.62415 174.79056 474.73611 174.27045 474.95187 c
173.75011 475.16708 173.27295 475.4859 172.87502 475.88428 c
172.47662 476.28223 172.15779 476.75937 171.9426 477.27972 c
171.72682 477.79984 171.61487 478.36267 171.61519 478.92578 c
171.61487 479.48886 171.72682 480.0517 171.9426 480.57181 c
172.15779 481.09216 172.47662 481.56931 172.87502 481.96725 c
173.27295 482.36563 173.75011 482.68448 174.27045 482.89966 c
174.79056 483.11545 175.35341 483.22739 175.91649 483.22708 c
176.47958 483.22739 177.04243 483.11545 177.56253 482.89966 c
178.08289 482.68448 178.56004 482.36563 178.95798 481.96725 c
179.35637 481.56931 179.67519 481.09216 179.8904 480.57181 c
180.10616 480.0517 180.21812 479.48886 180.2178 478.92578 c
h
180.2178 478.92578 m
S
CM
169.47183 148.84586 m
169.47214 149.40895 169.36018 149.97179 169.14441 150.4919 c
168.92921 151.01225 168.61038 151.48941 168.21201 151.88734 c
167.81406 152.28574 167.3369 152.60455 166.81656 152.81975 c
166.29645 153.03552 165.7336 153.14749 165.17052 153.14717 c
164.60742 153.14749 164.04459 153.03552 163.52448 152.81975 c
163.00412 152.60455 162.52698 152.28574 162.12903 151.88734 c
161.73064 151.48941 161.41182 151.01225 161.19662 150.4919 c
160.98085 149.97179 160.8689 149.40895 160.8692 148.84586 c
160.8689 148.28278 160.98085 147.71992 161.19662 147.19981 c
161.41182 146.67947 161.73064 146.20232 162.12903 145.80437 c
162.52698 145.40599 163.00412 145.08716 163.52448 144.87196 c
164.04459 144.65619 164.60742 144.54424 165.17052 144.54456 c
165.7336 144.54424 166.29645 144.65619 166.81656 144.87196 c
167.3369 145.08716 167.81406 145.40599 168.21201 145.80437 c
168.61038 146.20232 168.92921 146.67947 169.14441 147.19981 c
169.36018 147.71992 169.47214 148.28278 169.47183 148.84586 c
h
169.47183 148.84586 m
f
1 0 0 -1 -103.88787 499.29691 cm
273.35971 350.45105 m
273.36002 349.88797 273.24805 349.32513 273.03229 348.80502 c
272.81708 348.28467 272.49826 347.80753 272.09988 347.40958 c
271.70193 347.01117 271.22476 346.69235 270.70444 346.47717 c
270.18433 346.26138 269.62149 346.14944 269.05838 346.14975 c
268.4953 346.14944 267.93246 346.26138 267.41235 346.47717 c
266.892 346.69235 266.41486 347.01117 266.01691 347.40958 c
265.61853 347.80753 265.29968 348.28467 265.0845 348.80502 c
264.86871 349.32513 264.75677 349.88797 264.75708 350.45105 c
264.75677 351.01416 264.86871 351.577 265.0845 352.09711 c
265.29968 352.61743 265.61853 353.0946 266.01691 353.49255 c
266.41486 353.89093 266.892 354.20975 267.41235 354.42496 c
267.93246 354.64072 268.4953 354.75269 269.05838 354.75238 c
269.62149 354.75269 270.18433 354.64072 270.70444 354.42496 c
271.22476 354.20975 271.70193 353.89093 272.09988 353.49255 c
272.49826 353.0946 272.81708 352.61743 273.03229 352.09711 c
273.24805 351.577 273.36002 351.01416 273.35971 350.45105 c
h
273.35971 350.45105 m
S
CM
251.18144 18.721161 m
251.18176 19.28425 251.06981 19.847094 250.85403 20.367201 c
250.63884 20.887547 250.32001 21.364702 249.92162 21.762646 c
249.52368 22.161032 249.04652 22.479856 248.52618 22.695053 c
248.00607 22.910826 247.44322 23.022783 246.88014 23.022472 c
246.31705 23.022783 245.7542 22.910826 245.2341 22.695053 c
244.71375 22.479856 244.23659 22.161032 243.83865 21.762646 c
243.44026 21.364702 243.12144 20.887547 242.90623 20.367201 c
242.69048 19.847094 242.57851 19.28425 242.57883 18.721161 c
242.57851 18.15807 242.69048 17.595226 242.90623 17.075119 c
243.12144 16.554773 243.44026 16.077618 243.83865 15.679673 c
244.23659 15.281289 244.71375 14.962463 245.2341 14.747266 c
245.7542 14.531493 246.31705 14.419537 246.88014 14.419848 c
247.44322 14.419537 248.00607 14.531493 248.52618 14.747266 c
249.04652 14.962463 249.52368 15.281289 249.92162 15.679673 c
250.32001 16.077618 250.63884 16.554773 250.85403 17.075119 c
251.06981 17.595226 251.18176 18.15807 251.18144 18.721161 c
h
251.18144 18.721161 m
f
1 0 0 -1 -103.88787 499.29691 cm
355.06934 480.57574 m
355.06964 480.01266 354.95767 479.44983 354.74191 478.92972 c
354.5267 478.40936 354.20789 477.93222 353.80951 477.53427 c
353.41156 477.13589 352.93439 476.81705 352.41406 476.60187 c
351.89395 476.38608 351.33109 476.27414 350.76801 476.27444 c
350.20493 476.27414 349.64209 476.38608 349.12198 476.60187 c
348.60162 476.81705 348.12448 477.13589 347.72653 477.53427 c
347.32812 477.93222 347.00931 478.40936 346.79413 478.92972 c
346.57834 479.44983 346.4664 480.01266 346.46671 480.57574 c
346.4664 481.13885 346.57834 481.70169 346.79413 482.2218 c
347.00931 482.74216 347.32812 483.2193 347.72653 483.61725 c
348.12448 484.01562 348.60162 484.33444 349.12198 484.54965 c
349.64209 484.76541 350.20493 484.87738 350.76801 484.87708 c
351.33109 484.87738 351.89395 484.76541 352.41406 484.54965 c
352.93439 484.33444 353.41156 484.01562 353.80951 483.61725 c
354.20789 483.2193 354.5267 482.74216 354.74191 482.2218 c
354.95767 481.70169 355.06964 481.13885 355.06934 480.57574 c
h
355.06934 480.57574 m
S
CM
326.80356 147.38794 m
326.80389 147.95103 326.69193 148.51387 326.47614 149.03398 c
326.26096 149.55434 325.94214 150.03148 325.54373 150.42943 c
325.14581 150.82782 324.66864 151.14664 324.14828 151.36183 c
323.62817 151.57761 323.06534 151.68956 322.50226 151.68925 c
321.93918 151.68956 321.37631 151.57761 320.8562 151.36183 c
320.33588 151.14664 319.8587 150.82782 319.46075 150.42943 c
319.06238 150.03148 318.74356 149.55434 318.52835 149.03398 c
318.31259 148.51387 318.20062 147.95103 318.20096 147.38794 c
318.20062 146.82486 318.31259 146.26201 318.52835 145.7419 c
318.74356 145.22156 319.06238 144.7444 319.46075 144.34645 c
319.8587 143.94807 320.33588 143.62924 320.8562 143.41405 c
321.37631 143.19827 321.93918 143.08632 322.50226 143.08664 c
323.06534 143.08632 323.62817 143.19827 324.14828 143.41405 c
324.66864 143.62924 325.14581 143.94807 325.54373 144.34645 c
325.94214 144.7444 326.26096 145.22156 326.47614 145.7419 c
326.69193 146.26201 326.80389 146.82486 326.80356 147.38794 c
h
326.80356 147.38794 m
f
1 0 0 -1 -103.88787 499.29691 cm
430.69144 351.90897 m
430.69174 351.34589 430.5798 350.78305 430.36401 350.26294 c
430.14883 349.74258 429.82999 349.26544 429.43161 348.86749 c
429.03366 348.46912 428.55652 348.15027 428.03616 347.93509 c
427.51605 347.7193 426.95322 347.60736 426.39014 347.60767 c
425.82703 347.60736 425.26419 347.7193 424.74408 347.93509 c
424.22375 348.15027 423.74658 348.46912 423.34863 348.86749 c
422.95026 349.26544 422.63144 349.74258 422.41623 350.26294 c
422.20047 350.78305 422.0885 351.34589 422.08881 351.90897 c
422.0885 352.47208 422.20047 353.03491 422.41623 353.55502 c
422.63144 354.07535 422.95026 354.55252 423.34863 354.95047 c
423.74658 355.34885 424.22375 355.66766 424.74408 355.88287 c
425.26419 356.09863 425.82703 356.2106 426.39014 356.2103 c
426.95322 356.2106 427.51605 356.09863 428.03616 355.88287 c
428.55652 355.66766 429.03366 355.34885 429.43161 354.95047 c
429.82999 354.55252 430.14883 354.07535 430.36401 353.55502 c
430.5798 353.03491 430.69174 352.47208 430.69144 351.90897 c
h
430.69144 351.90897 m
S
108.93141 339.80484 m
177.26266 479.89474 l
S
175.58214 479.24097 m
268.13193 350.65823 l
S
268.65503 351.63177 m
349.9169 479.81894 l
S
351.61398 480.45374 m
425.88153 351.3949 l
S
0 i
/F1.1[ 14 0 0 -14 0 0]sf
183.70645 480.87842 m
(!)s
246.15503 349.68915 m
(!)s
329.20786 488.50137 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
337.71869 494.82916 m
("#$)[ 2.666016 3.996094 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
396.8219 369.21344 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
404.94141 374.25641 m
(")s
251.94255 357.55374 m
(%)s
190.9906 487.01669 m
($)s
/F1.1[ 14 0 0 -14 0 0]sf
121.15609 347.65869 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
128.26817 354.45123 m
(&)s
[
4
4
] 0 d
0.60000002 i
176.00581 475.80399 m
181.53279 416.06763 257.98471 421.28979 177.70055 477.92871 c
177.70055 477.92871 177.70055 477.92871 177.70055 477.92871 c
S
351.8475 473.06717 m
341.5704 414.78284 446.64575 429.08661 353.54224 475.19189 c
353.54224 475.19189 353.54224 475.19189 353.54224 475.19189 c
S
269.82483 351.31213 m
328.97327 349.27612 292.47556 447.41577 267.48422 352.69348 c
267.48422 352.69348 267.48422 352.69348 267.48422 352.69348 c
S
ep
end
%%Trailer
%%EOF
