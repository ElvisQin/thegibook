%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.2 (Build 17C88) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 420 287
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 420 287
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HQWLQU+Helvetica-Bold
%!FontType1-1.0: HQWLQU+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /HQWLQU+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /v put
dup 34 /n put
dup 35 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/n 1 def
/r 2 def
/v 3 def
/u20B8 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4338650 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D189384B9AF89DBB8BFB662B7E2C8075BA0694D7CB7F6EE43BE246691CE17FB2B2EE343E468E9396334D1DF6C592807B305D948C8953A682F9DC0D573A7A9107E1F88633DEFF1D19B15E82280226F51A3C878B36F39F8930F6A1BFEFBE6B7AD5B8FA7439333D10C9127A27C764F7BF873933929A4299935D71D0CD855F321A177BD0F6F888B84A83F0ED49303E0E665CB82073C4E44D52C13EB7C20D1FC46408D183A9F4F9910B1D251ADD05C9755A50DE6402E96E434A1D8D39047213AEB4A069FC0F97AFC61A9366EF8EDB4F1F276D6F7BF1CD3877B3BEA5E9A869F0207024BED78DE6D8BD8D8BF2D9CCE3FFDD10B4EE288571641B267F952518CE79A67B872D1F00E348EDD6C4EC991251AD910D1D8180645A8D867A2681DBDCFABCC0D1608E0C509D7BB7717DB712B4C92D1EF055894AB1F38289414F7C60D162091BE55B0C09DA9C6A55A9BC9C1F60156C451B72B1663FF6F5E2BAF409D61D4701192FFA1055C9AFDDA2C3F6F32F45369FADB288E3FB335C7D5EDC1FE57B9AEA95220AD1440C6F123C99C88D6C43E3A739803587EFCA16731806AE378DE44B6E657A897338547019663E02978DE7E28F4154FF573358CA112BAEF792172FCBADF50E9F76EA173F8C41222CF94B98F1F945F99FA5B8B8CDA6CD7ECB40ACB1E579AD9C8DA0F9052ED5463BA02BAB79DB882073F1A08EE751CF2533111A7E4ABE2E3FCB3C561F31
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HQWLQU+Helvetica-Bold cguidfix
/F1.1/HQWLQU+Helvetica-Bold renmfont
%RBIBeginFontSubset: PRPQEX+Helvetica
%!FontType1-1.0: PRPQEX+Helvetica 1.0000.0.0000
14 dict begin/FontName /PRPQEX+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /parenleft put
dup 35 /u put
dup 36 /comma put
dup 37 /v put
dup 38 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000036C6670676D000000000000040800000A1D676C79660000000000000E28000005906865616400000000000013B8000000366868656100000000000013F000000024686D74780000000000001414000000206C6F63610000000000001434000000126D617870000000000000144800000020707265700000000000001468000003CF05C0001005BD00280580001A042F001F0000FFD90000FFDA0000FFD9FE55FFE605C70010FE6DFFF1033B000000B9000000B902FE3F3C00C0008D009B00AF000600A800C00028005E009800C9016A00B9015C00B400D6011E002E0080000400B8004C00CC01FFFFD1006600A400AF007400C2009500B1000C0028006D0015004C008E0125FF7A000C0040004C00620084FFA200240038008600BD0039005E008E00EDFFA9FFB300400052005500AA00AB00C200CB012302B10413FFAEFFE4000800510074008400AA00D1FF4CFFAF0012002C004200500051008400BE012503DAFF680018003B0098009C009F00A100C100EC018201B4FF68FF76FFD0FFE100020018001C00530053007D01B401E103AF0486FF9CFFEAFFFE001F0028002A00520060009300A300AA00AF00AF00C001000145016B0174019301950240028202B404850517FEFD00060029004700470048006F008800B400B900C400F200F901EF02180310037403C5FF35FFF3000B004B004C0052005500650076007600870087008E00AB00BB0106013001430150017D0194019501D3022A025502580277027802E6034E035C037903D3047304B2058C0598060BFEF5FFBBFFC7FFD50017001D005B0072007E009C00C200D000F400FA01030106011C0125013B0142015E015E0180019B02B901A101B9025001C001D002AA01DF01E301EF01FB0205020C0215022B0274029302AB02C202CE03690395039903DF03F5043E050205A105E5062507DBFE62FE89FECEFF3BFFE1FFF800030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3011C00ED00F800F901000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F602000200020902110217021C02530262026D028002D50280031B032A034A035A03AF03AF03C803D603FB03FB04050413041504470449008C046D049A049A04A604A804B204CF0539053E054E055605800589058C036305D105D6067E068E06B206EF06F00728074C076F078C00B400C900C000C10000000000000000000000000004012400AF0032006E0063014401620096014301A10161008A00740064018801EF01700028FF5D037E0347023000AA00BE007B0062009A007D0089035C00A1FFD803AA00D70093006C0000008000A70442001D0597001D00820030002A





5458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/comma 3 def
/S 4 def
/u 5 def
/v 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec

102E419595055D5F775F98E820C5E88DA4238D940C20C471C202AA0FDEE6AD374F50817C5717F8416665DFFAD9118C2EA1859F820CE5110C73C41A2D65408E7C0E80304365CE5BC16D222524046E9396692411715643EF8C299AD0F8308F1766B0F1F377C343BF48C90E2C362C5D72434F0E76CAD08E6A996537D66F0085D5F7868AC2DDB2EB00AD63E0D2C6234196FCFBD9F2BC78C753F20696B819E66C6878699A5883942B9A27739CFD1A46ABBAA5FABFF4851C0E559C2335561CD4D5E3530E6018C833E368BA48E91073E583EDEAC9313DA01F626D3A63A1C809DC71A05A43BF328FFBF94D3C96222AF1B40ECC31AFB1B710642D3C64D84DEEE670D557AD9BC874AB4C30856ED2154F719C7235CB7EAA69465F6565822A69E196E80862EFA3C54D0F7C09A1317E316EADA635D0474D4AF760EF7EBC42EAAB924C11AB54720C0EDB33EE4A574642BC8D06C4642DBE1F2D0BEDCFFC13950490E98D267F4E293268DA6F1A1F0FD28902E9E3F3A356E95EAF80A3CC121DC7A57178227B6C9B6E9BE68B0929D157405CE2AE05897251CE52164514405F29A5589A394043C1D4C4C460D95FAD97480765C1DEFCBE1E7D1B1AD99A1284F2A82C632834DE3AC774FA01F8FBA66E103127996893FB7A2B8A1145AFFBF83436
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/PRPQEX+Helvetica cguidfix
/F2.1/PRPQEX+Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2.8346457 w
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 419.15167 286.45035 rc
0.85280597 -0.52222788 -0.52222788 -0.85280597 39.951824 551.9339 cm
126.93267 258.29938 m
141.64285 260.1463 169.01463 269.83331 169.99817 279.64478 c
S
126.93267 257.43365 m
141.64285 255.58672 169.01463 245.89969 169.99817 236.08824 c
S
164.17847 245.35822 m
172.00121 252.14102 171.09506 264.69806 165.42455 272.6788 c
165.42455 272.6788 165.42455 272.6788 165.42455 272.6788 c
165.42455 272.6788 165.42455 272.6788 165.42455 272.6788 c
165.42455 272.6788 165.42455 272.6788 165.42455 272.6788 c
S
0.68949056 0.83003521 0.9302367 sc
CM
40.635357 238.41013 m
40.894108 238.25153 41.183506 238.1431 41.494205 238.08655 c
41.804844 238.02977 42.136627 238.02481 42.478546 238.06747 c
42.82048 238.10997 43.172409 238.19994 43.523827 238.32881 c
43.87532 238.45761 44.226212 238.62515 44.568104 238.82079 c
44.910099 239.01643 45.243073 239.24005 45.561424 239.48105 c
45.879871 239.72209 46.183723 239.98047 46.470074 240.24704 c
46.756504 240.51369 47.025478 240.78851 47.276222 241.0645 c
47.52702 241.34056 47.75964 241.6178 47.974747 241.89128 c
48.189884 242.16484 48.387554 242.43468 48.569252 242.69768 c
48.750961 242.96072 48.916729 243.21698 49.068428 243.46468 c
49.220108 243.71239 49.373001 243.97652 49.524704 244.25795 c
49.676373 244.53934 49.82687 244.83806 49.972736 245.15404 c
50.118557 245.46996 50.259758 245.80316 50.391655 246.15204 c
50.523502 246.50084 50.646034 246.86534 50.753345 247.24168 c
50.860622 247.6179 50.952637 248.006 51.022591 248.39922 c
51.092548 248.79233 51.140366 249.19055 51.159172 249.58411 c
51.178024 249.97757 51.167751 250.36627 51.122704 250.73788 c
51.077755 251.10948 50.997921 251.46385 50.880344 251.78773 c
50.76292 252.11168 50.607689 252.40495 50.41592 252.65584 c
50.224312 252.90688 49.996189 253.11536 49.737305 253.27374 c
49.478554 253.43234 49.189156 253.54077 48.878456 253.59732 c
48.567818 253.6541 48.236034 253.65906 47.894115 253.61639 c
47.552181 253.5739 47.200253 253.48393 46.848835 253.35506 c
46.497341 253.22626 46.14645 253.05872 45.804558 252.86308 c
45.462563 252.66743 45.129589 252.44383 44.811237 252.20282 c
44.49279 251.96178 44.188938 251.7034 43.902588 251.43684 c
43.616158 251.1702 43.347183 250.89536 43.096439 250.61937 c
42.845642 250.34331 42.613022 250.06607 42.397915 249.79259 c
42.182774 249.51903 41.985107 249.24919 41.80341 248.98619 c
41.6217 248.72314 41.455933 248.4669 41.304234 248.21919 c
41.152554 247.97148 40.99966 247.70735 40.847958 247.42592 c
40.696289 247.14453 40.545792 246.84581 40.399925 246.52983 c
40.254105 246.21393 40.112904 245.88071 39.981007 245.53183 c
39.849159 245.18303 39.726627 244.81853 39.619316 244.4422 c
39.512039 244.06596 39.420025 243.67787 39.350071 243.28465 c
39.280113 242.89154 39.232296 242.49332 39.21349 242.09976 c
39.194637 241.70631 39.20491 241.31761 39.249958 240.94598 c
39.294907 240.57439 39.374741 240.22002 39.492317 239.89613 c
39.609741 239.57219 39.764973 239.27892 39.956741 239.02803 c
40.14835 238.77699 40.376472 238.56851 40.635357 238.41013 c
h
40.635357 238.41013 m
f
1 w
0 0 0 sc
0.85280597 -0.52222788 -0.52222788 -0.85280597 39.951824 551.9339 cm
164.3138 267.01801 m
164.61728 267.01813 164.9207 266.95947 165.21521 266.84543 c
165.50977 266.73163 165.7953 266.56259 166.06462 266.34766 c
166.33403 266.13284 166.58717 265.87231 166.81956 265.57889 c
167.05205 265.28549 167.26381 264.95938 167.4532 264.61398 c
167.64268 264.26855 167.80988 263.90396 167.95551 263.5322 c
168.1012 263.16031 168.2254 262.78128 168.33038 262.40442 c
168.43541 262.02744 168.52127 261.65259 168.59097 261.28629 c
168.66069 260.91989 168.71428 260.56198 168.75491 260.2164 c
168.79552 259.87076 168.82318 259.53741 168.84079 259.21826 c
168.85838 258.89902 168.86592 258.59393 168.86594 258.30347 c
168.86592 258.013 168.85838 257.70792 168.84079 257.38867 c
168.82318 257.06949 168.79552 256.73615 168.75491 256.3905 c
168.71428 256.04495 168.66069 255.68704 168.59097 255.32063 c
168.52127 254.95433 168.43541 254.57948 168.33038 254.2025 c
168.2254 253.82564 168.1012 253.44661 167.95551 253.07474 c
167.80988 252.70296 167.64268 252.33838 167.4532 251.99294 c
167.26381 251.64755 167.05205 251.32143 166.81956 251.02802 c
166.58717 250.73459 166.33403 250.47409 166.06462 250.25928 c
165.7953 250.04433 165.50977 249.87531 165.21521 249.76149 c
164.9207 249.64746 164.61728 249.58881 164.3138 249.58893 c
164.0103 249.58881 163.70688 249.64746 163.41237 249.76149 c
163.11781 249.87531 162.83228 250.04433 162.56297 250.25928 c
162.29355 250.47409 162.04041 250.73459 161.80803 251.02802 c
161.57553 251.32143 161.36378 251.64755 161.17438 251.99294 c
160.98489 252.33838 160.8177 252.70296 160.67207 253.07474 c
160.52638 253.44661 160.40218 253.82564 160.2972 254.2025 c
160.19217 254.57948 160.10632 254.95433 160.03661 255.32063 c
159.96689 255.68704 159.9133 256.04495 159.87268 256.3905 c
159.83206 256.73615 159.8044 257.06949 159.78679 257.38867 c
159.76921 257.70792 159.76166 258.013 159.76164 258.30347 c
159.76166 258.59393 159.76921 258.89902 159.78679 259.21826 c
159.8044 259.53741 159.83206 259.87076 159.87268 260.2164 c
159.9133 260.56198 159.96689 260.91989 160.03661 261.28629 c
160.10632 261.65259 160.19217 262.02744 160.2972 262.40442 c
160.40218 262.78128 160.52638 263.16031 160.67207 263.5322 c
160.8177 263.90396 160.98489 264.26855 161.17438 264.61398 c
161.36378 264.95938 161.57553 265.28549 161.80803 265.57889 c
162.04041 265.87231 162.29355 266.13284 162.56297 266.34766 c
162.83228 266.56259 163.11781 266.73163 163.41237 266.84543 c
163.70688 266.95947 164.0103 267.01813 164.3138 267.01801 c
h
164.3138 267.01801 m
S
CM
44.017628 240.76616 m
44.155334 240.68175 44.310913 240.6266 44.479309 240.60146 c
44.647667 240.5762 44.828747 240.5809 45.016441 240.61296 c
45.204147 240.64493 45.398384 240.70415 45.593227 240.78549 c
45.788113 240.86681 45.983547 240.97015 46.174706 241.08931 c
46.365921 241.20845 46.552845 241.34332 46.732178 241.48776 c
46.911564 241.63222 47.083374 241.78622 47.245811 241.94449 c
47.408295 242.1028 47.561428 242.26537 47.704636 242.42819 c
47.847874 242.59105 47.981209 242.75417 48.104897 242.91475 c
48.228603 243.07538 48.342686 243.23349 48.447887 243.38734 c
48.553101 243.54123 48.649452 243.69087 48.737923 243.83534 c
48.826385 243.97981 48.915882 244.13365 49.005127 244.29732 c
49.094349 244.46097 49.183323 244.63445 49.270161 244.81764 c
49.356976 245.00081 49.441658 245.19373 49.521614 245.39534 c
49.601543 245.59691 49.676743 245.80721 49.743896 246.0239 c
49.811028 246.24052 49.870098 246.46355 49.917236 246.68901 c
49.964371 246.9144 49.999531 247.1422 50.018742 247.36667 c
50.037975 247.59109 50.041195 247.81216 50.025036 248.02271 c
50.008934 248.23323 49.973385 248.43317 49.916531 248.61488 c
49.859764 248.79665 49.781651 248.96007 49.682621 249.09854 c
49.583687 249.23711 49.46384 249.35062 49.326057 249.43491 c
49.188351 249.51932 49.032768 249.57448 48.864372 249.59961 c
48.696014 249.62488 48.514938 249.62016 48.32724 249.5881 c
48.139534 249.55615 47.945297 249.49693 47.750454 249.41557 c
47.555569 249.33426 47.360134 249.23091 47.168976 249.11177 c
46.97776 248.99261 46.790836 248.85776 46.611504 248.71332 c
46.432117 248.56885 46.260307 248.41486 46.09787 248.25659 c
45.93539 248.09828 45.782253 247.9357 45.639046 247.77289 c
45.495808 247.61002 45.362473 247.4469 45.238785 247.28632 c
45.115078 247.1257 45.000996 246.96759 44.895794 246.81374 c
44.790581 246.65985 44.694233 246.51019 44.605759 246.36574 c
44.517296 246.22125 44.427799 246.06741 44.338554 245.90375 c
44.249336 245.74011 44.160358 245.56662 44.073521 245.38342 c
43.986706 245.20026 43.902023 245.00735 43.822067 244.80573 c
43.742138 244.60417 43.666939 244.39386 43.599785 244.17719 c
43.532654 243.96056 43.473587 243.73752 43.426449 243.51207 c
43.379314 243.28668 43.344151 243.05888 43.32494 242.8344 c
43.305706 242.60997 43.302486 242.38892 43.318645 242.17838 c
43.334747 241.96783 43.370296 241.76791 43.427151 241.5862 c
43.483917 241.40443 43.562031 241.241 43.66106 241.10252 c
43.759995 240.96396 43.879845 240.85045 44.017628 240.76616 c
h
44.017628 240.76616 m
f
0.85280597 -0.52222788 -0.52222788 -0.85280597 39.951824 551.9339 cm
165.96782 263.24243 m
166.12935 263.24252 166.29083 263.20831 166.44756 263.14178 c
166.60432 263.07541 166.75629 262.97684 166.89963 262.85147 c
167.04301 262.7262 167.17773 262.57425 167.30141 262.40314 c
167.42514 262.23203 167.53784 262.04181 167.63864 261.84036 c
167.73949 261.63892 167.82846 261.42627 167.90598 261.20944 c
167.98351 260.99255 168.04961 260.77151 168.10548 260.55173 c
168.16138 260.33185 168.20708 260.11325 168.24417 259.8996 c
168.28128 259.68591 168.3098 259.47717 168.33142 259.27563 c
168.35303 259.07404 168.36775 258.87964 168.37712 258.69348 c
168.38649 258.50729 168.3905 258.32938 168.3905 258.15994 c
168.3905 257.99054 168.38649 257.81262 168.37712 257.62643 c
168.36775 257.44028 168.35303 257.24588 168.33142 257.04428 c
168.3098 256.84274 168.28128 256.634 168.24417 256.42032 c
168.20708 256.20667 168.16138 255.98807 168.10548 255.7682 c
168.04961 255.5484 167.98351 255.32735 167.90598 255.11047 c
167.82846 254.89365 167.73949 254.681 167.63864 254.47954 c
167.53784 254.27811 167.42514 254.08791 167.30141 253.91678 c
167.17773 253.74565 167.04301 253.59372 166.89963 253.46843 c
166.75629 253.34308 166.60432 253.24449 166.44756 253.17812 c
166.29083 253.11162 166.12935 253.07739 165.96782 253.07747 c
165.8063 253.07739 165.64482 253.11162 165.48808 253.17812 c
165.33131 253.24449 165.17935 253.34308 165.03603 253.46843 c
164.89264 253.59372 164.7579 253.74565 164.63423 253.91678 c
164.5105 254.08791 164.3978 254.27811 164.297 254.47954 c
164.19615 254.681 164.10718 254.89365 164.02968 255.11047 c
163.95213 255.32735 163.88603 255.5484 163.83015 255.7682 c
163.77426 255.98807 163.72858 256.20667 163.69147 256.42032 c
163.65437 256.634 163.62584 256.84274 163.60423 257.04428 c
163.58261 257.24588 163.56789 257.44028 163.55852 257.62643 c
163.54916 257.81262 163.54514 257.99054 163.54514 258.15994 c
163.54514 258.32938 163.54916 258.50729 163.55852 258.69348 c
163.56789 258.87964 163.58261 259.07404 163.60423 259.27563 c
163.62584 259.47717 163.65437 259.68591 163.69147 259.8996 c
163.72858 260.11325 163.77426 260.33185 163.83015 260.55173 c
163.88603 260.77151 163.95213 260.99255 164.02968 261.20944 c
164.10718 261.42627 164.19615 261.63892 164.297 261.84036 c
164.3978 262.04181 164.5105 262.23203 164.63423 262.40314 c
164.7579 262.57425 164.89264 262.7262 165.03603 262.85147 c
165.17935 262.97684 165.33131 263.07541 165.48808 263.14178 c
165.64482 263.20831 165.8063 263.24252 165.96782 263.24243 c
h
165.96782 263.24243 m
S
Q
q
179.37724 73.145302 m
151.63951 106.50506 106.52042 95.058876 101.5479 58.231319 c
90.87207 -20.836182 147.35277 39.948021 162.82227 27.959324 c
169.69411 22.633728 218.49854 2.7483547 198.50427 47.441387 c
192.3157 61.274685 200.19193 54.571739 180.08438 72.556664 c
W
0 0 419.15167 286.45035 rc
26.410875 -125.24562 -140.90132 -29.712234 194.70412 115.5862 cm
BI
/Width 128
/Height 144
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JH16$JH5ZLm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<b
rW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<b
rW)<brW)<brW)Eequ?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<b
rW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBe
rW)<brW)<brW)<brW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
!<;HdrW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/I%c!<<,ds8E#bs8E#bs8E#bs8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab
!:9ab!:Kjfs8W&um/R%bm/R%bm/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)Kgr;Z`rm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#b
s8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rt
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<b
rW)otm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<b
rW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<b
rW)<brW)Eequ?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<b
rW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<b
rW)<brW)<brW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;Hd
rW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c
!<<,ds8E#bs8E#bs8E#bs8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab
!:Kjfs8W&um/R%bm/R%bm/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)Kgr;Z`rm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)Tjq>^Eom/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)]mpAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#b
s8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)ot
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<b
rr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<b
rW)Eequ?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<b
rW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<b
rW)<brW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<b
rW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,d
s8E#bs8E#bs8E#bs8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjf
s8W&um/R%bm/R%bm/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)Kgr;Z`rm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)Tjq>^Eom/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)]mpAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#b
s8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rt
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Ee
qu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<b
rW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<b
rW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<b
rW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#b
s8E#bs8E#bs8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&u
m/R%bm/R%bm/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kg
r;Z`rm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)Tjq>^Eom/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)]mpAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#b
s8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rtm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Eequ?Wq
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<brW)Nh
q#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<brW)<b
rW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<brW)<b
rW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#bs8E#b
s8E#bs8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%b
m/R%bm/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`r
m/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tj
q>^Eom/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)]mpAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#b
s8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Eequ?Wqm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<brW)Nhq#C<n
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<brW)<brW)Wk
p&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<brW)<brW)<b
rW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#bs8E#bs8E#b
s8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%bm/R%b
m/R%bm/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%b
m/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eo
m/R%bm/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]m
pAb*lm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)fpoDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#b
s8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Eequ?Wqm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<brW)<brW)Wkp&G!k
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<brW)<brW)<brW)`n
o)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#bs8E#bs8E#bs8E#b
s8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%bm/R%bm/R%b
m/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%b
m/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%b
m/R%bm/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*l
m/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)fp
oDedim/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)osnGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#b
s8E#bs8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Eequ?Wqm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<brW)<brW)Wkp&G!km/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<brW)<brW)<brW)`no)J[h
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#bs8E#bs8E#bs8E#bs8E#q
s6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%bm/R%bm/R%bm/R%b
m/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%bm/R%b
m/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R%b
m/R%bm/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%b
m/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)fpoDedi
m/R%bm/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)os
nGiIfm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rVurumJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<b!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#b
s8E#bs8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bnc/OerW)<brW)<brW)<brW)<brW)<brW)otm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)<brW)<brW)<brW)Eequ?Wqm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)<brW)<brW)<brW)Wkp&G!km/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)<brW)<brW)<brW)`no)J[hm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,ds8E#bs8E#bs8E#bs8E#bs8E#qs6p!e
!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%bm/R%bm/R%bm/R%bm/R%b
rr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%bm/R%bm/R%b
m/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R%bm/R%b
m/R%bm/R(brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bm/R%b
m/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)fpoDedim/R%b
m/R%bm/R%bm/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)osnGiIf
m/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brVuru
mJm.cm/R%bm/R%bm/R%bm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
!!!$"!:9ab!:9ab!:9ab!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#b
s8E#drrN0"rW)<brW)<brW)<brW)<brW)<brW)rtJ,
~> %APLeod
EI
Q
1.4173229 w
q
0 0 419.15167 286.45035 rc
0.20633496 -0.97848141 -0.97848141 -0.20633496 543.32538 405.91827 cm
250.51695 424.77917 m
212.15178 445.03674 214.04201 491.54669 249.05109 504.01102 c
324.21436 530.77155 276.39209 462.96429 291.31473 450.30136 c
297.9436 444.67627 327.47113 401.02509 279.61432 411.36734 c
264.80179 414.56848 272.98563 408.24478 251.23883 424.20871 c
S
1 0 0 -1 -116.56648 512.35754 cm
324.61176 296.04163 m
447.11911 302.375 459.38721 394.33295 474.78461 428.34778 c
474.78461 428.34778 474.78461 428.34778 474.78461 428.34778 c
S
384.83667 246.18942 m
507.34402 252.5228 519.61212 344.48074 535.00952 378.49557 c
535.00952 378.49557 535.00952 378.49557 535.00952 378.49557 c
S
325.14328 296.15491 m
383.99304 247.35297 l
S
475.57739 427.66855 m
534.42719 378.86664 l
S
2.1259842 w
264.12424 418.84137 m
428.38535 304.40091 l
S
CM
317.98703 212.25397 m
313.38297 205.71159 l
310.25476 210.20164 l
h
317.98703 212.25397 m
f
0.53149605 w
1 0 0 -1 -116.56648 512.35754 cm
434.55353 300.10358 m
429.94946 306.64594 l
426.82126 302.15588 l
h
434.55353 300.10358 m
S
2.1259842 w
262.87863 418.14301 m
173.98006 280.34576 l
S
CM
53.338207 238.32881 m
59.712788 233.4951 l
55.114368 230.52847 l
h
53.338207 238.32881 m
f
0.53149605 w
1 0 0 -1 -116.56648 512.35754 cm
169.90469 274.02872 m
176.27927 278.86246 l
171.68085 281.82907 l
h
169.90469 274.02872 m
S
2.1259842 w
277.71271 358.89465 m
263.65802 420.11917 l
S
CM
162.8282 160.78984 m
163.81302 152.85069 l
158.47943 154.07507 l
h
162.8282 160.78984 m
f
0.53149605 w
1 0 0 -1 -116.56648 512.35754 cm
279.39468 351.56769 m
280.37952 359.50687 l
275.0459 358.28247 l
h
279.39468 351.56769 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
186.45088 348.86041 m
(!)s
272.49997 343.21881 m
(")s
349.47534 382.0365 m
(#)s
1.4173229 w
0.60000002 i
419.73303 293.19617 m
437.27109 294.14453 439.02737 307.91437 441.23163 313.00778 c
441.23163 313.00778 441.23163 313.00778 441.23163 313.00778 c
S
428.35477 285.73126 m
445.89282 286.67963 447.64911 300.44946 449.85339 305.54288 c
449.85339 305.54288 449.85339 305.54288 449.85339 305.54288 c
S
419.80914 293.21313 m
428.23401 285.90549 l
S
441.34515 312.90607 m
449.77002 305.59845 l
S
0 i
/F2.1[ 36 0 0 -36 0 0]sf
244.65007 466.0943 m
(!)s
/F2.1[ 18 0 0 -18 0 0]sf
468.31635 391.26233 m
("#$%&)[ 5.994141 10.010742 5.000977 9.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
