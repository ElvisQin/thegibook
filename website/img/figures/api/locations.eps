%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12 (Build 16A313a) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 375 239
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 375 239
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SWBAKO+Helvetica
%!FontType1-1.0: SWBAKO+Helvetica 1.0000.0.0000
14 dict begin/FontName /SWBAKO+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /m put
dup 38 /period put
dup 39 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






03266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/period 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/m 6 def
/n 7 def
/u20B8 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C99D7B912F94734180BCB0A2B426ACDB993C61FD2485EFF51D552B79ED2E120C8C3A17A67DCF03E7412FCDB8DA0EBD8CAD34A1FBFAF2D47EFCA53DD53E2967F67FCD4065236863224C550BE9D0C09E6D9B421FD7EF2EA8B0086475827409633E8EF328B176403B67CD063CAEA63B654C02E612278A1D4676340C5385A64A491AB5E55C24179E24C93959BE807B5274188C3F7BBBF71FC47FD7FA4C21FCC1524AC48444806669E496A7EC9A82423E97B345FAA8C3F3034043442E98CEAECA1BA906C26BC5CF9A03E70723081A06D141155D4B670FB1FDAA28E744FC5214A676C616B8E36161456E4E83F7BE6CF2148A63B60B7BEE993571425634461F88D13E164F077EB9BBB4E3AF5EB16E21CD08EEF61B027328B28D430DFCC8D4F6DA5336F33AA6A835DB1AEC9EAB4656DDCB6DC6B6E535358B46EA4A2B9728CAF973B605E2404D936A20678B7050D432548A622938D4D4824A6741F89D5DA4CD2C1C19DC7230CD77555329FDBE9B82D4C0BA2D67E5CCE9774D06E3BBE270005E67DA390FB5037AF36902C7B23824E474D32C9D7BA17510BA2788CFB80B0F6A8C2E37DD2E1FF3E32FF53A2E715A2E6968B358E9031B9DB2E5A15F445F692EB80C98CBED38D052EB76D1D4301440D27CB74F70837DE50B07869119F439240D4B4C1CEB28D9B17FAE036F1D861C0F64979009458E3CAD23ACFAC7678A6BE56CB082B49E0D0CAA9B41100FAE2BA390769FFC0D0BF21A9B9168E983B08C885330BB1DC7C716E54C14B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SWBAKO+Helvetica cguidfix
/F1.1/SWBAKO+Helvetica renmfont
%RBIBeginFontSubset: ZQHEVU+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 9/20/16% Copyright 2016 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid18 putdup 2 /cid1153 putdup 3 /cid1154 putdup 4 /cid1586 putdup 5 /cid1602 putdup 6 /cid1869 putdup 7 /cid1874 putdup 8 /cid2386 putdup 9 /cid2562 putdup 10 /cid2642 putdup 11 /cid2676 putdup 12 /cid2820 putdup 13 /cid3352 putdup 14 /cid3524 putdup 15 /cid3587 putdup 16 /cid4457 putdup 17 /cid4550 putdup 18 /cid4696 putdup 19 /cid5462 putdup 20 /cid5471 putdup 21 /cid5544 putdup 22 /cid5899 putdup 23 /cid6685 putdup 24 /cid7169 putdup 25 /cid7598 putdup 26 /cid7631 putdup 27 /cid7687 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6CE8907ADDB044A0D44469293E6431077DC4F96365DB5E32FA0DEE7FA863F05EA4BFEEBDDDCE263120F00CB88471F30ACCCAD6D55C96DC4C68D0F3CD4538C04FE141681D4BFB614B9F5469D83D1A3EB7D6F68685542FCE978D9BA9F2FBB3CCD9E4AB8B372D821301019D315C8B4681BB527357B2CFFC9E5A239349F0CB5D10B4D1CB3BD1A7042A3E1CF8DFB94F1297E0DEE3251E29A2811B24265EEF75B86FE38A42A6456989DF5E6B1EFB729264ADF0F64EA6A0DDDBA6969A5440D430EDD09E988AE10B82C903DD3502C631FDEDF27CD070E1EE93229FF539C1244C26ED6EEA47C37DBD674BB8102511DA828DF80E85404B468BAC5F6CE33FC3DB879CA48221D9988A4AB5A2C484CBF56F05AFA6DEEF1990CF1E10FB2B94BDA4C3EBF70EC1FA8971263F9C0241B1A1733782779E80DECC1714253BE56A012693B607A67E0AEAD49A0EB54795B161B4C00457BEF7A9779F3933F3D389682D72A57BA60FAE1D6D885875C265E9D1C3D96A6F0ED828B662E69FA1E05F143D8DFD7290CF5EFFD0DE69A65F323BC594DCC31EF61C5D3BDC132E757741EDC70869E213693122C23BEFEF1608D3242FDE4F4D672E327E224A49DC7CDBCDD5E07A2586F5E7A2390CEC63FD33E2A40EC51665FCD833F13A5993BB63C8CBADC0E9D14DEB46C4AD0D21BF4399EC323E144DDB56E0BB19C2C414F090716445E57CC712894FAB1E82F0E269C066BEDE7224F65364DE3D0A2C89102DB627230D86B06E1AB791595F4F716778EDF750E4686D4EFF33B69B24158DBB37B3673A0401B98229B4FD1CC43730DA4908BFDC5D0DAA9D6FAA1CCA5AB6EA11F623DFFF95F5243526FD88405A309BB7F1E1842804D8289E13E0106207D41FAF883A6CFE847B08E6A9FF2C80A62F0C5DBF0BDC2C99A46F1527D91C0BB0F00ADC8185D4873E2AE85FF47E746D9BCDDECCE5CB2A103209595E2C9516C7978E6E87E1124F53F1D9DBC3150EE9865F050562C2046481A1B0ED498F4D53D84045E2466413FBDDA438F68F903DF0DF27236DC4198EDEB9CE3BCB605069673242CAFF6CC9F88B6AB00E8DB1E6385402452F2DE443128E5386C04A3DEBD389442471F8EEA68FE3EAE52A78CAF9CDE66303ECF70AC43BB1D4751FD76D0A7BED62CE001A2C4051D0D8AABF13E983FDEE1F145EA018DEEF045ACF230C6393C371CE8312CE9B603DE1CB1B3A28B21FBAD77115617E34B897ACB1A6B1175E4E41FB4F7090755FF6DF54A9C642D87BA2BFEF7202A04ECE4646141F7BB7555EDF566AF0CC1EF0AB0D99E703E7C82151AD2C6DB04671C9B0D95BD580323B01EB5F7839F443433BFBE67B135898DECCE04A797A661D286EE49FCD197240FFFA0FC65D8B88A90E0337D6C70E05A2582FACEAED6133385D651AD520E219A94DEF6AE3AA0268C74ADEE4EDC8874DE94FF2160FC24A2D2F7B56C51A00B2B8E7C0C1ECDFD1E4BB773E269AD50F99A86FFFE284227E447BB4C4D8441A622B8ED9E99D3D4470C2A23D83C28F6371186F20583F3B18CFA96D29AA0E2132C8819FDD617F2C1734D29BC6BC29E03013168CCD67C250609FDB678B99C3C6318A5201D7BAA7BF0DF52C999A7DEE670DDFD7CDF4DA5DAB2AF9150128799689BC81BE270403416EA866E3C1DDDE43EFD0A2420AB77F7CD8374D4D595BA7960A6EEE77A0B1A75DA632AF6B220AF18E1DE3F02D6992FE06DF042E43B7018AFB1916C825BF965C3B252EFD8BC21900F11F700B23BD7C01132D393037D03734581F15F888480312792A77DF8C6AC4E4F9B5E367A27E772281280B41FE300DB65C7FBE5814EBBE07D2B3428C5C781359585CF2CAB8F83607AB41415C3651282220C70925E6D64D5712C5026F468FBB5EF2C7807DEB2A2C3A5769B3CAC464A4F669CD40EEE499A26544B44BDDD2CA6D3EDFFDCBA96E70B1A6BF01293FBA4078CDF91EBD48D94A7056DD5A1FE67EDAA41FF6DDC0D22571C25E5A7481C4E8DD66CABBB76C9BC78C146C9DB2CAE18806D2A3EFC3A406B9D32AC20F8CC890179E563F595AD34DD0428B548D276A912BFD44B733D3BD4F1A2CC38BBDB4838F6461E222237E182DE1E66A5ED0785C3A363FB8CC5D2041098C936D4266ADA20EFAD3EF78A0EEF501F500CA062FCD9E3A6DE0F6068B92CFC826AD6EE6FF49D66E36FF48536C3DA700D21F0D8436D44FFEAC57091D21A8B755C0F914DCC84E8F3F3BB0BCB609377F21B944AE21F999A0A6221917CE50C46D9F74FC2A75DCEA09262D7B4DDDDC2913B9015759A339158D28BC8971908F40DBE9709573EBA02F49F92D994EBA7BFA669EBED7D2B60B671BFD6AA13083DFDB2C4D8CBC76D5F8C460A99C1CB2F9EEFD4A949C03221E1DFB1EA7055B5F15158E30D7A146A4075ECC59FA4D481B19A2079021D9FF520777EB03E832E73426F39935AE82BCA8ABDC1555BA12D4F2C1908CB15AFAD7B583421704EE75D0C57738C14833FD5F0E9F016C5949AB659B77D9BE181993C2F24F2FE91E8EF1CAA2050AE731BE2989C6E81A648673188E953D1DA0532357D568CB1369AEECE43905B9086674F20161A512ADE5806EDC2A480255AEC8F1E4D5068778CB250FD174423C65DF9E9121464F820D48391CBA0AC81BCB2C832EDEDF94393591DDFA71259618C63B3DB0D915EB36F803E961190A8AE6846051F01210EF930DE6D42CA9AA3A67678178CB66AE18BD5B04805E8D1412755BD695DCBA39103E33185BF7F63B4C7912CCA4AF4392356354FA69BA5934B47CFDA9C821512F838555DF977E0D77CC581A29F7AA5A950B5F348725F2E860F4ECCD3FFFA2A4390A69B537BCFDF434B06311C93D43C5A4037015A93AE87C4B60DBF19C2003DFB5396282ED11E59D700348A5057401FCADEE0D0CEBBC6F9C9FD920CF230B0ACD0D7AEF221FA4DFA28BD5E89A70F6E32CC5167C0FD1C7CD1AB304A5B407D0160F705763649032F492FB57B5018E163C56A943CA4CD641E456984106505D486A5E52B96402E4398FA86CEE454C62E34523090ACB14DAADA66D4AD37B102B8D763DA704ADF750F8C73D1FADB7B59902F6A825319C04BB9763DDBE15BE58AB33FA7843045F089D1A75728E57E21AAF0D70A45E1B6AA56A27F599AB7BF02D343E89F8261508057214E642B0A318F0459D833DE3345C67382EF5810D1B2516B0E813BC90F14E6EDD9476934ECB378477E397C776C572B735320F97131FBE3B90AC5ED1D5A0B4A29570A8F58C0BE9B29AB1CF1BBCFB2B7B15590A5CC638B451560B692B781611F88A4B57DC39AF18BF6137CCC10E934F0AFEB801AB15633759F9291826C5594F3BAA9FFFA5BED63CF63AA309381603C9A696C990381DFA0748683B24A4F7D40934D7119FE186EB70558AA1AA98F8645AB5AA23945A58D3477AB419F5E6479DA12CBA1B9F089E8B1F3B146975B5B268DF65E5672072C1D0D2126BF830B4162BA4D86C8FD6A31171966D8F95EC6203478FBBA8CEF67A906CEC65165F268107AEDAA4AF7CC255A66831817817AFA827376B99B26BBBB044E6BD3B9C71D4430FB2E7CBAF015B85902B651EF52795C81B7060ED3CD0832D076FF8EA5D2D3154E06CDD65B9AB01BAF364EA1F8F6AAD993F3ACAAA66BBB92900BE28D76847C58F993AF3A048BA87C874AEF84B0CFBCDB9BEBD17FA19771CB8058FB9C271E151B26F0F5273BA876E53674CD3CA0DDB250B23FA5734C0FABD870EE3CE3AE94FC9A11950EEB4A900781EB5BE37068667CC1883236C48225DF35AE1479E7B0AB3EE8858CA6E2A1100F0ABAC0EF8ED17D52B7F510747875101AC93958FC319AC883F962A95B16A9141AC09D59713E325AE82705A16F55D895A665FD84C39EDC1B6D92253D7F74497E81C3EE2D4527C6653DB2873C2F8E943758FA46E1B9539367665C5CD29EB157914AFA4E46DC8C99AD62855C52036959D92F4613567AD0654809924DB3737F550F54ED65633728640188F21C55B17EFD192B5135DB3BE500C6DA003E427AF1500955900CA935FF275FD004705C4E58B4A759F6DDD254A9FE37C543FD8D7AD7EF34E18B56AEF8432EBCC287D66026121B602A4F348305CA42BCBDA7ABD6FB5EC9FD9445F76196A64EEBA94ADF2DECA5E34D19B53FD5C17B05B18B8260E539849EECC61B4FFA8EA1F4EF0166A97F72B63B64A6DA7D8D80C396FBD031B8BB36FD384959173BD6E116ACBB966D918265B62E86DBDCB4B672A5DEBF7755B84D1A25B076137D06C8DF23C7C94A676FFC48AE0089F151AEB44BC65D222E0274DF5CA29DEE6DC448978A90891184FACEC4A19681C97BEE8F82F7A7160474DD15C7FBF98881C567DDE7AC97787407A097D9FB9F810C128C2C4ED851DB8DCEC6C239746E8B34D4457EAF4A1BB9CF0822CF7FC8254F2AA8F041A8ACA08D6004EAB05E713C3461EAE24D7BF397183F15DF64895CF88523AA48468E5A90088BD0AD0A387EC8F44A277511B2C448400EFF90EF68FA6EE6BAA84C85C06AF3F1DC5F10D031F4E85808543ECE802F148FC8B7B5DF75230FC570028D06D1A225822BE562148C12E4C949F78839E3C2111A05D71BC7990560456A39EB4BFD5FE4377E234D1194CD9284F34668D65A9363D80F0FFF673BC0B3BFE46FE3FEBF955D88A9A80A00DB7DBDE8669BDA7EF5CE4AF3B0A7379A57A25558D9111BB77DD7273A85C65E2E3456331AF8BDDB8427D87C84018C961CEF9840115E391C572FBF16A5D5EE1BEC0044B7DAA3DF5377A63DE34B1A818ADBBDC93FCC0C7875FF13AA9ED8C9EDE6E089EC8F5F702142F94CEBB3673C52284448FE8E119ABCE805307529B6901AF0BA3408853D73E5229EC894E991F0E8F2CE8518F956F1CAFE456E5190B48ED17DD037C1C27A444AEB343AA673AA3DEA56205CD54B4B48A9E30CD6B1FC633F13A125244008D315C4153C6FF49AC4613CCF1A28AA1C5B0DE2A65C2209CD1C4E562CF1BE7DB22EAEE4E0FFD45D5D8C2AC92E6A2D5A1341E90889EEA560A0A9F05EC208D339CA2DF8DB97909AAE215AAB294DCB65043B287BB0D82B9AD550832E26A4FEEA1199D7F38CF53110E98D302D162653FF4D5393812E94F8C003D774596FF80BF7A2B1C7885EE1BF022C26868FEAD77AD4FE962B807A5D42B2CB34927AE573C10670D85CAED01409C3D1998188F85F89574A5C401B44E4979ED6E560AF8E49F104BCDCA5C7AF7151641D1BDA0CE4E213C3873D65A05B316094DC876AFC25CF8BB73DF0A1AE84803598178EBD878B6EC0DC472F3D30CDEFD37B4122A3C670E8CC3D4313140DD3C1FA731E3F8AEAEB282DF2121EE903EC8042F3C4207296736825397D9FD6992C114D3EB90C0126DADBE5B53A86EEE27B0ABD6DD524A4684B6796F9965535181D497DDA473336B9F2D616DD2741003BF7D51D5B328F7419C3467A98E7FD00B12B8639D132BB3FBE1A510D9B65BB46C247075420291422F97ACF602F21C59F6FF1654BF20FC12F72AA047DFDE296A4547DAAC50A249CFF582175FFBC72FD746C683CF8E76FE350CAEDA318870CC31FBFFEF94BEDD9FC2F0AC0509D47622CAA69D275991CFA500596CE078624F1961E0F551387EBABA6BA5D044C3F19335392D85E2DF92505206BCB0A0FA7332AAF569948EC5DB094AE60D4FD469E0CECBE5EBF728245F1EE87CE27D35936A4710C8E18BDF046EE13797A7C0BF480382159A7521CBD6DCD5CBC16CAD0CD6B9621540B58955458754DB114CBA3CCCC9DA5B4C8A87EB9C9452F24E053176BD6E1C4461D1C79E8856A24EA83EBABD86DFE50DD6650F2821D7F3E7B96EF2918B10944FD9A828380E5C3E5A2C2B246E2BBED6AA79D57FE43ADD82A7957816F4BB9262E8279CE26DC435A471359B77B17A4A06A3D15689B28903731A77991A29CC2581F6E4B3356E3A5BAEBDBEEC2574FA5609E49D60EE6662CA38E730985A33B058D551BD1CE6512A9746DDCFFB7B4469CE1E353F710E6FD3FFB9ECED0CE0C2ED276C8288817AF343DB0721F3D0B687E42AAE8F035395B39D6C6950C1118B50203AA508836D460C05277F20BB9759DF635DCFAD593491578AAB707B444AAAA5ECD517155AFF1CE196EACC2D0DCD2A4C3E42359800378C7F4C4BBC7EC899F5DBB659D640AE1AC611AE597390789450EC8643435FCEA039A045BA12070B76788348726D23BA136829047F650F05528DB1DCAB76C8BD85D63F2EF81986C307F052037739E141A74174B25B7ACD715AC93FC62FE839CAEC0002E3101B67F70BAFBDD8A545A09E2CE6A1031C9B75F1D6376939B24353F5EC773BFED1681E7EE29D3EE6B8A5333D58B30BF0D5D930E2E2A75C57AA23F0BC84E25977A6C9387A9A487712ABF59DC2BC680A16DCD299B114CA1B477DCAD920D41885120556BB7CA1D22E5372AFBC87ED904B652295D9696EEFF8DD05F71519971E1BCAE9B1FA45DE5CB6FD8625990FD946BBF54F05485E0A669CB0F0952DBE04B98AB2C621D1971784FF6FDA3D50F1E9B67F2B44615B72C93190C1FBEA83DEB7C35866993E8F1AB790677198837BC76BEEF9F960AF2D23D8E136762F09E331706A88084624B2B4AF8A16B124E23FAC865BE0C620D3A23031291FDA7248E74CF146D9FFA834A3412B4E641EF374FA5F35C96628D6B3170C736D40E2B2C341487997B0E197D586434BAD8959F8351D77277D7689C54114563C028F785E5B426A0388A1464941F1814D2D0DE84DC4125BE32E1F1E6F8EB81C94AE78916051E3F7A3588ECED0014313145B7BA7447A422CA9F972A7F072DA4276D768187082B24092BE96F04FC00EA204F5A07569BF16F822BF1E3B55D5F23298F97F50EBD686C21C6DA193CC9FD2D091BDFF1638336A250F951570720B28810AB099B2DA499E277B282D15A5BA2830A958B61B834B73358C34CCAE22C67EDCE550D16BE87160BCE4DA43EEE68B9219A5F7AC64145377389A0CD5ADF16E95ECEBAC7FA4ED3374CE30717764332EFB0D17C742914ABDABB1BDC8256FC659936B9B47B4D486134ADA6BDB89DE5F39CB142FEB9E57662FA866BD2E1D78A4EE66ABCF7D44B8D18585286D68FF535DDCA90CEEB7FF895F603C788F186C034FDF83793F3E5099217C8FAFF4411EF6646A2536CC019A1D706527F374D77C0FA3DCBCEE61DD2E6160FE4BE10B4E429D9FC61043C13AB56A12EE08F7A94BE7506A92A7130EACE0285AF16D3CAFDFB992F2E0CBFAD9B13917BDFFD321C9EBCF79ADB2BFFE8348ECB9E07006F182E7E4927BB49D4859811A3A7B55EC0ABC8B4EE7FA5904CF74FD6C3396AB329CFA81A37DE7F324990FEB0D16002B9E4F754CC08C127EFEBBCE40DB7F02A6183403C05E2E26813977F1B9A47172EF12E0B95EEFD9E23DED68835E9538874B915D947E93931B3D99BF6BDBD75A1E6A2F1A74A40130F04E695CA960A15BAA1C7089584C552C2BC5EA9544830135F2D5E53989BFC496A32D678AE951F233004E0B62157658A793D7E1D26A7AF87AADEE56688E20C6326DD69802A407A8CF5D6AB3E1A9C1E0A6987BAE78A01CD745119ABDF2D7DC22C60824B459764B222080A81A722D88FC0509CD5D561AE81A104221C9323CDC8D90D85E9D786EF2CCB0443A48915BEE0333171293C7AFDD7E64965824CA4E8A291D1995F30DE7DB6D341102703D7E857B878C072A1A736C512D2C3EB9347A0A3EE5C971F4B864CC13C3A7243160E5D26EF5212F93BB9E237CCEF213426391C8D783CCBBBE88593A96DE39653F7AF59164CF3399EC9B81196A2ADFA40FC635EB838A82755700EBDF190314A1E2CFB2DE17C7CB3072888E680C2DCAB02DAA9E07BEAA9CD35BF47C4704BD71C6209756959484613195EF383B24DE1B30BBF3B6A345E0E1BC5C09D39846122B7885159072868BB83DE22B03718B950E7EBCFA8C5AAA990DD01BAF3FC55A92EB9ACBDBF3BB402092DEB6C351801390C4AA60F1ED0A5CE2FBF6907098AE74D9A15A2E49ABA0DE7198EDFA39D2D7ABC4F7ABAE17FFDDA78A6DAA5AF1ECCD31E129AC7EE8221DBD81872B50538306D1A78238F3E35CA444BE3BD928F6D372FED1565CAFB3523992C6B0209656B27636A3AB7844561313526B4DE0EDFCF8CB4CFEAA2691D8549D76676B79EB4E330B508694B31B64C80C4BA6DC6E05090CE339776A5AFB8D0E10C6B678D4E7227F38A32B02F9785360BF33814772DF0336ACE5098B3E1FE961CAB1434B83FE1694D0DF0ED1B25D905157604445063EE3855BD8139EA7672108E4EFF1F0D89F993897D979F2B6D1548883F178F2B9823E31AC3BD048F40649E431AC6603169576BACDC87CBF20911426FC0D63EC8C34C66921F35E9CDCE3F014362C1E8B01697F21652E87583DB9B1ABB6B4B6676CCE0356D37D713C6A1BB0114902C69B6ABD7DFC7B24567617123AC5F0948B7B616DCBDE0DE680C48720FF6C3728E472BBCEA23DF9DB35595DD051C3B6DB467A36BEB4CC9B93691BBB920CFE26E4111EBFB80E0460E561DBCBABDD14E4AB36BC3ED8D3998571FAE33BF5FAAF0FC053E222283053F42FCBCAD7FE46C73B9F2466A1AA7ED9D2D94142352D67BC5AA365B381E0EC31CDC6FCD97EB3728FF6ECE5EEF0D31270AF674194967674D8A9F4CA42895641331BDA700C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: ZQHEVU+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /ZQHEVU+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid2820 putdup 34 /cid5544 putdup 35 /cid2562 putdup 36 /cid7598 putdup 37 /cid4457 putdup 38 /cid2386 putdup 39 /cid4696 putdup 40 /cid4550 putdup 41 /cid1586 putdup 42 /cid3587 putdup 43 /cid1874 putdup 44 /cid7169 putdup 45 /cid7631 putdup 46 /cid5899 putdup 47 /cid3352 putdup 48 /cid1869 putdup 49 /cid7687 putdup 50 /cid1602 putdup 51 /cid2676 putdup 52 /cid18 putdup 53 /cid1153 putdup 54 /cid2642 putdup 55 /cid6685 putdup 56 /cid1154 putdup 57 /cid3524 putdup 58 /cid5471 putdup 59 /cid5462 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 29 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid18 {(\001) 0 $SP} putdup /cid1153 {(\002) 0 $SP} putdup /cid1154 {(\003) 0 $SP} putdup /cid1586 {(\004) 0 $SP} putdup /cid1602 {(\005) 0 $SP} putdup /cid1869 {(\006) 0 $SP} putdup /cid1874 {(\007) 0 $SP} putdup /cid2386 {(\010) 0 $SP} putdup /cid2562 {(\011) 0 $SP} putdup /cid2642 {(\012) 0 $SP} putdup /cid2676 {(\013) 0 $SP} putdup /cid2820 {(\014) 0 $SP} putdup /cid3352 {(\015) 0 $SP} putdup /cid3524 {(\016) 0 $SP} putdup /cid3587 {(\017) 0 $SP} putdup /cid4457 {(\020) 0 $SP} putdup /cid4550 {(\021) 0 $SP} putdup /cid4696 {(\022) 0 $SP} putdup /cid5462 {(\023) 0 $SP} putdup /cid5471 {(\024) 0 $SP} putdup /cid5544 {(\025) 0 $SP} putdup /cid5899 {(\026) 0 $SP} putdup /cid6685 {(\027) 0 $SP} putdup /cid7169 {(\030) 0 $SP} putdup /cid7598 {(\031) 0 $SP} putdup /cid7631 {(\032) 0 $SP} putdup /cid7687 {(\033) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/ZQHEVU+PingFangSC-Regular cguidfix
/F2.1/ZQHEVU+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 374.56387 238.71213 rc
1 0 0 -1 -80.721275 280.17477 cm
163.09714 127.26799 m
250.80916 127.26799 l
250.80916 201.70064 l
163.09714 201.70064 l
h
163.09714 127.26799 m
S
170.3185 71.789116 m
170.3185 115.44299 l
S
CM
89.597221 157.21423 m
86.861061 164.73178 l
92.333382 164.73178 l
h
89.597221 157.21423 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
170.3185 122.96053 m
167.58234 115.44299 l
173.05466 115.44299 l
h
170.3185 122.96053 m
S
1 w
198.66496 71.789116 m
198.66496 115.44299 l
S
CM
117.94368 157.21423 m
115.20752 164.73178 l
120.67984 164.73178 l
h
117.94368 157.21423 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
198.66496 122.96053 m
195.9288 115.44299 l
201.40112 115.44299 l
h
198.66496 122.96053 m
S
1 w
227.01141 71.789116 m
227.01141 115.44299 l
S
CM
146.29013 157.21423 m
143.55397 164.73178 l
149.02629 164.73178 l
h
146.29013 157.21423 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
227.01141 122.96053 m
224.27525 115.44299 l
229.74757 115.44299 l
h
227.01141 122.96053 m
S
1 w
255.35788 71.789116 m
255.35788 115.44299 l
S
CM
174.6366 157.21423 m
171.90044 164.73178 l
177.37276 164.73178 l
h
174.6366 157.21423 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
255.35788 122.96053 m
252.6217 115.44299 l
258.09402 115.44299 l
h
255.35788 122.96053 m
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
174.21057 86.332962 m
(!)s
202.564 86.332962 m
(")s
231.32167 86.332962 m
(#)s
258.07629 86.332962 m
($)s
1 w
0.60000002 i
320.61041 71.789116 m
320.61041 115.44299 l
S
CM
239.88911 157.21423 m
237.15295 164.73178 l
242.62527 164.73178 l
h
239.88911 157.21423 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
320.61041 122.96053 m
317.87424 115.44299 l
323.34656 115.44299 l
h
320.61041 122.96053 m
S
0 i
324.19861 86.332962 m
(%)s
279.63358 103.18961 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
1 w
0.60000002 i
288.26236 127.26799 m
375.9744 127.26799 l
375.9744 201.70064 l
288.26236 201.70064 l
h
288.26236 127.26799 m
S
117.38299 135.15242 m
153.1494 135.15242 l
S
CM
79.945656 145.02235 m
72.428116 142.28618 l
72.428116 147.75851 l
h
79.945656 145.02235 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
160.66693 135.15242 m
153.1494 137.88858 l
153.1494 132.41626 l
h
160.66693 135.15242 m
S
1 w
117.38299 147.66895 m
153.1494 147.66895 l
S
CM
79.945656 132.50583 m
72.428116 129.76967 l
72.428116 135.24199 l
h
79.945656 132.50583 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
160.66693 147.66895 m
153.1494 150.40511 l
153.1494 144.93279 l
h
160.66693 147.66895 m
S
1 w
117.38299 160.18547 m
153.1494 160.18547 l
S
CM
79.945656 119.9893 m
72.428116 117.25314 l
72.428116 122.72546 l
h
79.945656 119.9893 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
160.66693 160.18547 m
153.1494 162.92163 l
153.1494 157.4493 l
h
160.66693 160.18547 m
S
1 w
117.38299 195.23174 m
153.1494 195.23174 l
S
CM
79.945656 84.943031 m
72.428116 82.206871 l
72.428116 87.679192 l
h
79.945656 84.943031 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
160.66693 195.23174 m
153.1494 197.9679 l
153.1494 192.49557 l
h
160.66693 195.23174 m
S
0 i
126.12362 132.17094 m
(!)s
0.99185848 0 0 -1 -79.738068 280.17477 cm
125.76503 145.90353 m
(")s
1 0 0 -1 -80.721275 280.17477 cm
126.09393 159.04997 m
(#)s
127.07376 191.53746 m
(')s
0 -1 -1 0 236.34709 240.36563 cm
128.77766 175.43875 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
0.60000002 i
0.81568629 0.81568629 0.81568629 sc
CM
342.27512 152.90677 m
374.06387 152.90677 l
374.06387 78.474129 l
342.27512 78.474129 l
h
342.27512 152.90677 m
f
1 w
0 0 0 sc
1 0 0 -1 -80.721275 280.17477 cm
422.9964 127.26799 m
454.78516 127.26799 l
454.78516 201.70064 l
422.9964 201.70064 l
h
422.9964 127.26799 m
S
0 i
/F2.1[ 12 0 0 -12 0 0]sf
433.04077 151.98431 m
(!)s
433.04077 168.98431 m
(")s
433.04077 185.98431 m
(#)s
184.24118 166.73059 m
($%&')[ 12.000000 12.000000 12.000000 0.000000 ] xS
310.04501 168.1149 m
(\(\)&')[ 12.000000 12.000000 12.000000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
251.73996 135.50871 m
280.81793 135.50871 l
S
CM
207.61421 144.66605 m
200.09666 141.92989 l
200.09666 147.40221 l
h
207.61421 144.66605 m
f
0.25 w
[] 0 d
1 0 0 -1 -80.721275 280.17477 cm
288.33548 135.50871 m
280.81793 138.24487 l
280.81793 132.77255 l
h
288.33548 135.50871 m
S
1 w
[
4
4
] 0 d
251.44975 148.31075 m
280.81793 148.31075 l
S
CM
207.61421 131.86401 m
200.09666 129.12785 l
200.09666 134.60017 l
h
207.61421 131.86401 m
f
0.25 w
[] 0 d
1 0 0 -1 -80.721275 280.17477 cm
288.33548 148.31075 m
280.81793 151.04691 l
280.81793 145.57458 l
h
288.33548 148.31075 m
S
1 w
[
4
4
] 0 d
250.79622 160.18547 m
280.81793 160.18547 l
S
CM
207.61421 119.9893 m
200.09666 117.25314 l
200.09666 122.72546 l
h
207.61421 119.9893 m
f
0.25 w
[] 0 d
1 0 0 -1 -80.721275 280.17477 cm
288.33548 160.18547 m
280.81793 162.92163 l
280.81793 157.4493 l
h
288.33548 160.18547 m
S
1 w
[
4
4
] 0 d
251.53201 196.00829 m
280.81793 196.00829 l
S
CM
207.61421 84.166473 m
200.09666 81.430305 l
200.09666 86.902634 l
h
207.61421 84.166473 m
f
0.25 w
[] 0 d
1 0 0 -1 -80.721275 280.17477 cm
288.33548 196.00829 m
280.81793 198.74445 l
280.81793 193.27213 l
h
288.33548 196.00829 m
S
0 i
0 -1 -1 0 364.01562 368.03418 cm
/F1.1[ 12 0 0 -12 0 0]sf
256.4462 175.43875 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
1 0 0 -1 -80.721275 280.17477 cm
/F2.1[ 12 0 0 -12 0 0]sf
249.40831 214.03473 m
(*+,)[ 12.000000 12.000000 0.000000 ] xS
1 w
0.60000002 i
377.72668 135.15242 m
413.4931 135.15242 l
S
CM
340.28937 145.02235 m
332.77182 142.28618 l
332.77182 147.75851 l
h
340.28937 145.02235 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
421.01065 135.15242 m
413.4931 137.88858 l
413.4931 132.41626 l
h
421.01065 135.15242 m
S
1 w
377.72668 147.66895 m
413.4931 147.66895 l
S
CM
340.28937 132.50583 m
332.77182 129.76967 l
332.77182 135.24199 l
h
340.28937 132.50583 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
421.01065 147.66895 m
413.4931 150.40511 l
413.4931 144.93279 l
h
421.01065 147.66895 m
S
1 w
377.72668 160.18547 m
413.4931 160.18547 l
S
CM
340.28937 119.9893 m
332.77182 117.25314 l
332.77182 122.72546 l
h
340.28937 119.9893 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
421.01065 160.18547 m
413.4931 162.92163 l
413.4931 157.4493 l
h
421.01065 160.18547 m
S
1 w
377.72668 195.23174 m
413.4931 195.23174 l
S
CM
340.28937 84.943031 m
332.77182 82.206871 l
332.77182 87.679192 l
h
340.28937 84.943031 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
421.01065 195.23174 m
413.4931 197.9679 l
413.4931 192.49557 l
h
421.01065 195.23174 m
S
0 i
386.31085 214.17635 m
(-.)[ 12.000000 0.000000 ] xS
1 w
0.60000002 i
197.08339 206.077 m
197.08339 241.8434 l
S
CM
116.36211 30.813822 m
113.62594 38.331364 l
119.09827 38.331364 l
h
116.36211 30.813822 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
197.08339 249.36093 m
194.34721 241.8434 l
199.81955 241.8434 l
h
197.08339 249.36093 m
S
1 w
184.56686 206.077 m
184.56686 241.8434 l
S
CM
103.84558 30.813822 m
101.10942 38.331364 l
106.58174 38.331364 l
h
103.84558 30.813822 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
184.56686 249.36093 m
181.8307 241.8434 l
187.30302 241.8434 l
h
184.56686 249.36093 m
S
1 w
172.05034 206.077 m
172.05034 241.8434 l
S
CM
91.329056 30.813822 m
88.592896 38.331364 l
94.065216 38.331364 l
h
91.329056 30.813822 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
172.05034 249.36093 m
169.31418 241.8434 l
174.7865 241.8434 l
h
172.05034 249.36093 m
S
1 w
231.58757 206.077 m
231.58757 241.8434 l
S
CM
150.8663 30.813822 m
148.13014 38.331364 l
153.60246 38.331364 l
h
150.8663 30.813822 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
231.58757 249.36093 m
228.85141 241.8434 l
234.32373 241.8434 l
h
231.58757 249.36093 m
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
173.73241 237.537 m
(!)s
186.52052 238.32425 m
(")s
200.14915 238.22047 m
(#)s
235.0464 239.12753 m
(')s
200.52969 224.26253 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
0.60000002 i
0.81568629 0.81568629 0.81568629 sc
CM
84.395668 27.881413 m
167.7229 27.881413 l
167.7229 2.1319289 l
84.395668 2.1319289 l
h
84.395668 27.881413 m
f
1 w
0 0 0 sc
1 0 0 -1 -80.721275 280.17477 cm
165.11694 252.29335 m
248.44417 252.29335 l
248.44417 278.04285 l
165.11694 278.04285 l
h
165.11694 252.29335 m
S
0 i
/F2.1[ 12 0 0 -12 0 0]sf
170.93056 269.66809 m
(+/01"#)[ 12.000000 12.000000 12.000000 12.000000 12.000000 0.000000 ] xS
0.60000002 i
0.37499422 0.60620886 0.75294119 sc
CM
82.705704 238.21213 m
246.28358 238.21213 l
246.28358 212.46265 l
82.705704 212.46265 l
h
82.705704 238.21213 m
f
0 0 0 sc
1 0 0 -1 -80.721275 280.17477 cm
163.42699 41.962635 m
327.00485 41.962635 l
327.00485 67.71212 l
163.42699 67.71212 l
h
163.42699 41.962635 m
S
0 i
170.36592 59.337376 m
(234"#+,5"#678)[ 12.000000 12.000000 6.000000 12.000000 12.000000 12.000000 12.000000 12.000000 12.000000 12.000000 12.000000 12.000000 0.000000 ] xS
0.60000002 i
0.81568629 0.81568629 0.81568629 sc
CM
0.5 152.17075 m
35.251106 152.17075 l
35.251106 75.039963 l
0.5 75.039963 l
h
0.5 152.17075 m
f
0 0 0 sc
1 0 0 -1 -80.721275 280.17477 cm
81.221275 128.00401 m
115.97238 128.00401 l
115.97238 205.1348 l
81.221275 205.1348 l
h
81.221275 128.00401 m
S
0 i
86.746834 154.06941 m
($%)[ 12.000000 0.000000 ] xS
86.746834 171.06941 m
(9:)[ 12.000000 0.000000 ] xS
86.746834 188.06941 m
("#)[ 12.000000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
388.97061 132.17094 m
(!)s
388.31055 146.0354 m
(")s
388.94092 159.04997 m
(#)s
389.92078 191.53746 m
(')s
0 -1 -1 0 499.19409 503.21265 cm
391.62466 175.43875 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
0.60000002 i
1 0.84350634 0.74901962 sc
CM
211.12592 26.249483 m
292.12576 26.249483 l
292.12576 0.5 l
211.12592 0.5 l
h
211.12592 26.249483 m
f
0 0 0 sc
1 0 0 -1 -80.721275 280.17477 cm
291.8472 253.92528 m
372.84705 253.92528 l
372.84705 279.67477 l
291.8472 279.67477 l
h
291.8472 253.92528 m
S
0 i
/F2.1[ 12 0 0 -12 0 0]sf
320.49713 271.30002 m
(;')[ 12.000000 0.000000 ] xS
0.60000002 i
246.20702 208.87982 m
324.94476 252.02884 l
S
CM
158.89322 74.907707 m
166.80067 73.694427 l
164.17081 68.895462 l
h
158.89322 74.907707 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
239.6145 205.26704 m
247.52196 206.48033 l
244.89207 211.2793 l
h
239.6145 205.26704 m
S
1 w
191.53915 206.48378 m
296.38333 251.03439 l
S
CM
103.89906 76.630943 m
111.88793 76.209229 l
109.74782 71.172737 l
h
103.89906 76.630943 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
184.62033 203.54382 m
192.60921 203.96553 l
190.46909 209.00203 l
h
184.62033 203.54382 m
S
1 w
334.74655 212.23186 m
336.83319 252.01189 l
S
CM
253.63148 75.450127 m
256.75766 68.086227 l
251.29286 67.799576 l
h
253.63148 75.450127 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
334.35275 204.72464 m
337.47894 212.08853 l
332.01413 212.37518 l
h
334.35275 204.72464 m
S
1 w
367.41418 213.1689 m
363.71796 252.02655 l
S
CM
287.40479 74.489624 m
289.41678 66.746765 l
283.96906 67.264969 l
h
287.40479 74.489624 m
f
0.25 w
1 0 0 -1 -80.721275 280.17477 cm
368.12607 205.68513 m
370.13806 213.42799 l
364.69034 212.90979 l
h
368.12607 205.68513 m
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
341.60327 235.52579 m
(&&&&&&)[ 3.333984 3.333984 3.333984 3.333984 3.333984 0.000000 ] xS
278.45258 239.53465 m
(!)s
303.48563 239.53465 m
(")s
327.37228 239.30618 m
(#)s
369.92847 239.30618 m
(')s
ep
end
%%Trailer
%%EOF
