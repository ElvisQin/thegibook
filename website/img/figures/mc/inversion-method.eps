%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 272 206
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 272 206
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TGBNGE+TimesNewRomanPS-ItalicMT
%!FontType1-1.0: TGBNGE+TimesNewRomanPS-ItalicMT 1.0000.5.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /TGBNGE+TimesNewRomanPS-ItalicMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /x put
dup 34 /y put
dup 35 /d put
dup 36 /P put
dup 37 /parenleft put
dup 38 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1019 1 index div -628 2 index div 2770 3 index div 2096 5 -1 roll div]cvx def
/sfnts [<

01150121012701450145015501570158015E01610168017D01A301AB01DA01EE021002180222028F029402A302D202E703710393039B03B303D303FE04FF050B05320532054B0559058B05AB05F2065506890742076207A708CCFD2AFDC8FDDEFE0CFE15FE27FE53FE84FEBBFF58FF76FF77FFA1FFA7FFADFFAFFFC00000000000030094001D001F002000200027002E0048004B004C005E005F006B0071007C008A00900091009100A700AF00B300B400C400C600D100D200DE00DF00DF00E600E800EA00EB00F200F500F500FC010201180123013101330137015C016201660170017A017A017A018201980199019B01B001BF01C001CA01D301D701D801E001E001F601F701F802120213022F023702440247024F0252026302650270027F0298029B02A602B702BA02C502CF02D602D702E502FE031C031D03450348035D035E03710379038103A103B703D403D503D803E103F803FE0404041F042104230425043A0467048304E00528054B0564056A059F059F05C2060B066A06AF06B306CB06E8070607280748075007A607B207FF009500AF00920096000000000000000000000000017E01A80129025B0212020301C302B4019301CD02B204ED020E0159017A0300022D042C00C8004D00E602890325013E0378011B00F1018D00490203007C000E029D02470024000000000052004400330038005405D3041501A7000002860168005000CF0002004B0024008800BA0025FFD800110091FF6B00B5011700260065FF9900490080014B01C000F40167027102EA04FC0310017C01E103D9015501E601EE0434019606CB005C022B0099003D009F00160039002700DE00790120022E005A00990388009400210019002A046C05E8000001F203B200AA0296028902B4FFC9020000EC0005005A0447010004E00000052A001F01EB00AE016800CA02D3028901B5040601A1014F014B011C0308005E00C70024029D006503750104028002F304D800D90239025A032C01F204310303005002E50283005901EB010800AC019602F8012100950180004400E501EB02E5007400F301FF02FD038F026801C801C70116022B0142033000FE02E101620200002400EE05170108023700660006010201E602AA0366019B00D305C203DC044D03B6000401BE013702FC03200244014D0338FFED002506F8030DFED5FF43004402FFFF92040BFDEF0155017100D9FFC4032D0461044AFBB5FBCF02170192036D0558FFF2FE7D0583023E006605E9073D00790243002500CF00FD00AF002A01EF021A0026001F0025003A000001170490FBFB0251001D02F001F50078018F005F00240044005400BF00AF006701A8002600050006003F009800FA02AB00C2004D0375004A00B600C401BF017C006F00130263000C006801520002012E0104001F001F009A000000F1







2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B004BB02A534BB03F515A58B1070745B04060445973732B2B451869442B2B752B2B4518694475752B2B752B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B2B2B451869442B002B732B2B2B2B2B2B2B2B2B012B2B2B007373732B2B2B01435C58B8FFDEB31E1C3318B8037FB52B3318262B33B9FFF00381B112332B2B2B2B590173742B2B2B002B73752B2B732B2B2B2B2B73752B2B2B2B732B000000
00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/P 3 def
/d 4 def
/i 5 def
/x 6 def
/y 7 def
/acute 8 def
/glyph2498 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1019 -628 2770 2096}def
/UniqueID 4451677 def
currentdict currentfile eexec

5B5D13B5F91EAA46E3B99276EE14255DEF44A92DEB6E35A5290F230EF5EA06F47CA0B4B3684FA657C798CF7E8CA222AD6316A3F53E9A241A620494B42D611329CFA49F7B258E3D33A1D4678674CC9053731562D0126D1054F9FF08726C339E99D8DF6232D1F9D38A832476F0C90AE46B542DF8F3DB47BA854D2D733DDA81B1A15E83361EF8A5FA9165168279A89EC9CA6E7D036A5209E3D6A15275FFE7BEF5CE577BB0DE0320B8891BA3A84EB53423DFD4FE3E71B7AB3FEB6A42725954F0D21E6E0261B175A61ACE3D84E5DFC483FCFE485A42669DF581A0B103F99B75420F16180AC843008775EA926C049CCF21733BA5AB36CC4A0BB44CD5A1E661DD6E828A3097BAA015F9CB0DE9A3535A69CDA0B38F79AF1FDD555B6869E6CA01A3F8244A9150D2EADEAC225E91D3734EE9651823FF951254AC9B1EB1D499D729608C26C62822F56814B2756C3443CF1A37462738B2E4E18D23A548FA8ACC1A895C28E8B823E13DA780834150A580427C02F306E7165BB3FC68DC49B4402499BCFA3DB897F38860D50693ABA78F8955BEA510D40179DBF4D9AB80C81DCA68FE7989B16BAE15D43AA730DEB487CBA0AC04566384CF9337120836F31B8DF7006D1914E476DCFDE5535F7FF91BFF9608C12DD6CD510D1A736AB7364B66D92E73065C1C77C4DF208835D6DCB5C7319376244C789585A6D6FB7AF9D46A944629F0E786223C6D7A038512A08684BA9515722B2385590636EE5E61D9117818A03C0B23685A65C7414BE9918655542F26F969FECC74DAD0B7E1BE3110632DFDDCDA38E9628E74C3C7183F169C66B24E0942B26C31BFF61BB6B32B6A2193C37951BBFB398BC57F3FC500274C0E6B3BDC120ED7F4A3FBD6D8B1407005C6C15D02AECC8839DBF74366FF808FD40B4ADDE26AD966DCC899AC32A2D92B9A5DD2B85E55FD9C7C2CC42038A9C1C8BBFB5B04849832165E7EB7E9CA25C4437DCCF302CE3A13C77ACED671DFC91CF8BCF47CEC3AE19D58CA7B61F693E3E49DBA9E513CFEDEAAF405DB9094697ED288B47FC0E938C8261185C3120C10B1F8FDE641891BEC011E9B517A1D1C4AAC5B39BE6F9483876221D252758CCA3A5428400750BB2EF15C3200D9B980F7B84EDB8B17976D2251C2C7F915AE900571727C8BD5F21309E221E111D072627C40928F6860186F66C2BE78F5683BB183D2CCCC001BF0FACB615105BF2BF7B3ACC5E7C5CB599BF3D8CB901A0F6945ADA7DDB9A34632521E61FC59EC808A10B83E725BC3A2E7B034DF1C6A1C6E1AC07153AAA73D4958AB35ECD8AB70C192900055BD6C4CBFDC34A9C7E8DBA79748B61F5EAB7B2D93A1809DAF3323BF8A68B897E64AFEF5B4C304BF0A0F65FB46D4E712E56EF1364D703CC4548CF9377B163D002761D80FF30E2B0869A2357D32A20383CCF7CCD551987B24BB4FABE3A028B902AA5DEB
63D72A93C0F6A7FCED079C3DD53F7D3A163909E747C152B1DC6EBB3F053F210E5BC35EF4AA62F287E41703A611DF6945AF96DD19CD0F194A7AC4A29D665522A8F4005071F1E86FBACDB8A7047119D543848DB631A0D98F2EBD9AD6A28B42E0B44EC5A6C36E35A9AFB38733BEF88E3DD6851D32D7E13179483F83FC02AA8CC7537E27C1BCF0C993A08B058461C32E35EA2E971F6A2A8EABE316FAC252B7E4C7D86C05D7EF47EAEAB0255A3FA2DCF28C5C1586DBB0B54A364E3582EED83052341289D1501D23075FA97B1AEACCB94764F8A8799F5CB86CFEB626C4DC2500028063CCB065847AA03F5DBAE735488168A4A1792B4B20F05492B7CCAB764EED98042928FFA58BC06410FF783DCF934D8BAE67DC7C1238582AF606E7BF3623D26FBB06E1A5AF890981FDDE7FE46DD137438F10FFE798C41EF21B4F0FFF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TGBNGE+TimesNewRomanPS-ItalicMT cguidfix
/F1.1/TGBNGE+TimesNewRomanPS-ItalicMT renmfont
%RBIBeginFontSubset: XOSGKO+TimesNewRomanPSMT
%!FontType1-1.0: XOSGKO+TimesNewRomanPSMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /XOSGKO+TimesNewRomanPSMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1164 1 index div -628 2 index div 4096 3 index div 2062 5 -1 roll div]cvx def
/sfnts [<



B200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2CB4000100000015B00826B00826B00826B008260F10161345683AB001162D2CB4000100000015B00826B00826B00826B008260F1016134568653AB001162D2C4B53234B515A5820458A60441B2121592D2C4B545820458A60441B2121592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C014B53234B515AB00225B00425B006254923451869525A58B00225B00225B00525462345696048592121212D2CB0134358031B02592D2CB0134358021B03592D2C4B54B012435C5A58381B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B01060482046B0106048590A21211B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B8FFF060482046B8FFF06048590A21211B2121592D2C4B53234B515A58B03A2B1B2121592D2C4B53234B515A58B03B2B1B2121592D2C4B53234B515AB012435C5A58381B2121592D2C0C8A034B54B00426024B545A8A8A0AB012435C5A58381B2121592D2C462346608A8A462320468A608A61B8FF8062232010238AB9035803588A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2CB1020042B123018851B1400188535A58B910000020885458B202010243604259592D2CB0024354584B53234B515A58381B2121591B21212121592D0000000002011C0000051C050000030007004DB10201BB02BE0006000702BFB2000504B802BEB403000A0704B802BEB5010019080605BF02BE0002000301290009016B015E00182B10F63CFD3C4E10F43C4DFD3C003F3CFD3C10FC3CFD3C31302111211125211121011C0400FC2003C0FC400500FB002004C00002004AFFE803B705680010002400BAB2610820B80106B2050515B80106B20D0D1AB8010F4012091A002640260240266026A026E026042611B8010F400E5F006F007F008F00A00005001925BA011E010100182B4E10F45D4DED4E105D71F64DED003FED3FED31304379404C012423242224020602010301020607251C1B1D1B1E1B030613260F250B2618191719020621041162001F061A6201140E116200160C1A620124012062011B082062011210156200190A1562002B2B2B2B012B2B2B2B2A2B2B2B2A2B2A2A81133412373633321716111402062322272637101716333236373611342726272623220706024A8C745A609C7C9B88D362C2816DC445397136741E2E302439293A44354834029EE8014F52419FC5FEAFECFEB695E5C1F7FEE8B1956172AC0139E89B7330213D53FE9C000100F000000306056800160097401440186018A018E01804001840180276008600020E4113016901410009





00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/i 3 def
/acute 4 def
/glyph3379 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1164 -628 4096 2062}def
/UniqueID 4291674 def
currentdict currentfile eexec

BBEDEEEBBCEBA862988D3D43744E55D6A865A21DF505C9671A776AD2C5DA26A2A1D4D6FC702AB69FF14D9479E4604BC853FD042D6F591E7772ECB0538AB12C6688114E02F1F86B9C694D7107B75DC887A5143AA8D7A69AA56D7E87058E6CE69E6101DA3526590E3C203A4E5B99CCB2608DC369D9C099C81B79FDDF23F811D2D660C06C5FBFC3CC59421C31017D91FC00D49FFDD51972B0CDCC9AA0B91042156E23A2BC5398070D229F6F79EA0F85E8895ECA1E3B575C2679BDF5C56C43F87AC9B7F3193DC78FC400FF3D5BC60600F9B1649CB3E00B902B9E9FDB2FBE9C5326B3A5DE0D8545E4A071A56DF6903BF2634C1E94474235DE079A32D0E4CCA2CD0C6BBC38C622D054660692423322046898782F8B3996F67FEBF5F4EE17512159C4B9A2CF7BD61DBE465685E76CE2C8D3877882E69B41FC6D5662E2D3ACBC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XOSGKO+TimesNewRomanPSMT cguidfix
/F2.1/XOSGKO+TimesNewRomanPSMT renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 272 205.40985 rc
1 0 0 -1 -144.54297 538.51105 cm
145.04297 518.49609 m
416.04297 518.49609 l
S
165.67763 333.6012 m
165.67763 536.91986 l
S
[
4
4
] 0 d
1 0.3764706 0 sc
165.37418 410.34058 m
252.66559 410.34058 l
S
165.45911 395.74472 m
278.57309 395.74472 l
S
253.23196 410.7059 m
253.23196 518.80939 l
S
279.25873 396.29874 m
279.25873 518.9743 l
S
0 0 0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
398.59973 512.91522 m
(!)s
169.74748 345.6055 m
(")s
0.60000002 i
166.25734 355.93173 m
410.42139 355.93173 l
S
0 i
/F2.1[ 14 0 0 -14 0 0]sf
154.51614 358.37863 m
(!)s
154.51614 535.51105 m
(")s
2 w
[] 0 d
0.60000002 i
411.65417 356.58511 m
401.01514 358.37769 390.34943 360.34549 379.7858 362.54123 c
369.18146 364.74545 358.51196 367.21643 348.04416 370.00009 c
337.49063 372.80655 326.78937 376.03256 316.48801 379.65759 c
305.84286 383.40359 295.37952 387.64825 285.20319 392.53192 c
274.48663 397.6749 264.18372 403.48032 254.3154 410.11292 c
243.47729 417.39731 233.40976 425.51389 224.0085 434.58017 c
213.05635 445.14209 203.32039 456.6937 194.5515 469.12289 c
183.62776 484.60641 174.35068 501.25092 166.338 518.4071 c
S
1 0.3764706 0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
172.07724 406.99905 m
(#")[ 7.000000 0.000000 ] xS
260.86761 511.82697 m
(#!)[ 7.000000 0.000000 ] xS
0 0 0 sc
366.17303 383.40063 m
($%!&)[ 8.551758 4.662109 6.213867 0.000000 ] xS
ep
end
%%Trailer
%%EOF
