%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 147 97
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 147 97
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: GFKPYS+Helvetica
%!FontType1-1.0: GFKPYS+Helvetica 1.0000.0.0000
14 dict begin/FontName /GFKPYS+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /D put
dup 35 /R put
dup 36 /N put
dup 37 /quotesingle put
dup 38 /j put
dup 39 /a put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






4420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/quotesingle 1 def
/D 2 def
/N 3 def
/P 4 def
/R 5 def
/a 6 def
/j 7 def
/u20B8 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C99D7B912F94734180BCB0A2B426ACDB993C61FD2485EFF51D552B79ED2E120C8C3A17A67DCF03E7412FCDB8DA0EBD8CAD34A1FBFAF2D47EFCA53DD53E2967F67FCD4065236863224C550BE9D0C09E6D9B421FD7EF2EA8B00864758262387F388469D7B2923E1737AC994C795EC9920E23EDFE83E02B24D53E6A948E37D907E78F7B9FBC81A7DDB08CFE907B958A39CDA549F1D386E1658C15C5E503696BEDE25915D45127746968396D8AF844031D1E6FD6F63DAC16DFE3E8B31A08768CA00E9D3824752E722C9302F85ED72DF59739BBC3EFBA7473965737AD615DFC607E13DE63BED5DC1E39718BA44DB2A326B6AA489309C8845EBF848E5134863B2B5A86E950371C688247E558EDC5F5A30540F247F6B649A28DCD515E1925D46C6C6EBBC5C34FCD564A0D9BD20AB3B766382EEAD89FEBE920084F69CF289E8322300F064F5FA7933ACB2A41A120D5FDA22F43E8B5CA9B6E3F685B14B998181CF5CCE79CE18E177D3E457155EBE65900C24B86F46BF17E24BD9FD9DD45771653FF67A2640927E5EE4714B48293623D079069C8ACE9C927ED2B01BCCA177A2E9670DDDC9EC394C4D3FC335D2A11131BE69F4E720593115820CC74DD2ECEF87E36251E798DFF602AD35CE12C1256D104B50A1A7F661970BD8B1C63230CA78A59DE0FC65A6606CAAC11FA69DB440BCE8D5DF5DD19621BF4664DDC2513992B3FFA9D21C638FD1D9C1D8E683AE658ADD4661E647665C7C04637A6E8D4258C4A86BA0E77076F2DB40
CFCC3F09BAA4C60981186CCA84D86AF85AF340AB8676DA9337FEF301DC13B619E7515C6FC76CC12C22E160A8DE2415DC8B5A4D443920741FCE711C8F4A0380745B06ABBC56062BE6962D4827D6C05D0880BBC38B35A8DB87D8F185687BFD60EAB4D569F92478C197BB1A3D59AC67B771A789B8B4BB2C99F67033407E0C0289A1D29951A31C3BE719E697F74E612BDE05E94761875F8C22B9DE3D746738EF33581CAEEC5896848E26E73E0965A415299F312558231787C73127309C2A292A68E15A523F27959377949F2376E85DDC8A5C4508D84B1E57F354591741FB630BCFA08C11553436260FB517FC015FCAD5F132D06AB8FC74EF36FB04B759AB23D33B114A045E0C5A4543D193EFC6E5C374C1B85C55A955FBB8F4ADB71652D174DFEA6CB0EBA93CF8C2EC3C57AA8011DB4D8DE1F3BE086E9D1A55A97EA72F0A1474797B4ADD10A2A18704DA80A6872FF74B6CCFA5FADCE1738E45C0245F8DD392FA66ED9EFB06E640CD54DAD52FABEA3517C4A7D9295494FF7E2418AA21F6C750CEA7FDDD8A2BF226232A79CC9BF06D082AFBB59C9797D92548A5899F81CD3F36986B8A624C95E742EF07CC8D4C152CAA1BBB99DE7097009837164B9D2F01E709CB1827F57A3096286324D16CEBA1F258F23FD8B19DEDCB8A6F724A1726B6DE33CC0C5D1E6FCB76BBA359A0E378598B6E0BB508686A08E4D6A30E5D16FD24CEFEA212141F303FD1C57904DE9A277D73FBA341FC804EBAF7F2486D4A391501884E306EE2C12EC5856BF544F5FC45360B401C112EB0387EAF41560ECCF067DBFEC78836E878682CF11C178C63A28D6871EA78A0138F97F9F2F9641BBDAF8486A7A40DD56A7DFB7F080FB6FEC2887707C2D9DEFCD324691C0B743D067D5F22BA0F05144B9EF8A92ADF59BB410D9E154697CAF7FB46620DEAB8C42AE9807856676D36CC8236D4BCA81D2321BC4DB5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/GFKPYS+Helvetica cguidfix
/F1.1/GFKPYS+Helvetica renmfont
%RBIBeginFontSubset: SLNVWW+Symbol
%!FontType1-1.0: SLNVWW+Symbol 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /SLNVWW+Symbol def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /partialdiff put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -342 1 index div -612 2 index div 2240 3 index div 1694 5 -1 roll div]cvx def
/sfnts [<

5258238A592FFD2DB8000C2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8000D2C2020456944B001602020457D691844B001602DB8000E2CB8000D2A2DB8000F2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800102C4B535845441B2121592D00020066FE96046605A400030007001740090400060108050204002FCCDCCC310010D4CCD4CC301311211125211121660400FC73031BFCE5FE96070EF8F27206290000000002007FFFE5037D0514000B0029003240180C0600B22712B2151B2706B2211B2A0C0F090F1E0318242A10D4C4CCD4CCC41139310010C4D4ECC410C6EE10EE113930012206151416333236353426173E01353426232206232226353436333212151000232226353436333216020C6D8859536B8C597C0D0C4041287E3323297958A0BCFEF9C08BACD895597802CBF8CD767EFBBE7D837F2F936DADA98F231E3B56FEDAFEFEB1FE44D2AFACF85E00000000060079FFEA060D060E0050005E006C007F008800990285B800072BBB005001120000000B2BBB00800113003E000B2BBB005A0113000F000B2BBB001A01140054000B2B4105008A0054009A005400025D410B003900540049005400590054006900540079005400055DBA00210054001A111239B800212FB900200112F4411B0036005A0046005A0056005A0066005A0076005A0086005A0096005A00A6005A00B6005A00C6005A00D6005A00E6005A00F6005A000D5D41030006005A00017141050015005A0025005A000271BA0075000F005A111239B800752FB9002C0113F4BA00510000001A111239B8005A10B8005FD0B8005F2FB8007510B80078D0B800782F411B0036008000460080005600800066008000760080008600800096008000A6008000B6008000C6008000D6008000E6008000F60080000D5D41030006008000017141050015008000250080000271BA00860000001A111239B8000F10B80092D0B8001A10B8009BDC00B8010A4558B800312F1BB9003101163E59BB0005010C004B000B2BBB005A010B005F000B2BB8005A10B8000CD0B8000C2FB8005A10B8000FD0B8000F2FB8000510B80015D0B8004B10B80057D0B8003110B90072010BF4411B0037007200470072005700720067007200770072008700720097007200A7007200B7007200C7007200D7007200E7007200F70072000D5D41210007007200170072002700720037007200470072005700720067007200770072008700720097007200A7007200B7007200C7007200



00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/partialdiff 1 def
/per 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-342 -612 2240 1694}def
/UniqueID 4219731 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0D62DE800C383A928B916E4FB94973ACD6C4AC15296C961F370B4A942D972391969FBC18731A1FB4C5EEF20339F2F0015F2CC0F85EF65DBAEBFF75813C573F58DBDF29B52D0531B57F53D50AD02909D47A9DB99A4CDB19103FEDCFCA8D1F34978B51C473A7A9B23F2F8C6C2E0E81477ABB67E6AFA7831F61A1F4E805B893027C4EA52232054F3DA57C9976B07B6D1DD50054AF7ED0C8C2F2AA2B88FFE6C438D403876B82687626B64A9234F419CD975E42912B39C7C473154FCA5C0322FFA88FF5BA099F5EEDBFA4E81E292C08658D97D843510E00DBDAA7CCA4E10D6844A35DA6FBE16AEB3424BB5DC7607BA1F4AA897B703DF707AADC17357CF21A888FACD70D5505CBAA3E3F83B6155C5DC8B30E90D3F7F7438D954E82334B5D1A37FA785C6DEF362AFF863EB5C3A9C55840DF660914A5973525CD682908C0713526CE78CF4055B9FD7540C7C46F5AE4C4357069B42A7E2120A5955390B6826E4DB1A098D6AC8F1F0A5D4CE02A283A4738FB773CA682D8BC3ED0B1F921E23510C61FC37A85074CCF6E3A22623EF1DBCAA60EEAF38276BAF6E6983C6264F59FB16C8F69463D578B6FF20499B97228607E75B3D76E4DD5783AF18D005F4013646CBB33E82DBF719B1AD1EC9E608C5517909863995B583F10E2F12B073974A0BF6FB0FDFDCA059E1F717521B78E28F4A801A7719ECDA17E13FEFECE2998C70BC765DE45D01351AD29190BFE3D

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SLNVWW+Symbol cguidfix
/F2.1/SLNVWW+Symbol renmfont
%RBIBeginFontSubset: DLVNVR+LucidaGrande
%!FontType1-1.0: DLVNVR+LucidaGrande 1.0000.6.0040
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /DLVNVR+LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /x put
dup 35 /N put
dup 36 /R put
dup 37 /quotesingle put
dup 38 /P put
dup 39 /comma put
dup 40 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<



2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326
5358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592DB8005D2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8005E2C2020456944B001602DB8005F2CB8005E2A212DB800602C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800612C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800622C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800632C2020456944B001602020457D691844B001602DB800642CB800632A2DB800652C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800662C4B535845441B2121592DB800672C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800682C2020456944B001602DB800692CB800682A212DB8006A2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8006B2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8006C2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8006D2C2020456944B001602020457D691844B001602DB8006E2CB8006D2A2DB8006F2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800702C4B535845441B2121592DB800712C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800722C2020456944B001602DB800732CB800722A212DB800742C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800752C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800762C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800772C2020456944B001602020457D6918

712B5D2B715D5D5D715D713311212016151400212319013332363534262B01BF0193010CEAFEC0FEE45D55BBCCA0BB8105C8B5CFECFEF4FDB402EBAC9D857200000200BF000004FA05C8000C001300AE40742707013906010606260602E606012E113E114E110311380D1148260F01260F360F020603F6030209450F01160401A707019A07015E126E127E12030918151948070A010A090152097E0807140808070D9207010B0B08001392010300107E050705080D0C7E00400F080112031508700214006B022B2B015F5E5D1A18104DED321139392FED002F3FED1139392F1239ED31308705102B2B10C4015D2B5D5D5D5D5D005E5D5D712B715D715D713311213216151005012101231901332011342123BF01C0D5E3FED501EEFEFEFE5BC444018CFEB48405C8BCB3FED87CFD4B0272FD8E030F0137E5000100580000048B043E000B00FB408FB907E907027A04EA0402B703019506B50602950501B7010178019801026A09BA0902B608016A08AA08026704A704B70403670B010607160746077607A607D607060A0707080A0A090B060B04040301010200050501520B060B880005140000050A0A0B010100020902070706040405030803015209020987080314080803020F00090308020B050006080200081000B8FFF0401200080116030D0869020000010A030C0066022B015F5E5D2B015F5E5D38381810C610C611393911123939002F3F31308705104D2B872BC48708C008C0108708C008C0870518102B872BC48708C008C0108708C008C0015E5D5D5D5D5D5D5D5D5D5D5D005D5D33090133090133090123090158019DFE6FEA013D011FC0FE880199EAFEB9FEC40231020DFE5E01A2FDD9FDE901AEFE5200000000010010FE750422043E000701124012370401E704F7040283049304A304C3040404B8FFD8402E1E23483706014806680602A806C806F8060395050109051905390503C9050167037703870303B703C703D7030303B8FFF840661A1D4879040179008900026900E900028807980702070717073707A707D707E70706770187010229013901590103090119017901030A010102000504040501520403058806071406060704030152040503870201140201060401020F01001B07010602061002B8FFF040161F062F063F067F06040006010B0309066A02080267022B2B015F5E5D5D38381112393900183F2F3F123939313087054D2B082B10C4870518102B082B10C48705C008C0015E5D71715D715D715D2B5D715D71715D7171002B5D5D7101130133090133010104B0FE5CD50137014CBAFDAFFE75018B043EFCCE0332FA370000000002006FFFE70425062B0022002E00F7B800712BBA0026001A00742BBA000E002C00742BB8000E10B80003DCB8001A10B80014D0B800142FB8000E10B80008D0B800082FBA000500




00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/quotesingle 1 def
/comma 2 def
/D 3 def
/N 4 def
/P 5 def
/R 6 def
/x 7 def
/y 8 def
/ukcyrillic.alt 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2186 -1509 3361 2381}def
/UniqueID 4115029 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F63946432A100A72F07034D96C090B98372E13F4DEE98CF5139167FB37139EFF3AF787539926692B8EDBB55457032FCA7DB4681A6183368EAE6D17D8EF3B258EAD7FFC1DD846FC08FF7BA619F8F3F3C0E9B286775C53D9B5E726CF9FE6073BFAA33F09AB193CF15B9C3EB808937A60454E2020EC91143FCF5B503323430A7215FD06F1BDD012C978E54D4BBAF7B32CAEA763E5AEA4D975B902039782E86E02A63DF5B5B1E1006EC38DE35A7B70D10B5C9264829022D541EE42A7975417A20FBFC5B423443FEF130C644C5DD3FF2352085B5074AAC7D34420C3F503C5CD754F353EF5965B645AE6F88E597902EC663402E9A1B6AA186DC98A094C931040E0B1D0F2BB638482A7A32AA1EF9A0B9AEC920D9DC645E41B71BDD1496782B285865D2BF2A07236A15717D8E4090A4E32B19EB4F9B78253903E0E41B63AB2854DCEDE17C64084DBED9F450299182066289E86594FA16C4C02D253FCE69FC9F5A256A0A798D9EC0370D7F6FF464239980F759DDD7287E933E14A3EF56B35B58EDEBCCA8BC663FE414BC3A85EA8C227DD869824411F9C801E8492622DE53C5A82CFEDD75B26532DBB71DCD7F4A5283ED302C225BA7E946095A714C597C21F67BE8B064AE50C0DCF365083343FA504568ECC22131A169711EADD654B95A2F55DC3CCC81BADA73551D21AD36A5DD56C959A08CB1C8D7AC57B4AAADEE1EDD1D2F98F9DC2A0C15F891A995D
889C5CECDE87D9584FD5F13F260637EA02115E482C4D6F55353C8EEA0D8044658FB1F9661629BCB1AAFE1DC7C018FC10F00A71A7E01C45D895CB5722E09FAF4149832E0926DAA47FF472BBE949FC36FA7A02ED97A829699D9EF7C52C6355812271EEDD98D1534A25862EED935AE8B0AA2D09BBC52EA9811F467496213A6E19439DB71BEF570B1BCABC26DC1BE7FC1228A638B09C19E5334B71CC8B8983E3011CBE860F086552803A693CECD78A9810E6DE1DD380CA4786253F3D809CE98A5A09AC34247F359C6125CEAECD279EBCDEC028BB2E46CBB3760FF2D68922FB1160DF3A344EB1B3CCFFD9E2FE2BE55B1F4A54FB3654B62AEE4E0AAC7D830C2DACFB463DE2F4BFDF1E16D949484DEB1CE9F6EDE6F8F5AE078D32D38D78554BDFDAD206B754EDE35D03F4CD442FA5176B2750AE4CA573C68AC7FD74CE76F2BE4320B8A9113CEBD0C3DB3940C384899BC98079C1389F1F889502850310607671E61565C1EDC2E222EA91D03F4C3D36FAA46938B0418AA3FBA7B3647B73E2C9E10836E39D6642BFA01BCDA35C52C6D1AE054C1061266AAC16912CEAE5FD5EB0A57442D979B844CBB96D598DA8A3163A9095CC6A1673F5844C6E8A74BEE56F543A5A82DA542FFEA8FF34CD50399D33BE1BEAF8AFFA4B521D2589F99F999B096A011408278261B82F402F92D347FF26527D225A2478EAC0AA72F7FE24A265671D0E4CF2816401A1AF3C23EA4917C529FBB565240998ADE714A67D2ADA4BA09FC71A1E0ECDE57780A3896245A125928101064E2CB42D86FB18442FFF7F463C8A407F43AA4CFA94A49837CE88F209E4B5176D323F7AD208CA256F5B399390D67922319EE5DA3F1992E74D195B9B6B4F2349FA02EFE38D11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/DLVNVR+LucidaGrande cguidfix
/F3.1/DLVNVR+LucidaGrande renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 146.36476 96.946121 rc
1 0 0 -1 -208.71889 416.1203 cm
250.36368 364.71063 m
237.79094 415.47455 l
310.79623 414.08411 l
301.17422 364.45807 l
250.29329 364.75882 l
S
CM
67.57222 29.436155 m
67.572311 29.602058 67.53933 29.767887 67.475754 29.921127 c
67.412354 30.074436 67.31842 30.215019 67.201042 30.332266 c
67.083794 30.44964 66.943214 30.543577 66.789902 30.606979 c
66.636665 30.670553 66.470833 30.703539 66.304932 30.703447 c
66.13903 30.703539 65.973198 30.670553 65.819962 30.606979 c
65.666649 30.543577 65.52607 30.44964 65.408821 30.332266 c
65.291443 30.215019 65.19751 30.074436 65.134109 29.921127 c
65.070534 29.767887 65.037552 29.602058 65.037643 29.436155 c
65.037552 29.270252 65.070534 29.104422 65.134109 28.951183 c
65.19751 28.797874 65.291443 28.657291 65.408821 28.540045 c
65.52607 28.422668 65.666649 28.328733 65.819962 28.265329 c
65.973198 28.201757 66.13903 28.168772 66.304932 28.168863 c
66.470833 28.168772 66.636665 28.201757 66.789902 28.265329 c
66.943214 28.328733 67.083794 28.422668 67.201042 28.540045 c
67.31842 28.657291 67.412354 28.797874 67.475754 28.951183 c
67.53933 29.104422 67.572311 29.270252 67.57222 29.436155 c
h
67.57222 29.436155 m
f
1 0 0 -1 -208.71889 416.1203 cm
276.29111 386.68414 m
276.2912 386.51825 276.25821 386.35242 276.19464 386.19919 c
276.13126 386.04587 276.03732 385.90527 275.91992 385.78802 c
275.8027 385.67065 275.66211 385.57672 275.50879 385.51334 c
275.35556 385.44974 275.18973 385.41678 275.02383 385.41687 c
274.85791 385.41678 274.69211 385.44974 274.53885 385.51334 c
274.38556 385.57672 274.24496 385.67065 274.12772 385.78802 c
274.01035 385.90527 273.91641 386.04587 273.853 386.19919 c
273.78943 386.35242 273.75644 386.51825 273.75653 386.68414 c
273.75644 386.85004 273.78943 387.01587 273.853 387.16913 c
273.91641 387.32242 274.01035 387.46301 274.12772 387.58026 c
274.24496 387.69763 274.38556 387.79156 274.53885 387.85498 c
274.69211 387.91855 274.85791 387.95154 275.02383 387.95145 c
275.18973 387.95154 275.35556 387.91855 275.50879 387.85498 c
275.66211 387.79156 275.8027 387.69763 275.91992 387.58026 c
276.03732 387.46301 276.13126 387.32242 276.19464 387.16913 c
276.25821 387.01587 276.2912 386.85004 276.29111 386.68414 c
h
276.29111 386.68414 m
S
209.41689 339.71484 m
267.07999 381.28906 l
S
CM
64.458984 30.434765 m
56.760899 32.611801 l
59.961281 37.050705 l
h
64.458984 30.434765 m
f
0.25 w
1 0 0 -1 -208.71889 416.1203 cm
273.17789 385.68555 m
265.4798 383.50851 l
268.68018 379.06961 l
h
273.17789 385.68555 m
S
1 w
276.56003 385.00134 m
329.96973 338.04443 l
S
CM
126.89664 83.039551 m
123.05746 76.02095 l
119.44419 80.13076 l
h
126.89664 83.039551 m
f
0.25 w
1 0 0 -1 -208.71889 416.1203 cm
335.61554 333.08075 m
331.77637 340.09937 l
328.16309 335.98953 l
h
335.61554 333.08075 m
S
1 w
277.19586 386.26166 m
339.6759 357.62381 l
S
CM
137.79089 61.628815 m
132.09708 56.009159 l
129.81693 60.983822 l
h
137.79089 61.628815 m
f
0.25 w
1 0 0 -1 -208.71889 416.1203 cm
346.5098 354.49149 m
340.81598 360.11115 l
338.53583 355.13647 l
h
346.5098 354.49149 m
S
1 w
274.87186 384.34155 m
275.26797 328.24722 l
S
CM
66.602165 95.390434 m
69.285172 87.85376 l
63.812984 87.892403 l
h
66.602165 95.390434 m
f
0.25 w
1 0 0 -1 -208.71889 416.1203 cm
275.32104 320.72986 m
278.00406 328.26654 l
272.53189 328.22791 l
h
275.32104 320.72986 m
S
1 w
[
4
4
] 0 d
0.43921569 0.43921569 0.43921569 sc
275.10403 384.78076 m
348.84103 299.61258 399.4794 385.47559 275.76617 386.45386 c
S
0.5 w
[] 0 d
276.15985 333.04181 m
281.88135 333.15735 l
S
CM
78.911171 82.84684 m
73.191391 84.396263 l
73.133499 81.529625 l
h
78.911171 82.84684 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
287.63007 333.27347 m
281.91028 331.72403 l
281.85239 334.59067 l
h
287.63007 333.27347 m
S
0.5 w
240.16168 362.85519 m
237.02359 367.77988 l
S
CM
25.214764 43.491322 m
29.513706 47.570007 l
27.095676 49.110821 l
h
25.214764 43.491322 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
233.93365 372.62897 m
238.2326 368.55029 l
235.81458 367.00949 l
h
233.93365 372.62897 m
S
0.5 w
274.02039 388.3212 m
267.86621 391.56708 l
S
CM
54.061447 21.87079 m
59.816109 23.285166 l
58.478504 25.82126 l
h
54.061447 21.87079 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
262.78033 394.24951 m
268.535 392.83514 l
267.19739 390.29904 l
h
262.78033 394.24951 m
S
0.5 w
321.92502 365.53485 m
320.1467 361.93332 l
S
CM
108.88209 59.342628 m
110.14236 53.552265 l
112.71325 54.821701 l
h
108.88209 59.342628 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
317.60098 356.77768 m
318.86124 362.56802 l
321.43216 361.29861 l
h
317.60098 356.77768 m
S
0.5 w
323.64056 344.85141 m
325.38232 347.2435 l
S
CM
120.04796 64.228561 m
117.82236 69.720673 l
115.50448 68.032951 l
h
120.04796 64.228561 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
328.76685 351.89175 m
326.54126 346.39963 l
324.22339 348.08734 l
h
328.76685 351.89175 m
S
0.5 w
320.98996 344.98044 m
316.95547 340.18033 l
S
CM
104.53698 80.341606 m
107.13911 75.017563 l
109.33402 76.862381 l
h
104.53698 80.341606 m
f
0.125 w
1 0 0 -1 -208.71889 416.1203 cm
313.25589 335.77869 m
315.858 341.10275 l
318.05292 339.25793 l
h
313.25589 335.77869 m
S
0.5 w
301.9137 362.96777 m
307.58551 363.46399 308.50296 370.11002 308.82587 371.63992 c
308.82587 371.63992 308.82587 371.63992 308.82587 371.63992 c
S
0 0 0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
277.97388 398.12836 m
(!)s
230.5392 347.35449 m
(")s
340.41763 369.92255 m
(#)s
260.54453 331.37823 m
($)s
328.63309 330.41852 m
("%)[ 8.666016 0.000000 ] xS
0.94294161 0 0 -0.94294161 -196.1171 395.11261 cm
/F2.1[ 9 0 0 -9 0 0]sf
225.8578 377.17871 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
230.30507 377.17871 m
(!)s
1 w
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
225.86049 380.02475 m
235.80484 380.26285 l
S
0 i
0.94294161 0 0 -0.94294161 -196.17747 394.41736 cm
/F2.1[ 9 0 0 -9 0 0]sf
224.7997 389.36395 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
229.24696 389.36395 m
(")s
0.94294161 0 0 -0.94294161 -195.58513 394.241 cm
/F1.1[ 9 0 0 -9 0 0]sf
235.18121 392.45462 m
(&)s
0.83292896 0 0 -0.83292896 -162.87219 360.17654 cm
/F2.1[ 9 0 0 -9 0 0]sf
279.41443 343.85007 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
283.86169 343.85007 m
(#)s
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
278.83347 345.31403 m
287.61758 345.52435 l
S
0 i
0.83292896 0 0 -0.83292896 -163.02835 358.37827 cm
/F2.1[ 9 0 0 -9 0 0]sf
278.47977 354.61368 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
282.92703 354.61368 m
(")s
0.83292896 0 0 -0.83292896 -161.49625 357.92215 cm
/F1.1[ 9 0 0 -9 0 0]sf
287.65009 357.34375 m
(&)s
0.90144688 0 0 -0.90144688 -177.63217 379.91605 cm
/F2.1[ 9 0 0 -9 0 0]sf
320.43103 376.35776 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
324.8783 376.35776 m
($)s
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
320.21359 378.6825 m
329.72031 378.91013 l
S
0 i
0.90144688 0 0 -0.90144688 -177.73187 378.76801 cm
/F2.1[ 9 0 0 -9 0 0]sf
319.41949 388.00677 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
323.86676 388.00677 m
(")s
0.90144688 0 0 -0.90144688 -176.75375 378.47681 cm
/F1.1[ 9 0 0 -9 0 0]sf
329.34418 390.96146 m
(&)s
0.7962662 0 0 -0.7962662 -147.77229 349.73337 cm
/F2.1[ 9 0 0 -9 0 0]sf
304.14813 334.85129 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
308.5954 334.85129 m
(!%)[ 6.741211 0.000000 ] xS
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
303.37265 335.85464 m
311.77014 336.05569 l
S
0 i
0.7962662 0 0 -0.7962662 -147.95435 347.63699 cm
/F2.1[ 9 0 0 -9 0 0]sf
303.25461 345.14108 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
307.70187 345.14108 m
(")s
0.7962662 0 0 -0.7962662 -146.16827 347.10526 cm
/F1.1[ 9 0 0 -9 0 0]sf
312.0213 347.75101 m
(&)s
0.88932109 0 0 -0.88932109 -181.44026 374.24899 cm
/F2.1[ 9 0 0 -9 0 0]sf
251.4664 387.31326 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
255.91367 387.31326 m
(&)s
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
251.18462 389.48566 m
260.56348 389.71024 l
S
0 i
0.88932109 0 0 -0.88932109 -181.5507 372.97705 cm
/F2.1[ 9 0 0 -9 0 0]sf
250.46846 398.8056 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
254.91573 398.8056 m
(")s
0.88932109 0 0 -0.88932109 -180.46704 372.65442 cm
/F1.1[ 9 0 0 -9 0 0]sf
260.25964 401.72052 m
(&)s
0.7992925 0 0 -0.7992925 -142.32019 349.1684 cm
/F2.1[ 9 0 0 -9 0 0]sf
335.82324 342.57956 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
340.27051 342.57956 m
(!%)[ 6.741211 0.000000 ] xS
0.60000002 i
1 0 0 -1 -208.71889 416.1203 cm
333.03525 343.62091 m
346.819 344.11469 l
S
0 i
0.7992925 0 0 -0.7992925 -142.76419 347.09531 cm
/F2.1[ 9 0 0 -9 0 0]sf
333.61111 352.90848 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
338.05838 352.90848 m
("'\()[ 5.519531 2.847656 0.000000 ] xS
1 0 0 -1 -208.71889 416.1203 cm
/F1.1[ 9 0 0 -9 0 0]sf
307.62888 365.74066 m
(')s
ep
end
%%Trailer
%%EOF
