%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 312 137
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 312 137
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HEOTKT+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 4/3/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid18 putdup 2 /gid20 putdup 3 /gid23 putdup 4 /gid1153 putdup 5 /gid1154 putdup 6 /gid1567 putdup 7 /gid2556 putdup 8 /gid5424 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E44870E23D8E2B1BD14E397738F1FE2550BD6E68212AAE25B73619A0BFB314E1BCD175907C2B6A653BD8B74D5D11BEE8948585B5B5737FE78378881644CF033E50D117E08E99E545EB2D64D52953E509CD6DF4FAA17214E7B8128F65602B51FB3A9A34F303E699CFD334AD9F7ED55250C72E967C069C295C93F5904149416BC5E7FECD2A258F0B8797E350D164827906C7A363BF09D8DEAA3B0CB058915EF406F110D9A4F796B25104A21BC4DC169D64622F45420913F062F6083EB5DD9ECC1EB5EA69209EFB82072BF00DD15DE291EE2912F6B1C6A6171B834F3F51C799FEDA48B4D44EA23123EE862D05BDA46647C632ED565C5F430E6BCE92346C855013BEF715D340685B874C601EAFB7F2BA3E5D66350AC0F3D6A78E8D7CF694EA941E02B8133426F806765D408AD80DF6A1B66C68D42703069B49F23BEC520A8D292DF07D448E35F205A5ED81AF4CCFD3531A709B747E1E7BE2AE8695718C05126F4FBDD3D28AD9A87D363722E1FD7303D15E633A5186346A1C558A7DC406EF314AA858EA21A5567421E76CCA27FA41094710EA6971EE2ECD811BD2EAA6E508F2725F4AEED4BD4A84E1FEE3C8E1CAD44EAF57EEF4D6585B25A24E34197492965E3A82AAD6D1861E68F34E4721FC03853CE5EA4DB26D60D80EADB57438B5EC390D3A4977794266B24AE2770343DB65ED37EDD668064F25229115C1ED308A2888AFB3CDEA152B42B8E23DA8810A193D728045A7E640797C0A4110266748F765B9941E3B0046C53F5F9FB082875E7E05BB9EA3EBF15C085DDAFC269BCB2E26C9E92877AD9F79B71A10D5C39EBCAF90A51A2BB10356FB9BDBBA01AC79A568EB91D0995DFC3848F40F9B16D0CEBB911E671E1A30BDA119518D822B3693F3299513F755E5F48BF0CD06857C1063BCD5D0E7AA3196BC4BA242B0EBA8A1678E5DA24EB16E366D5E4976BF167A9D15900C3D333CB08D69763F4B56D34BDA08C67C38A1D98D4061C9DC3EDF36DF2FCAF1E466438181F0863BA3426F9DF0AFC2D368A76630C618C5474AAAD29E24C69B0CD0E8AD716E0CF7C042FFB112B8461895B796E225E118C3A5045C393A470E85F383905012EAF6B57F37FD2F79370A0C9971A8068589DBCD15CB7BEB509E7AFD5958CCE9626B4401FBD0FCA3B2B48A53784B74411914AB3C7DF5B377F0CF94C53FB6993AAAC7747997307B3A34D2E7079E59626A23AADCAED7099D1460397F998AF877B7617327417F42852357948C24C116A703575B0818C6106636D900685DBE8C0560548BBDB95FEA1C04DD95E0DC73A2622413B6C054221ADD29612973927338EA4C3A20BF03CBEF98214DBD23A85E65ACDB4E6A154F8C8937DAE0D7D2B225DA5203203F91CCB82A7138EB606BB3163A8E5E380AE721CB6EEC62EC3FA8415A1659C7006083C9B1F36DD41E074AF1CC84AD0E920BAC57A8E0BE03843172735EEB71A156F05614E94FA0C03CFB877A8235BACE94B6259EFF5E94155A9256AD8ED11B99151224FA3263E24CF801744D5CEE6C557D99B6D900E088CC71EE346BED0E546058C421A8EEE596C76A8EF99F659971D9387C069D64E65019FF180A6F39561F6B2B5044FC116A6CCCC15684B9CC16DF258F217D55855E1BC882C0F04485C7D10A0F99F58AEA2417A25F00A1001B359D5A8752EA247A046CD031556C2AD2D9F619D9126C2AF9A6CD4823B0AD77A82C327E08DAD0F6DFECDE9A44439DD20D99A92921DC6B31FB6B194A986E6A445EA72BDF22DFC4A0FF2EA30CFDC5374FA6EF18ED26B5E8CAA1662814B05DC35ED682ABA7B35820E66A94836D511F8F81160FEA3F497129D86AED56B9A5BA1D009B46ADA67D77337052D23A3AE8A80ECC3BB6BF1C567FC8D0F83E289BC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: HEOTKT+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /HEOTKT+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid2556 putdup 34 /gid1567 putdup 35 /gid5424 putdup 36 /gid1153 putdup 37 /gid20 putdup 38 /gid18 putdup 39 /gid23 putdup 40 /gid1154 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 10 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid18 {(\001) 0 $SP} putdup /gid20 {(\002) 0 $SP} putdup /gid23 {(\003) 0 $SP} putdup /gid1153 {(\004) 0 $SP} putdup /gid1154 {(\005) 0 $SP} putdup /gid1567 {(\006) 0 $SP} putdup /gid2556 {(\007) 0 $SP} putdup /gid5424 {(\010) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/HEOTKT+PingFangSC-Regular cguidfix
/F1.1/HEOTKT+PingFangSC-Regular renmfont
%RBIBeginFontSubset: PSKPHJ+TimesNewRomanPS-BoldMT
%!FontType1-1.0: PSKPHJ+TimesNewRomanPS-BoldMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /PSKPHJ+TimesNewRomanPS-BoldMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /parenleft put
dup 34 /a put
dup 35 /parenright put
dup 36 /space put
dup 37 /b put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -628 2 index div 4096 3 index div 2101 5 -1 roll div]cvx def
/sfnts [<

0127012C013F015701580177018A019301A401C601E101E401FC0200020C02220222022A0236024A025C028202EC02FC030A032303410378039703D203FA04790532053205AB05B505F006E4072508CCFC9BFDDEFE00FE69FE96FE9BFF3500030006000E00130019003400420048004A0057006400710071007200760077007A007A0083009C00AF00AF00B200BB00C800CC00CF00CF00DB00DC00DF00E400E400E400E900EB00F400FD00FE01020105010501080108011B01220123013001370143015B016001650178017801780178017B0182018901980198019B019E01A101A601D101D201D301DF01E301F502000200022D02410247024A0250025B025D025D025F02630281028B02B402B402CE02D602DB02E202FA03100311031F0327034503670388038A03B003B403D403D5042604410448046B04C704D1053205480549055F0563058B05A105A305C205CA05E405FF069306A206B806E8070A073607500754078907A907BB07DC07FF08270120014D011B0129000000000000000000000093015B042F029001FF02B800DB00BE027403CB029401AB000000000000000000000000058A038A0364005F02B803BD029D7C9003E203AC02820000044400000000003D010A00CC00BC00CC05D3041505E800C7021A00EE00000194036102BE029902180136033B048504CC0050007905A305A302DF020702AF000001EB0064005F0055011900F2045600EF00C800CF058A0143014602DE01AB02C6024A005D00D800A402BB009900A0006501370274036400B500FA009101B9032001B60025007F00D000EC00E000000000000000000000042FFD42023F06180276063A013701B90151FFC70229FFEB023F02E1018500DB03FA01900156014E012F00A600E300BB00D50134011F04FE041B00D100E4011E009B00CD00E700B300E200CA042400B800F500B90334005A04E00123012FFDC9FE440574038301F602410002001700500015004F001700A80051009800520049006E000E00AF017B017B019C006A008300EB00CD0122000005D306DA009A008F00BA0315002503A5028002FF03C80420009200E0034C009B007D00F8011C013400A8006D006900000420FFE6FEA4006A006A003800380162015A0044006D0048001EFF6D00A600A600400040FF5CFF990559052B00CE014C011500BF0140011800C800960509FEED004800B4009500DB0048018B00B3FE6400C000EA01180125013203B003ED0576059005AA05B405BE05CD063100780084009B00CC00E200F4010A0120016300D100EA00F7010801420019002C00340041003800480058006C025903BD0043011A007000D30028003700420050005A0064007300780082008C009C00A500BD00CE00F00110015C00BE00D801020117012C016300EA01080041004B0055005F007300A60109
018301B300410064001E002A00EB00FA010E01380274002C00400082009600B600C000CC00DC00E600F000FF010A0120012C013B01440156016300F70057006401100136005001B10000FFB60039004E004403CC00E5002401100042012201A400F0006000E0000E001D003905E30102002CFE4EFF38026903BD011600FF000E00A00054001B003D01710041000F005000FD0015014F0035FE47003900AB0080005005A50016002B00AC0115021504570555007300DA005C00CE0072FF58019A0744000040425554403F3E3D3C3B3A3938373534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B10B0A432343650A2D2C00B10A0B4323430B2D2C00B0172370B101173E01B0172370B10217453AB10200080D2D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2CB00143632362B0002342B00F2B2D2C2045B0004360442D2C01B00643B00743650A2D2C2069B04061B0008B20B12CC08A8CB8100062602B0C642364615C58B00361592D2C45B0112BB0172344B0177AE4182D2C45B0112BB01723442D2CB01243588745B0112BB0172344B0177AE41B038A45186920B01723448A8A8720B0A05158B0112BB0172344B0177AE41B21B0177AE45959182D2C2D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019234445B01A23444565234520B00325606A20B009234223688A6A606120B01A8AB000527921B21A1A40B9FFE0001A45208A54582321B03F1B235961441CB114008A5279B31940201945208A54582321B03F1B235961442D2CB110114323430B2D2CB10E0F4323430B2D2CB10C0D4323430B2D2CB10C0D432343650B2D2CB10E0F432343650B2D2CB11011432343650B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C4BB06451584569B00943608A103A1B212121592D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2CB02B2B


2627011A0D1E1E0021081E2700002B2B2B012B103C2B2B2B2B2A2B2B8181435840237D05700970207F249608A705A608B7040882088509027F047F0A7F1F7F259605972406015D00715D590111363332161615140606232226270723113427262627350111141716163332363635342726232201AF768C60AA607ACC834C76399B22070A2B330184060A4C3B33493136274256054CFDFD7A71D08899FA8330366504A551131C1B0225FDA4FE607F233B493AACE0D7503A000002002A00000223056C000B001C00DB40161E8011173F0F110012001C1F111012101C0617241F12B801EEB4220D241F11B801EEB42318241F1CBB01EE00230006FFC04011343634AF0601064000010C1C0612110A09B8FFC0401C3436340009100902094003290C0C0F0D1F0D020D2A18174011173F17B8FFC0B23A3517B8FFC0B320233417B8FFC0B313173417B8FFC0402F2D3034B017018F17010017101702177B401E501E021F1E601EA01EB01E042F1E3F1E8F1EB01EC01EE01E061D4EC0182B105D7172F65D5D712B2B2B2B2B3CFD5D3C10F4ED5D2B003F3C3F3C3FED5D2B2B2B2B015D3130012B01321615140623222635343613111416171521353637363511342627350126415A5B40405A5ACC2E43FE073E1E142E42056C5B40405A5A40405BFE3BFD1B633704242402221763022263370425000100E4041F0285057A0003003A400C0002010201030F001F000200B80146B47F01010100B80144B40378021904B801FFB163182B4E10F44DF4FD002F5D4DFD5D3C103C3130015D010123130285FEB55674057AFEA5015BFFFF002A00000250071B02360006000001170007FFCB01A10014400902001F1F090940021FB80299003F35012B350000000100000005028FB4C1BB415F0F3CF50819080000000000A2E3354600000000C30778B3FB89FD8C10000835000100090001000000000000000100000721FE4500571000FB89FADF10000001000000000000000000000000000000090639011C0200000002AA005202AA00190400005C0473002B0239002A02AA00E40239002A000000360036008400D3024F033603D203FE041500010000000900F2003C008F000600020010002F00560000084802C400050002B15420B8040CB30C0E3220B8040CB2131732B8040BB328201F0F41100412008004120002000F0412003F0412005F04120003005F0412000100400412B2783340B80412B2723340B80412B26E3340B80412B26A3340B80412B2543340BC0412004A0033FFC00412B317183240B80412B30A0C3280B80412B308093240B80411B25A33404109041100560033FFC0041100530033FFC00411B2503340B80411B24D3340BC041100470033FFC00411B344453240B80411B2423340BC0411003E0033FFC00411B23A331F412404110020041100400411





00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/a 4 def
/b 5 def
/i 6 def
/acute 7 def
/glyph3379 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1143 -628 4096 2101}def
/UniqueID 4113473 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CA5C666975ED693ABDB2796D943B8FDBA594B8024D566595D6BA188D281B282EC345843E2EA2614CF8C67C370ADA0C13609ECB7ADC2F330FDBDF7FA5500584B2F868974A11D96F058CCF64E08825D34B2D770A5C8BDFB357403AE11E6D4B8B4164EFF743DA0B482220BFA181F35FF2131F73ED27887206029C70F310ECC41A82CA4CE3E3A3CFD6CD657382DAE8CD68704E21B98FCAABFC08AB11EC611383F2FE0C712FF94ADBAF3E930F48528CFE219CA3E7AAF23605D8C449DF30D1A18229502AB133B389161092982DEB94A43F65006174F57D978F74239B2A6B7B7F400B84C8C0AAA2FF156A56469C00C461DC25652EA8DC3F882A819ABC749BCD75D56F8D2C78E3B9A10E0164DE064BFC4C9485B1B53F2B7838B4D10E68F82F2CA8CD4C7E0484FCC82F54D6A424FD8F3FAB818C4983FD70C9E841D85C822B1992F2C64F58DD6D881C57887B5CF70ED493DAE5DF855295473D46BC39500AACF620AE4CFBF5B9D94709919A0916823EF1940B643FFFF696E392592712E8F01A7968BD4584889A56D783AA6DF7E4F9ABC5BB55F855183066F45D8F570CC673C2F6DC91D0F11DCA8DEBBD17924566BB94454139254F853E5F065F307BD617A6624799B716B4A3AFD60CF30357665525C5689A59EDEFE7311A783B1CE0B9ED968342CC8CF388FEFA4DA832CD67A60976FD60E47FA0CC85D8420DAE7D8D791A1EC94DB900B26A5DC718C7891D7836EA2A95B1E9125A8A6F987B3481E55CD90E58C67D758039FD2565B719952D01183C3176C152B301167E5637DDC
7970ED5A6EE2D2E65762ACD51CAA94217953FFCFE41845FE627407AEDAFEB774FF3BC1EBC13F4A74541A1A078C851C248AF607770CE556269AA91AB03F7CDA6F238BA21500F6EF9CABC26399650BFBA4079C481353812A44991FC29FB660ED1045A6559F426B18518004399B058CAB21A21B6B32067C44D69507CA90AD6BCBDAF4B95EC58DB19EFEFF7D0BFA977D75477B72B5C29BD5441C159C3C18507EB5EC99BF1BAD0A1FF449A03DED0A2C9F18E8B925AFD94102AAB131C750F9D65E114998A6FDEA46D83C65A8EB7816F4C24518E7F67763C8088C67E9A5AF3D36A08C2BFA35F12599036710B764A64DBB720E3BE3EC77E16127D778D307F75299D87F820923498B21641481D375AF7C4C63E27263F0562EFC77222A4EBCEC0BCE07E898A925C9F6BCE52A91D6222B502075667CC4819D131AA8BFCBC4E8BFC341C47DAB560B39FAD3A3E2645AA6D89DF7C5170476B11378E52BD7D2E81BD09A08AB9E13EAEB8444D3380136A484E7D88D6D7A3F278C39DFD9D8CE32F16A1E454D0A1D7962C4D0C0DFE6945EE51A224E08F952BB4A28AAF8A5DA3C808A310C427F9392F158C893C21CAF64B9394DF9544823B5FEC6AD43A067BA8D1A425C00C635820143DB6104784CEE363BB3B8E3B97D38CF086BF73CB01C547DE0A27DCF72B79DA458607BFB01992978325AC6C5446B016DFB2BCA09F9E291C5788BA5DA28ECF06313A7A9A8AE3740BB62F3B11527DDB970801AAC9117D04810A3C9B94172836F7E93F8B2B0828ABC24A0A5DA67620741D9DF56651DF21BEC0AE6BF6A483DA826C8C1DAE7D032E9CDB10564053FE7A433E6B12CAF01A74E34272DB3BFB9A24D7D61032B9C700AEFE3907B222BAD103067527D7AAF0A1783681CEB7C821FB70BADBE0C566AF51C2A8C7CED408AC337B47EBFBF370D6CD9E35BA0920959C503E4973EC0BCFDE517D18A913563CD847FD2391C1E45033D374363F536972EBD9CFC4A7E0E4E9ED6F6EF07308F9CC1AD714E2FF1287A2EA88D967AF5E76DECF2280AF53DBBD1C97AA5B250
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/PSKPHJ+TimesNewRomanPS-BoldMT cguidfix
/F2.1/PSKPHJ+TimesNewRomanPS-BoldMT renmfont
%RBIBeginFontSubset: AEFBCW+STSong
%!FontType1-1.0: AEFBCW+STSong 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /AEFBCW+STSong def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid1078 put
dup 34 /gid1356 put
dup 35 /gid2440 put
dup 36 /gid1574 put
dup 37 /gid3557 put
dup 38 /gid1752 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -95 1 index div -200 2 index div 1004 3 index div 936 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/gid1078 1 def
/gid1356 2 def
/gid1574 3 def
/gid1752 4 def
/gid2440 5 def
/gid3557 6 def
/gid42949 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-95 -200 1004 936}def
/UniqueID 4448078 def
currentdict currentfile eexec


6D9D91F1F507FEA9BDBF2453B0630DE1816ECA56C2C6EDF75FDBB7F09D083E9BB0B8BC6254953BF2214A1BAB3D17479D843C1EE040F0DA32E2C14FC607FF38910E0DEF886E4D7ACC626E01F8F26BA075B8FB43E4DDD6BFF113AB0573C51294C2FE36CD58DB266534AE5AE2DF602FA6FE0AD274F33CD123767BFAFDF4FB15BDC2441302249632BEA16E5C61B7688DB8F0F1681BC76B66FD7F748FF0454E1151915FDD16E92E24DF959CE0938ADD4E285CEF1B88E6D7EB3DCDA74D0222C3C47B1C7D3265F45A2C6DC9F9829EB93E4016D5148B82E6D29665C1BDA48E72DB90413FB7894A6A8FC585D9D58FACE4669FC0BD5047FAA882F916779B8B7B18129A5F5F6C4F5EE2734323E2085083A52FEAACC8FE30F48189BAD89BABF246A8D71CD2CBD0C85F389BE750F34EEE4499D4481B05E68408C4362CE26BA22C2587B8F983748CA66971F61319A64D4A7430057C3F1DDF55B3C50E719D04CBB14B3F89B41F3D768B3F3A700ED446D991DCFBB20EF4714952E091D883513761820382141721A33D97541BE64DB00CCE826007D31871C8B228E0B1ED591D2F15F19126404FC34111D841E12967EC0941BED847CA14A3A51EFBB31C5386B96D609C5EBF73262461FFB069B620A23761EE54D01F63B51E13A18D5A23D277BE8AA88FD30583DA74BF20091EC841A72A0CC9ED4D4182BEAB8301F63202500DD112D3D46920B0C6FF01490F5DD71DA6F2F6EDDD16AF2AD1887A6B20EEF7C6118853B01C87E7E8D6F127B95AF0C63CF65E13654B6E0F56971FE1420D8D78FB6A9B81DAF43FD84258F801762E4414C74BF487822903479D459999DFEB9697DC684F83DF2938107305C2C29A4F3DAA2967633CCF2539E10B86CD0B3F9CEAFF7721B320B3AC4C3F8CFE17188E94AA32B36C6CF8C9FB16003B67D6BF523797B554FF8E30A7D465A2D47D610BE7556136BF7140F95CA5746698CEFE2E2BE4AFB0A63D73B17939735D767CFC6D65ECE381EFB57DB1E0871443491ADC965FD54DE3C018DB046BBF78F36D2370D4E44D90925D6ED78CD28E38C5F7B2137D96951F5F5B7D1D5B7508AB320E0A166EDB43E18011C2E54F572B5776C83C5BA50678A3D886C5FC4C3EEB4FC8FAD84FA4F67177C9636F998BD3B6A702FD79D112F5923394AFA41841AD37AF4A57304F53FB31EB8488A8E6CB3037A9A1B29268D4AF904A0D26C552D7925BD58823FDB09F7E31F294A82D5CA92FFBB211C06891A9C5D89D64CC76F9070E9E49F1169D7E73211AA97C3FF073C88E6BBE0AC605D2D1AE9C44714D3BF7BF9C1A0D29F23C9125CD7A3BFC61DD53A1A9E534DFAF8C402968B348C4ABB15D6AA9C769E279CB1FF2713B0B9DBF979DB37CD541E6A77B6B383976B7DECF62C3FF5C86F9830928F72913266227376AD447A770A15E6CFE56A872CDCF3FF7FEE8EC9B02DCD69357DAD6
C722FBDABC491993024FB9C360D1D0E361EED32B39864138F9CC3F07191E368C55478AD451990913A758ED53B86012619B7513D053D9C20D485A470497099C68BE00BC48160AB6F113071735B6CD49DFCAF899B6BE265B833F2995667530E830C03406E475CC9FABF3D3857B807788978EA3A74E4645FEF40E16FCAB80FD19604C04B2CE3E32B264C0A9EE81E230DB41F23EE9BA0D49A7644B6C87BDFC1507F752AE697C0FFCADE7F6AFEA0F5CC38A702009D83A06C9DAA9F0D4CFC4169F8318C32A4516AA61E93E602FAC897305FDDF5DCA9BAE6E6127AF0CD03C9C152BE1830DA0C14F47B869DCED4D399E274C75750AF2C9A6A2A27111C1958136FC2C5C3137CC216CF770BB593EF08AF26109F3E3408EF315CDE445385FFFF9E376C7D4EBC4004382B1D7399250C920627A797ABF71B30DEBE14C94CB2DF54D19E52F5079B86ED88773EC4EFE79F9A00BF1A0FA5EA8A9955E230306E30848809BE3CAE229997C14D44DEB21480F88CED2CEDD1BCF600EE3603C9D399F0BE9D0AECD9E7C201DE4A7A2306DAF616D7D479C54D4DCDD481227FD485724E9AE76BE725D62102807975B0D3A84E42AA7CEF40BADD3257DCBB1057218D4E612194E0E2E9D78F321DDF9C24089A09B8F0FAC0162C2537EC7441CC9A58D18F4415887D50DEA94F532C474ECCF2AE9997C8AE4B88C860C78D8C5752E559A72B63096A65366034512E7AD838DBC9B9720E44EC1795A5E5DB5371FB3D43DFB1FE15436D0D8C6A9BA90080CBFE47FA898522025055D0C2387
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AEFBCW+STSong cguidfix
/F3.1/AEFBCW+STSong renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.33564013 1 0.24705882 sc
q
0 0 311.67569 136.07292 rc
36.734257 134.91696 m
35.214485 83.111687 l
1.791644 133.90372 l
1.9576257 135.12099 l
h
36.734257 134.91696 m
f
2 J
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
85.481155 391.40506 m
83.96138 443.21033 l
50.53854 392.4183 l
50.704521 391.20102 l
h
85.481155 391.40506 m
S
1 0.84350634 0.74901962 sc
CM
310.97125 24.701399 m
201.2823 25.70233 l
201.15613 50.388519 l
310.84161 110.48072 l
h
310.97125 24.701399 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
359.71814 501.62061 m
250.02921 500.61969 l
249.90303 475.9335 l
359.58853 415.84131 l
h
359.71814 501.62061 m
S
249.45914 390.74908 m
359.91016 390.74908 l
359.91016 501.2001 l
249.45914 501.2001 l
h
249.45914 390.74908 m
S
1 1 1 sc
CM
235.41568 108.26014 m
235.4162 109.19463 235.23039 110.1287 234.8723 110.99186 c
234.51517 111.85541 233.98605 112.64728 233.32491 113.30769 c
232.66449 113.96884 231.87262 114.49796 231.00908 114.85509 c
230.14592 115.21318 229.21184 115.39898 228.27736 115.39846 c
227.34288 115.39898 226.4088 115.21318 225.54564 114.85509 c
224.6821 114.49796 223.89023 113.96884 223.22981 113.30769 c
222.56866 112.64728 222.03955 111.85541 221.68242 110.99186 c
221.32433 110.1287 221.13852 109.19463 221.13904 108.26014 c
221.13852 107.32565 221.32433 106.39158 221.68242 105.52843 c
222.03955 104.66488 222.56866 103.873 223.22981 103.21259 c
223.89023 102.55145 224.6821 102.02233 225.54564 101.6652 c
226.4088 101.30711 227.34288 101.12131 228.27736 101.12183 c
229.21184 101.12131 230.14592 101.30711 231.00908 101.6652 c
231.87262 102.02233 232.66449 102.55145 233.32491 103.21259 c
233.98605 103.873 234.51517 104.66488 234.8723 105.52843 c
235.23039 106.39158 235.4162 107.32565 235.41568 108.26014 c
h
235.41568 108.26014 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
284.16257 418.06189 m
284.16309 417.12738 283.97729 416.1933 283.6192 415.33017 c
283.26205 414.46661 282.73294 413.67474 282.07181 413.01431 c
281.41138 412.35318 280.61951 411.82407 279.75598 411.46692 c
278.89282 411.10883 277.95874 410.92303 277.02426 410.92355 c
276.08978 410.92303 275.1557 411.10883 274.29254 411.46692 c
273.42899 411.82407 272.63712 412.35318 271.97672 413.01431 c
271.31555 413.67474 270.78644 414.46661 270.42932 415.33017 c
270.07123 416.1933 269.88541 417.12738 269.88593 418.06189 c
269.88541 418.99637 270.07123 419.93045 270.42932 420.79358 c
270.78644 421.65714 271.31555 422.44901 271.97672 423.10944 c
272.63712 423.77057 273.42899 424.29968 274.29254 424.65683 c
275.1557 425.01492 276.08978 425.20071 277.02426 425.2002 c
277.95874 425.20071 278.89282 425.01492 279.75598 424.65683 c
280.61951 424.29968 281.41138 423.77057 282.07181 423.10944 c
282.73294 422.44901 283.26205 421.65714 283.6192 420.79358 c
283.97729 419.93045 284.16309 418.99637 284.16257 418.06189 c
h
284.16257 418.06189 m
S
1 1 1 sc
CM
287.65765 108.26014 m
287.65817 109.19463 287.47235 110.1287 287.11426 110.99186 c
286.75714 111.85541 286.22803 112.64728 285.56686 113.30769 c
284.90646 113.96884 284.11459 114.49796 283.25104 114.85509 c
282.38788 115.21318 281.4538 115.39898 280.51932 115.39846 c
279.58484 115.39898 278.65076 115.21318 277.7876 114.85509 c
276.92404 114.49796 276.13217 113.96884 275.47177 113.30769 c
274.81064 112.64728 274.28152 111.85541 273.92438 110.99186 c
273.56628 110.1287 273.38049 109.19463 273.38101 108.26014 c
273.38049 107.32565 273.56628 106.39158 273.92438 105.52843 c
274.28152 104.66488 274.81064 103.873 275.47177 103.21259 c
276.13217 102.55145 276.92404 102.02233 277.7876 101.6652 c
278.65076 101.30711 279.58484 101.12131 280.51932 101.12183 c
281.4538 101.12131 282.38788 101.30711 283.25104 101.6652 c
284.11459 102.02233 284.90646 102.55145 285.56686 103.21259 c
286.22803 103.873 286.75714 104.66488 287.11426 105.52843 c
287.47235 106.39158 287.65817 107.32565 287.65765 108.26014 c
h
287.65765 108.26014 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
336.40454 418.06189 m
336.40506 417.12738 336.21927 416.1933 335.86118 415.33017 c
335.50403 414.46661 334.97491 413.67474 334.31378 413.01431 c
333.65335 412.35318 332.86148 411.82407 331.99792 411.46692 c
331.13477 411.10883 330.20071 410.92303 329.2662 410.92355 c
328.33173 410.92303 327.39764 411.10883 326.53452 411.46692 c
325.67096 411.82407 324.87909 412.35318 324.21866 413.01431 c
323.55753 413.67474 323.02841 414.46661 322.67126 415.33017 c
322.31317 416.1933 322.12738 417.12738 322.1279 418.06189 c
322.12738 418.99637 322.31317 419.93045 322.67126 420.79358 c
323.02841 421.65714 323.55753 422.44901 324.21866 423.10944 c
324.87909 423.77057 325.67096 424.29968 326.53452 424.65683 c
327.39764 425.01492 328.33173 425.20071 329.2662 425.2002 c
330.20071 425.20071 331.13477 425.01492 331.99792 424.65683 c
332.86148 424.29968 333.65335 423.77057 334.31378 423.10944 c
334.97491 422.44901 335.50403 421.65714 335.86118 420.79358 c
336.21927 419.93045 336.40506 418.99637 336.40454 418.06189 c
h
336.40454 418.06189 m
S
1 0.3764706 0 sc
CM
235.41568 56.018177 m
235.4162 56.952663 235.23039 57.886738 234.8723 58.749893 c
234.51517 59.613445 233.98605 60.405315 233.32491 61.065731 c
232.66449 61.726879 231.87262 62.255989 231.00908 62.613125 c
230.14592 62.971214 229.21184 63.157013 228.27736 63.156498 c
227.34288 63.157013 226.4088 62.971214 225.54564 62.613125 c
224.6821 62.255989 223.89023 61.726879 223.22981 61.065731 c
222.56866 60.405315 222.03955 59.613445 221.68242 58.749893 c
221.32433 57.886738 221.13852 56.952663 221.13904 56.018177 c
221.13852 55.083691 221.32433 54.149616 221.68242 53.286461 c
222.03955 52.422913 222.56866 51.631039 223.22981 50.970623 c
223.89023 50.309479 224.6821 49.780365 225.54564 49.423233 c
226.4088 49.065144 227.34288 48.879345 228.27736 48.87986 c
229.21184 48.879345 230.14592 49.065144 231.00908 49.423233 c
231.87262 49.780365 232.66449 50.309479 233.32491 50.970623 c
233.98605 51.631039 234.51517 52.422913 234.8723 53.286461 c
235.23039 54.149616 235.4162 55.083691 235.41568 56.018177 c
h
235.41568 56.018177 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
284.16257 470.30383 m
284.16309 469.36935 283.97729 468.43527 283.6192 467.57211 c
283.26205 466.70859 282.73294 465.91669 282.07181 465.25629 c
281.41138 464.59515 280.61951 464.06604 279.75598 463.70889 c
278.89282 463.3508 277.95874 463.16501 277.02426 463.16553 c
276.08978 463.16501 275.1557 463.3508 274.29254 463.70889 c
273.42899 464.06604 272.63712 464.59515 271.97672 465.25629 c
271.31555 465.91669 270.78644 466.70859 270.42932 467.57211 c
270.07123 468.43527 269.88541 469.36935 269.88593 470.30383 c
269.88541 471.23831 270.07123 472.17239 270.42932 473.03555 c
270.78644 473.89911 271.31555 474.69098 271.97672 475.35138 c
272.63712 476.01254 273.42899 476.54166 274.29254 476.89877 c
275.1557 477.25687 276.08978 477.44269 277.02426 477.44217 c
277.95874 477.44269 278.89282 477.25687 279.75598 476.89877 c
280.61951 476.54166 281.41138 476.01254 282.07181 475.35138 c
282.73294 474.69098 283.26205 473.89911 283.6192 473.03555 c
283.97729 472.17239 284.16309 471.23831 284.16257 470.30383 c
h
284.16257 470.30383 m
S
1 0.3764706 0 sc
CM
287.65765 56.018177 m
287.65817 56.952663 287.47235 57.886738 287.11426 58.749893 c
286.75714 59.613445 286.22803 60.405315 285.56686 61.065731 c
284.90646 61.726879 284.11459 62.255989 283.25104 62.613125 c
282.38788 62.971214 281.4538 63.157013 280.51932 63.156498 c
279.58484 63.157013 278.65076 62.971214 277.7876 62.613125 c
276.92404 62.255989 276.13217 61.726879 275.47177 61.065731 c
274.81064 60.405315 274.28152 59.613445 273.92438 58.749893 c
273.56628 57.886738 273.38049 56.952663 273.38101 56.018177 c
273.38049 55.083691 273.56628 54.149616 273.92438 53.286461 c
274.28152 52.422913 274.81064 51.631039 275.47177 50.970623 c
276.13217 50.309479 276.92404 49.780365 277.7876 49.423233 c
278.65076 49.065144 279.58484 48.879345 280.51932 48.87986 c
281.4538 48.879345 282.38788 49.065144 283.25104 49.423233 c
284.11459 49.780365 284.90646 50.309479 285.56686 50.970623 c
286.22803 51.631039 286.75714 52.422913 287.11426 53.286461 c
287.47235 54.149616 287.65817 55.083691 287.65765 56.018177 c
h
287.65765 56.018177 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
336.40454 470.30383 m
336.40506 469.36935 336.21927 468.43527 335.86118 467.57211 c
335.50403 466.70859 334.97491 465.91669 334.31378 465.25629 c
333.65335 464.59515 332.86148 464.06604 331.99792 463.70889 c
331.13477 463.3508 330.20071 463.16501 329.2662 463.16553 c
328.33173 463.16501 327.39764 463.3508 326.53452 463.70889 c
325.67096 464.06604 324.87909 464.59515 324.21866 465.25629 c
323.55753 465.91669 323.02841 466.70859 322.67126 467.57211 c
322.31317 468.43527 322.12738 469.36935 322.1279 470.30383 c
322.12738 471.23831 322.31317 472.17239 322.67126 473.03555 c
323.02841 473.89911 323.55753 474.69098 324.21866 475.35138 c
324.87909 476.01254 325.67096 476.54166 326.53452 476.89877 c
327.39764 477.25687 328.33173 477.44269 329.2662 477.44217 c
330.20071 477.44269 331.13477 477.25687 331.99792 476.89877 c
332.86148 476.54166 333.65335 476.01254 334.31378 475.35138 c
334.97491 474.69098 335.50403 473.89911 335.86118 473.03555 c
336.21927 472.17239 336.40506 471.23831 336.40454 470.30383 c
h
336.40454 470.30383 m
S
[
4
4
] 0 d
250.31682 443.85751 m
358.60553 443.85751 l
S
[
10
10
] 0 d
304.46118 392.61551 m
304.46118 500.90421 l
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
191.64668 411.43274 m
(!"#)[ 12.000000 12.000000 0.000000 ] xS
188.64069 428.43274 m
($%&'\()[ 12.000000 4.812000 6.000000 7.200000 0.000000 ] xS
187.29901 492.20718 m
("#)[ 12.000000 0.000000 ] xS
[] 0 d
0.60000002 i
214.95876 488.62509 m
238.12781 481.83112 l
S
CM
196.5947 46.606239 m
190.15082 41.865295 l
188.61099 47.116505 l
h
196.5947 46.606239 m
f
0.25 w
1 0 0 -1 -48.746895 526.32202 cm
245.3416 479.71579 m
238.89772 484.45673 l
237.35788 479.20551 l
h
245.3416 479.71579 m
S
1 w
231.00565 414.57559 m
261.08548 415.51675 l
S
CM
219.85243 110.57017 m
212.25301 108.07044 l
212.42413 113.54008 l
h
219.85243 110.57017 m
f
0.25 w
1 0 0 -1 -48.746895 526.32202 cm
268.59933 415.75186 m
260.99991 418.25159 l
261.17105 412.78192 l
h
268.59933 415.75186 m
S
1 0.84350634 0.74901962 sc
CM
110.7949 24.701399 m
1.1059542 25.70233 l
0.97978163 50.388519 l
110.66528 110.48072 l
h
110.7949 24.701399 m
f
1 w
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
159.54179 501.62061 m
49.852852 500.61969 l
49.726677 475.9335 l
159.41217 415.84131 l
h
159.54179 501.62061 m
S
49.28278 390.74908 m
159.73381 390.74908 l
159.73381 501.2001 l
49.28278 501.2001 l
h
49.28278 390.74908 m
S
0 1 0.25882354 sc
CM
35.239326 108.26014 m
35.239841 109.19463 35.054043 110.1287 34.695953 110.99186 c
34.338818 111.85541 33.809708 112.64728 33.14856 113.30769 c
32.488144 113.96884 31.696274 114.49796 30.832724 114.85509 c
29.969568 115.21318 29.035492 115.39898 28.101007 115.39846 c
27.166521 115.39898 26.232445 115.21318 25.369291 114.85509 c
24.505741 114.49796 23.713869 113.96884 23.053453 113.30769 c
22.392307 112.64728 21.863195 111.85541 21.506062 110.99186 c
21.147972 110.1287 20.962172 109.19463 20.962688 108.26014 c
20.962172 107.32565 21.147972 106.39158 21.506062 105.52843 c
21.863195 104.66488 22.392307 103.873 23.053453 103.21259 c
23.713869 102.55145 24.505741 102.02233 25.369291 101.6652 c
26.232445 101.30711 27.166521 101.12131 28.101007 101.12183 c
29.035492 101.12131 29.969568 101.30711 30.832724 101.6652 c
31.696274 102.02233 32.488144 102.55145 33.14856 103.21259 c
33.809708 103.873 34.338818 104.66488 34.695953 105.52843 c
35.054043 106.39158 35.239841 107.32565 35.239326 108.26014 c
h
35.239326 108.26014 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
83.986221 418.06189 m
83.98674 417.12738 83.800941 416.1933 83.442848 415.33017 c
83.085716 414.46661 82.556602 413.67474 81.895454 413.01431 c
81.235039 412.35318 80.443169 411.82407 79.57962 411.46692 c
78.716461 411.10883 77.782387 410.92303 76.8479 410.92355 c
75.913414 410.92303 74.97934 411.10883 74.116188 411.46692 c
73.25264 411.82407 72.460762 412.35318 71.800346 413.01431 c
71.139206 413.67474 70.610092 414.46661 70.25296 415.33017 c
69.894867 416.1933 69.709068 417.12738 69.709587 418.06189 c
69.709068 418.99637 69.894867 419.93045 70.25296 420.79358 c
70.610092 421.65714 71.139206 422.44901 71.800346 423.10944 c
72.460762 423.77057 73.25264 424.29968 74.116188 424.65683 c
74.97934 425.01492 75.913414 425.20071 76.8479 425.2002 c
77.782387 425.20071 78.716461 425.01492 79.57962 424.65683 c
80.443169 424.29968 81.235039 423.77057 81.895454 423.10944 c
82.556602 422.44901 83.085716 421.65714 83.442848 420.79358 c
83.800941 419.93045 83.98674 418.99637 83.986221 418.06189 c
h
83.986221 418.06189 m
S
1 1 1 sc
CM
87.481293 108.26014 m
87.481804 109.19463 87.296005 110.1287 86.93792 110.99186 c
86.58078 111.85541 86.051674 112.64728 85.390526 113.30769 c
84.73011 113.96884 83.93824 114.49796 83.074684 114.85509 c
82.211533 115.21318 81.277458 115.39898 80.342972 115.39846 c
79.408485 115.39898 78.474411 115.21318 77.611252 114.85509 c
76.747704 114.49796 75.955833 113.96884 75.295418 113.30769 c
74.63427 112.64728 74.105164 111.85541 73.748024 110.99186 c
73.389938 110.1287 73.20414 109.19463 73.204651 108.26014 c
73.20414 107.32565 73.389938 106.39158 73.748024 105.52843 c
74.105164 104.66488 74.63427 103.873 75.295418 103.21259 c
75.955833 102.55145 76.747704 102.02233 77.611252 101.6652 c
78.474411 101.30711 79.408485 101.12131 80.342972 101.12183 c
81.277458 101.12131 82.211533 101.30711 83.074684 101.6652 c
83.93824 102.02233 84.73011 102.55145 85.390526 103.21259 c
86.051674 103.873 86.58078 104.66488 86.93792 105.52843 c
87.296005 106.39158 87.481804 107.32565 87.481293 108.26014 c
h
87.481293 108.26014 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
136.22818 418.06189 m
136.2287 417.12738 136.04291 416.1933 135.68481 415.33017 c
135.32768 414.46661 134.79857 413.67474 134.13742 413.01431 c
133.47701 412.35318 132.68513 411.82407 131.82158 411.46692 c
130.95844 411.10883 130.02435 410.92303 129.08987 410.92355 c
128.15538 410.92303 127.22131 411.10883 126.35815 411.46692 c
125.4946 411.82407 124.70273 412.35318 124.04231 413.01431 c
123.38116 413.67474 122.85206 414.46661 122.49492 415.33017 c
122.13683 416.1933 121.95103 417.12738 121.95155 418.06189 c
121.95103 418.99637 122.13683 419.93045 122.49492 420.79358 c
122.85206 421.65714 123.38116 422.44901 124.04231 423.10944 c
124.70273 423.77057 125.4946 424.29968 126.35815 424.65683 c
127.22131 425.01492 128.15538 425.20071 129.08987 425.2002 c
130.02435 425.20071 130.95844 425.01492 131.82158 424.65683 c
132.68513 424.29968 133.47701 423.77057 134.13742 423.10944 c
134.79857 422.44901 135.32768 421.65714 135.68481 420.79358 c
136.04291 419.93045 136.2287 418.99637 136.22818 418.06189 c
h
136.22818 418.06189 m
S
1 0.3764706 0 sc
CM
35.239326 56.018177 m
35.239841 56.952663 35.054043 57.886738 34.695953 58.749893 c
34.338818 59.613445 33.809708 60.405315 33.14856 61.065731 c
32.488144 61.726879 31.696274 62.255989 30.832724 62.613125 c
29.969568 62.971214 29.035492 63.157013 28.101007 63.156498 c
27.166521 63.157013 26.232445 62.971214 25.369291 62.613125 c
24.505741 62.255989 23.713869 61.726879 23.053453 61.065731 c
22.392307 60.405315 21.863195 59.613445 21.506062 58.749893 c
21.147972 57.886738 20.962172 56.952663 20.962688 56.018177 c
20.962172 55.083691 21.147972 54.149616 21.506062 53.286461 c
21.863195 52.422913 22.392307 51.631039 23.053453 50.970623 c
23.713869 50.309479 24.505741 49.780365 25.369291 49.423233 c
26.232445 49.065144 27.166521 48.879345 28.101007 48.87986 c
29.035492 48.879345 29.969568 49.065144 30.832724 49.423233 c
31.696274 49.780365 32.488144 50.309479 33.14856 50.970623 c
33.809708 51.631039 34.338818 52.422913 34.695953 53.286461 c
35.054043 54.149616 35.239841 55.083691 35.239326 56.018177 c
h
35.239326 56.018177 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
83.986221 470.30383 m
83.98674 469.36935 83.800941 468.43527 83.442848 467.57211 c
83.085716 466.70859 82.556602 465.91669 81.895454 465.25629 c
81.235039 464.59515 80.443169 464.06604 79.57962 463.70889 c
78.716461 463.3508 77.782387 463.16501 76.8479 463.16553 c
75.913414 463.16501 74.97934 463.3508 74.116188 463.70889 c
73.25264 464.06604 72.460762 464.59515 71.800346 465.25629 c
71.139206 465.91669 70.610092 466.70859 70.25296 467.57211 c
69.894867 468.43527 69.709068 469.36935 69.709587 470.30383 c
69.709068 471.23831 69.894867 472.17239 70.25296 473.03555 c
70.610092 473.89911 71.139206 474.69098 71.800346 475.35138 c
72.460762 476.01254 73.25264 476.54166 74.116188 476.89877 c
74.97934 477.25687 75.913414 477.44269 76.8479 477.44217 c
77.782387 477.44269 78.716461 477.25687 79.57962 476.89877 c
80.443169 476.54166 81.235039 476.01254 81.895454 475.35138 c
82.556602 474.69098 83.085716 473.89911 83.442848 473.03555 c
83.800941 472.17239 83.98674 471.23831 83.986221 470.30383 c
h
83.986221 470.30383 m
S
1 0.3764706 0 sc
CM
87.481293 56.018177 m
87.481804 56.952663 87.296005 57.886738 86.93792 58.749893 c
86.58078 59.613445 86.051674 60.405315 85.390526 61.065731 c
84.73011 61.726879 83.93824 62.255989 83.074684 62.613125 c
82.211533 62.971214 81.277458 63.157013 80.342972 63.156498 c
79.408485 63.157013 78.474411 62.971214 77.611252 62.613125 c
76.747704 62.255989 75.955833 61.726879 75.295418 61.065731 c
74.63427 60.405315 74.105164 59.613445 73.748024 58.749893 c
73.389938 57.886738 73.20414 56.952663 73.204651 56.018177 c
73.20414 55.083691 73.389938 54.149616 73.748024 53.286461 c
74.105164 52.422913 74.63427 51.631039 75.295418 50.970623 c
75.955833 50.309479 76.747704 49.780365 77.611252 49.423233 c
78.474411 49.065144 79.408485 48.879345 80.342972 48.87986 c
81.277458 48.879345 82.211533 49.065144 83.074684 49.423233 c
83.93824 49.780365 84.73011 50.309479 85.390526 50.970623 c
86.051674 51.631039 86.58078 52.422913 86.93792 53.286461 c
87.296005 54.149616 87.481804 55.083691 87.481293 56.018177 c
h
87.481293 56.018177 m
f
0 0 0 sc
1 0 0 -1 -48.746895 526.32202 cm
136.22818 470.30383 m
136.2287 469.36935 136.04291 468.43527 135.68481 467.57211 c
135.32768 466.70859 134.79857 465.91669 134.13742 465.25629 c
133.47701 464.59515 132.68513 464.06604 131.82158 463.70889 c
130.95844 463.3508 130.02435 463.16501 129.08987 463.16553 c
128.15538 463.16501 127.22131 463.3508 126.35815 463.70889 c
125.4946 464.06604 124.70273 464.59515 124.04231 465.25629 c
123.38116 465.91669 122.85206 466.70859 122.49492 467.57211 c
122.13683 468.43527 121.95103 469.36935 121.95155 470.30383 c
121.95103 471.23831 122.13683 472.17239 122.49492 473.03555 c
122.85206 473.89911 123.38116 474.69098 124.04231 475.35138 c
124.70273 476.01254 125.4946 476.54166 126.35815 476.89877 c
127.22131 477.25687 128.15538 477.44269 129.08987 477.44217 c
130.02435 477.44269 130.95844 477.25687 131.82158 476.89877 c
132.68513 476.54166 133.47701 476.01254 134.13742 475.35138 c
134.79857 474.69098 135.32768 473.89911 135.68481 473.03555 c
136.04291 472.17239 136.2287 471.23831 136.22818 470.30383 c
h
136.22818 470.30383 m
S
[
4
4
] 0 d
50.140469 443.85751 m
158.42917 443.85751 l
S
[
10
10
] 0 d
104.28482 392.61551 m
104.28482 500.90421 l
S
[] 0 d
145.25497 415.73022 m
190.3089 409.06546 l
S
CM
89.071457 109.4917 m
96.107674 113.29849 l
96.90847 107.88508 l
h
89.071457 109.4917 m
f
0.25 w
1 0 0 -1 -48.746895 526.32202 cm
137.81836 416.83032 m
144.85457 413.02353 l
145.65536 418.43692 l
h
137.81836 416.83032 m
S
1 w
165.8461 475.31213 m
187.12672 488.92749 l
S
CM
110.76682 55.061333 m
118.57381 53.314674 l
115.62459 48.705074 l
h
110.76682 55.061333 m
f
0.25 w
1 0 0 -1 -48.746895 526.32202 cm
159.51372 471.26068 m
167.32071 473.00735 l
164.37149 477.61694 l
h
159.51372 471.26068 m
S
0 i
/F2.1[ 12 0 0 -12 0 0]sf
61.591736 521.32202 m
(!"#$)[ 3.996094 6.000000 3.996094 0.000000 ] xS
/F3.1[ 12 0 0 -12 0 0]sf
78.583923 521.32202 m
(!"#$%)[ 12.000000 12.000000 12.000000 12.000000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
260.88153 521.32202 m
(!%#$)[ 3.996094 6.673828 3.996094 0.000000 ] xS
/F3.1[ 12 0 0 -12 0 0]sf
278.54755 521.32202 m
(&!"#$%)[ 12.000000 12.000000 12.000000 12.000000 12.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
