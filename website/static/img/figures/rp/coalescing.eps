%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12 (Build 16A284a) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 643 154
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 643 154
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: BEFWGX+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 8/24/16% Copyright 2016 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid19 putdup 2 /cid20 putdup 3 /cid21 putdup 4 /cid22 putdup 5 /cid23 putdup 6 /cid24 putdup 7 /cid25 putdup 8 /cid26 putdup 9 /cid27 putdup 10 /cid28 putdup 11 /cid2248 putdup 12 /cid2254 putdup 13 /cid5205 putdup 14 /cid5466 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E422A5CF7CE5E880A3068D81000433612B2FD76F7FB1EBCF1AE84A9553FE14839A36489BE979EDC48166D9A26F018947E2F504C746D801C6BE0CCFF2C367B74F5E06F5092739D1B80708741FE79F6F5EE718D4A491DB292CCA8A786DED408D895C12D01146053B6E06FEA6B72C2C02A72C32AA4267E2593999214A6C2061EA720BDBD4C892B0D352046E4128CBACC83AC696762A583058C8940DD575D1F1A6008C43E268EB7AEBE02F39AA6ACBD42E27ECC987F9D5DB27308E25BADF9DF81ECF385699879CAB41014563025C8BAC4CFC4A86ACFB8161753EC4972B9700A4C43A7126E08D3F178B531BA451731A437A8187FB0902FC010AACD9EEAB6086DB7FA2C349BDBC119F7F0017589ABEB5283C29C13682B3B87D05B8C82452FAC566297BCC4B6E5B1E9A0BE81C9C8D7B6930C9E85D1D04B337CCF3527948BD7F34327A748771F032F2F55CE09A2C403A201B05A0B162F0B3889CA0EDF5FF0654E566959AE47164060585D0A14A751BC50431821DBFDB75A1B4564A198D0ACD0004D2785F7A2CF1A1727B0CCCF09D32F195D32D4E9BFF3A99859E523DE30F758DE1727E379A383B1F029BFC0C45379F7561A31A70F3B74AA6967004A15C6D400FAC3275DE7A14BC687B9F813136C3DC7A5F0EA9D8643AB479DB75234ECA1FB9C93B02A43A837550CFF6BF94C3A25A84FC336644AF16B69689257224B5D41CB14495A4C005058CFEF1AB6014C33DD46B9691C28DA3868E53036B5BDB6FDD11828EB7389BF8310BFDA2C01FE0E4168093A582D5638617D5882563C67BAB79543AFC44B1DF5FEA3DC5526AFA2F511F33EF49CF9108D16AD14261BA6632C020AEC7A3F1ACABC4F4DD565B7AE33C8D769A6F8CE04C857662DA872BB19C8A402576D4F574A45F5A046264BBD6A3319CDD3D3F40D5D97F825770060306A85630E81CDEB75E009F060A5E71D2751D50731147EBF5AFEA7E83F572BC73D750884D185642904D12022EA4700CD9A907F2FFF4BC22F769F75B8212CF442A90081EE204F09E4ADBEDB04252D489360B5D5CD6530FE827054AEFDE486C04FC5F599FCC0E363988AE7E0C07F19F017156AC9A1B33B29EA27BF65AC8005AE315386DD95F9ECE8FA8526F3F6B14BF5EF462FB0037237D043FBDEDAA37D0A9ACCDACF028091B7AEEA55502C4F8AF47DF9CEFCC4F8E99FC0304D9360FE77D278D58CEF53DADE7C3F2EF07E8320EAB26E93A1126CA4423B59459A8703E7ECE7B147CD841F152689A9F7CD1349304B2F9EC4556771937606B10A4B02291A5CAB7AE949BB4DCAEF8A1F739D2B26B3CE06199C6B0B2257FB5D486D251E2BF1F7322221496ED598AA16CF791603720FEE7B6862F5BF2DDF56ACA61BA2677526914A4CE49B9702ECE77C6CF84B60E689BCE698625FAC9D1C607EAD62563BD166B243C5FF302E477C11AA3C3765159DB9A6D9D174501AB64BA4DECC1E9E07FCDC101E8C3A0EC44E8605479645295274B03D75C0BA90BE3FC2A4F1D1156C7F92D0A67187043D1C2FCF6CE932D7109EFFA104EB79D5021456B5BB7A142BDBF2005786A3CAD3516AD6E42DFAF0E67E4A0D2D5275AEA39C3723750325CB7F0C00819D64BFED8DB38748B6B1E038E9F60BECB4FCEA21FB89065ED90C501DEF43702928CE3FEE222C85D1E6CDFAD77CB3030A60104D2A740E8E2F09E729DC8143B9E3954FC876C6F0105187BA6D004651CA10194C486EF7E464941316552ED693095D9719B30DE501EA69E576BD644137CBC7F30F3665A2BD17D0DABF8B013335FED321AF09CCC12B307F1B189D707DD87E98AAB26E4AA89FF37F6BDE0F25D1EB97258B0787B8548DFE828F30FF2B825113C8E1DDCC80B91BBC777FF9446C7DF11AA18000D034FF4E042173533ADE4E36DAF9205919F153F8BCEB9DBE37B3DEBB397FDC2F7D215C27D1FD42BA9514DB8A8DD7E2409562193FAF92F402E5A5BFF234370F5634AB14C7905FE0182E4613AC5E5F3EFC16A52FD16CC156866539C5B85552135F93EA55D31B15592CD032827624D1A20F66ED6CE90927673C208F04B4B751D064DBF5767E68534DBB582A658A1D606EAD83E5FA5D6DB65E999402909C6C3A81D8848CF21D9C9315214AB62A8323657D30CD71E23321D5AF7504F70B860D522E04000A4EC501057341250F2DC163F7E6108241CAD4D5C9A9666ABB9DF64953C27F38F355733D2D23247FAE1623980125DDE9D394EAE14A95B7DDAA340B54730EE014A9A461734E5565EE48F56E0689B595787806CF281B6F327DCBF0671C2104B14AB7ED6344ACBD92A21CA66CA14F1654ACCFEC0F6C3233A347C57DAB96222AA7B7E8C0A4239DC97EA360D44E2A78FB3889ADDB363F50B1EA5F7D0540EE4D09981B1887FE41260BA84F115CD15DFEC9467F9DE8A52EBC26B74E379E4A886C6A4AEDAD1FE57E1EEF17C1DC54722B3416BBE02E7EA718168150405441D99611E650E642BD43A9E0413B4DCC0E0789D3907821C5AEE036896C6AF59F90CDB3F5019BBAC6974D2251631494766A47EA77EEFE7389E42D1D406CA953ED444D8EC2C682B3AFAB69BB14E8112B4DF12388BBAC3D33BB00CAB853CF9F951EDC40DC4C9B16E7BA129B2B9862AC58CBFE7EE7E545A0405170F29AB84A9492917B2433B6BD77628DFDD5764B24A0FB407BF7D2054B3B85B6A3236DB24BB55F92E7A2DB756ED3CEA2B4DC1B4257F8EBB4B0DF1D26CDCF73B48671FB72BAF13730FFE6BBCA8E26E09E4ABDA7E6C6D8EE82AF7F6A3F35EED29C5A5FB7B860217277AC67628E86750F8A17EA7B605117E8A54706388D3D5061A3425DEF8F2FF8C01AD5788A8DE615658C018955B3893064C8E7977C4C06D223488FCC77BB1F03CAFA34B0359F7D614CD295A064A4695813D95B51C3BEDB177D186AA097C4411E7473CF25A9D09DB58FCF83A67C4AA300FC54C0608E51615115239DF63D92BEAC04C92062A485ACE62E619C749EFB3F59AA854626E1C68D275A3FF1EE23E6FB161A92E83E873BC1CA41C7BE5C3D321616FC149A4309366DB2D100A05BC60AD7C63878DE128D0422B2C8821AC2F39A182D74F05291A7D7185D54736DAC395DE9CCC846D177F14B4120E88ED42CDE4FF61FFFCA8018CA9BEF2A5315EFACFC899C1F61541DB530DCEA56508758D59AC255BDCE3284A4C0A125CFC22F5B71B2F34CCA1089F53131B104D98790E8CC8028D0E5859988C7DCA65588E879FA498909CDA0149FDD3F345D265A5EA19166A1BCE9DB01E3726DD21F5D14177275F3806068016FC4305CDFD8631B4C30FE3F95EFF9729E1CC8DD593C3A26937FB0017F155EFB49E9D6F252E6B1328147C3863D055D38B25DEE02C849E4605C9652DFF6D05B27870815BEFD98ED573142F708538D82094E49EC7B156147978189AE8DD5B94EA801B442BA16D45EB642B4E458643493BD7A796679CFD8911F06CB29944AB212A39004A4798A4EE06841C9B4D7D83D2127CBEA0DD1E42CA619F9BD6BD8D54547BACEF8C1314EC20DD5B3F6E294F773EEF69F5F3F9377BABC7B0E15213F2F9461E669CA336E1D46C426C5A6F57E2F16C93FDAF6DF7D94B00EF4BF3AA6C143DC2E22CE0667A8907163B1E6F89788E2FF74D84F97BE233D04E6E3B0A66C655C34CB755F54A238A762EF021F7B92D7BFFF46B9D13CD8F9E05D9D9F2F2F5F6E9EF35579662D72A55102EFB2E6359F60F1EA44BF96C3CB6B48CD10B92B3743BD48688D6C03A5D97F092F4F0966495F5310122E35428D9DDA6EAF5D8DF6220FD7014EF172550CEC48F283FC1EF2B1F06362DD898F635266DC42D000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: BEFWGX+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /BEFWGX+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid5466 putdup 34 /cid5205 putdup 35 /cid19 putdup 36 /cid21 putdup 37 /cid22 putdup 38 /cid23 putdup 39 /cid24 putdup 40 /cid25 putdup 41 /cid26 putdup 42 /cid27 putdup 43 /cid28 putdup 44 /cid20 putdup 45 /cid2248 putdup 46 /cid2254 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 16 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid19 {(\001) 0 $SP} putdup /cid20 {(\002) 0 $SP} putdup /cid21 {(\003) 0 $SP} putdup /cid22 {(\004) 0 $SP} putdup /cid23 {(\005) 0 $SP} putdup /cid24 {(\006) 0 $SP} putdup /cid25 {(\007) 0 $SP} putdup /cid26 {(\010) 0 $SP} putdup /cid27 {(\011) 0 $SP} putdup /cid28 {(\012) 0 $SP} putdup /cid2248 {(\013) 0 $SP} putdup /cid2254 {(\014) 0 $SP} putdup /cid5205 {(\015) 0 $SP} putdup /cid5466 {(\016) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/BEFWGX+PingFangSC-Regular cguidfix
/F1.1/BEFWGX+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.5 w
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 642.45312 153.92636 rc
1 0 0 -1 -218.97542 358.42319 cm
219.32993 271.70862 m
219.48341 215.38446 l
238.10388 215.4352 l
237.95039 271.75937 l
h
219.32993 271.70862 m
S
0 i
0 1 1 0 -224.57909 -109.97986 cm
/F1.1[ 12 0 0 -12 0 0]sf
204.89316 238.74352 m
(!"##)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
259.186 271.70862 m
259.33948 215.38446 l
277.95993 215.4352 l
277.80646 271.75937 l
h
259.186 271.70862 m
S
0 i
0 1 1 0 -184.72302 -149.83592 cm
244.74922 238.74352 m
(!"#$)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
279.11401 271.70862 m
279.26752 215.38446 l
297.88797 215.4352 l
297.7345 271.75937 l
h
279.11401 271.70862 m
S
0 i
0 1 1 0 -164.795 -169.76396 cm
264.67725 238.74352 m
(!"#%)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
299.04205 271.70862 m
299.19553 215.38446 l
317.81601 215.4352 l
317.66254 271.75937 l
h
299.04205 271.70862 m
S
0 i
0 1 1 0 -144.86696 -189.69199 cm
284.60529 238.74352 m
(!"#&)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
318.97009 271.70862 m
319.12357 215.38446 l
337.74405 215.4352 l
337.59055 271.75937 l
h
318.97009 271.70862 m
S
0 i
0 1 1 0 -124.93893 -209.62003 cm
304.53333 238.74352 m
(!"#')[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
338.89813 271.70862 m
339.05161 215.38446 l
357.67206 215.4352 l
357.51859 271.75937 l
h
338.89813 271.70862 m
S
0 i
0 1 1 0 -105.01089 -229.54805 cm
324.46133 238.74352 m
(!"#\()[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
358.82614 271.70862 m
358.97964 215.38446 l
377.6001 215.4352 l
377.44662 271.75937 l
h
358.82614 271.70862 m
S
0 i
0 1 1 0 -85.082863 -249.47609 cm
344.38937 238.74352 m
(!"#\))[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
378.75418 271.70862 m
378.90765 215.38446 l
397.52814 215.4352 l
397.37466 271.75937 l
h
378.75418 271.70862 m
S
0 i
0 1 1 0 -65.154831 -269.40411 cm
364.31741 238.74352 m
(!"#*)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
398.68222 271.70862 m
398.83569 215.38446 l
417.45618 215.4352 l
417.30267 271.75937 l
h
398.68222 271.70862 m
S
0 i
0 1 1 0 -45.226803 -289.33215 cm
384.24545 238.74352 m
(!"#+)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
418.61026 271.70862 m
418.76373 215.38446 l
437.38422 215.4352 l
437.23071 271.75937 l
h
418.61026 271.70862 m
S
0 i
0 1 1 0 -25.298769 -309.26019 cm
404.17346 238.74352 m
(!",#)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
438.53827 271.70862 m
438.69177 215.38446 l
457.31223 215.4352 l
457.15875 271.75937 l
h
438.53827 271.70862 m
S
0 i
0 1 1 0 -5.3707371 -329.1882 cm
424.1015 238.74352 m
(!",,)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
458.46631 271.70862 m
458.61981 215.38446 l
477.24026 215.4352 l
477.08679 271.75937 l
h
458.46631 271.70862 m
S
0 i
0 1 1 0 14.557295 -349.11624 cm
444.02954 238.74352 m
(!",$)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
478.39435 271.70862 m
478.54782 215.38446 l
497.1683 215.4352 l
497.0148 271.75937 l
h
478.39435 271.70862 m
S
0 i
0 1 1 0 34.485329 -369.04428 cm
463.95758 238.74352 m
(!",%)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
498.32239 271.70862 m
498.47586 215.38446 l
517.09631 215.4352 l
516.94287 271.75937 l
h
498.32239 271.70862 m
S
0 i
0 1 1 0 54.413361 -388.97232 cm
483.88559 238.74352 m
(!",&)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
518.25043 271.70862 m
518.40387 215.38446 l
537.02435 215.4352 l
536.87085 271.75937 l
h
518.25043 271.70862 m
S
0 i
0 1 1 0 74.341393 -408.90033 cm
503.81363 238.74352 m
(!",')[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
538.17847 271.70862 m
538.33191 215.38446 l
556.95239 215.4352 l
556.79889 271.75937 l
h
538.17847 271.70862 m
S
0 i
0 1 1 0 94.269424 -428.82837 cm
523.74164 238.74352 m
(!",\()[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
558.10645 271.70862 m
558.25995 215.38446 l
576.88043 215.4352 l
576.72693 271.75937 l
h
558.10645 271.70862 m
S
0 i
0 1 1 0 114.19746 -448.75641 cm
543.66968 238.74352 m
(!",\))[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
578.03448 271.70862 m
578.18799 215.38446 l
596.80847 215.4352 l
596.65497 271.75937 l
h
578.03448 271.70862 m
S
0 i
0 1 1 0 134.12549 -468.68445 cm
563.59772 238.74352 m
(!",*)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
597.96252 271.70862 m
598.11603 215.38446 l
616.73651 215.4352 l
616.58301 271.75937 l
h
597.96252 271.70862 m
S
0 i
0 1 1 0 154.05353 -488.61246 cm
583.52576 238.74352 m
(!",+)[ 12.000000 12.000000 4.812000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
617.89056 271.70862 m
618.04407 215.38446 l
636.66455 215.4352 l
636.51105 271.75937 l
h
617.89056 271.70862 m
S
0 i
0 1 1 0 173.98155 -508.5405 cm
603.4538 238.74352 m
(!"$#)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
637.8186 271.70862 m
637.97211 215.38446 l
656.59253 215.4352 l
656.43909 271.75937 l
h
637.8186 271.70862 m
S
0 i
0 1 1 0 193.90959 -528.46851 cm
623.38184 238.74352 m
(!"$,)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
657.74664 271.70862 m
657.90015 215.38446 l
676.52057 215.4352 l
676.36713 271.75937 l
h
657.74664 271.70862 m
S
0 i
0 1 1 0 213.83762 -548.39655 cm
643.30988 238.74352 m
(!"$$)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
677.67468 271.70862 m
677.82812 215.38446 l
696.44861 215.4352 l
696.29517 271.75937 l
h
677.67468 271.70862 m
S
0 i
0 1 1 0 233.76566 -568.32458 cm
663.23792 238.74352 m
(!"$%)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
697.60272 271.70862 m
697.75616 215.38446 l
716.37665 215.4352 l
716.22314 271.75937 l
h
697.60272 271.70862 m
S
0 i
0 1 1 0 253.69368 -588.25262 cm
683.16595 238.74352 m
(!"$&)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
717.53076 271.70862 m
717.6842 215.38446 l
736.30469 215.4352 l
736.15118 271.75937 l
h
717.53076 271.70862 m
S
0 i
0 1 1 0 273.6217 -608.18066 cm
703.09393 238.74352 m
(!"$')[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
737.45874 271.70862 m
737.61224 215.38446 l
756.23273 215.4352 l
756.07922 271.75937 l
h
737.45874 271.70862 m
S
0 i
0 1 1 0 293.54974 -628.1087 cm
723.02197 238.74352 m
(!"$\()[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
757.38678 271.70862 m
757.54028 215.38446 l
776.16077 215.4352 l
776.00726 271.75937 l
h
757.38678 271.70862 m
S
0 i
0 1 1 0 313.47778 -648.03674 cm
742.95001 238.74352 m
(!"$\))[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
777.31482 271.70862 m
777.46832 215.38446 l
796.08881 215.4352 l
795.9353 271.75937 l
h
777.31482 271.70862 m
S
0 i
0 1 1 0 333.40582 -667.96478 cm
762.87805 238.74352 m
(!"$*)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
797.24286 271.70862 m
797.39636 215.38446 l
816.01678 215.4352 l
815.86334 271.75937 l
h
797.24286 271.70862 m
S
0 i
0 1 1 0 353.33383 -687.89282 cm
782.80609 238.74352 m
(!"$+)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
817.1709 271.70862 m
817.3244 215.38446 l
835.94482 215.4352 l
835.79138 271.75937 l
h
817.1709 271.70862 m
S
0 i
0 1 1 0 373.26187 -707.8208 cm
802.73413 238.74352 m
(!"%#)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
837.09894 271.70862 m
837.25238 215.38446 l
855.87286 215.4352 l
855.71942 271.75937 l
h
837.09894 271.70862 m
S
0 i
0 1 1 0 393.18991 -727.74884 cm
822.66217 238.74352 m
(!"%,)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
239.25797 271.70862 m
239.41144 215.38446 l
258.03192 215.4352 l
257.87842 271.75937 l
h
239.25797 271.70862 m
S
0 i
0 1 1 0 -204.65106 -129.9079 cm
224.82118 238.74352 m
(!"#,)[ 12.000000 12.000000 7.200000 0.000000 ] xS
0.60000002 i
CM
8.193284 86.246918 m
8.2382851 86.246918 l
8.2382851 66.182449 l
10.432157 66.182449 l
8.2157841 57.583385 l
5.9994125 66.182449 l
8.193284 66.182449 l
h
8.193284 86.246918 m
f
1.25 w
1 0 0 -1 -218.97542 358.42319 cm
227.1687 272.17627 m
227.2137 272.17627 l
227.2137 292.24075 l
229.40756 292.24075 l
227.19119 300.83981 l
224.97482 292.24075 l
227.1687 292.24075 l
h
227.1687 272.17627 m
S
CM
28.216579 86.246918 m
28.261581 86.246918 l
28.261581 66.182449 l
30.455452 66.182449 l
28.23908 57.583385 l
26.022707 66.182449 l
28.216579 66.182449 l
h
28.216579 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
247.19199 272.17627 m
247.237 272.17627 l
247.237 292.24075 l
249.43086 292.24075 l
247.21449 300.83981 l
244.99812 292.24075 l
247.19199 292.24075 l
h
247.19199 272.17627 m
S
CM
48.239876 86.246918 m
48.284878 86.246918 l
48.284878 66.182449 l
50.478748 66.182449 l
48.262375 57.583385 l
46.046005 66.182449 l
48.239876 66.182449 l
h
48.239876 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
267.2153 272.17627 m
267.26028 272.17627 l
267.26028 292.24075 l
269.45416 292.24075 l
267.23779 300.83981 l
265.02142 292.24075 l
267.2153 292.24075 l
h
267.2153 272.17627 m
S
CM
68.263168 86.246918 m
68.308174 86.246918 l
68.308174 66.182449 l
70.502045 66.182449 l
68.285667 57.583385 l
66.069298 66.182449 l
68.263168 66.182449 l
h
68.263168 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
287.23859 272.17627 m
287.28357 272.17627 l
287.28357 292.24075 l
289.47745 292.24075 l
287.26108 300.83981 l
285.04471 292.24075 l
287.23859 292.24075 l
h
287.23859 272.17627 m
S
CM
88.286469 86.246918 m
88.331467 86.246918 l
88.331467 66.182449 l
90.525337 66.182449 l
88.308968 57.583385 l
86.092598 66.182449 l
88.286469 66.182449 l
h
88.286469 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
307.26187 272.17627 m
307.30688 272.17627 l
307.30688 292.24075 l
309.50076 292.24075 l
307.28439 300.83981 l
305.06799 292.24075 l
307.26187 292.24075 l
h
307.26187 272.17627 m
S
CM
108.30976 86.246918 m
108.35476 86.246918 l
108.35476 66.182449 l
110.54864 66.182449 l
108.33226 57.583385 l
106.11589 66.182449 l
108.30976 66.182449 l
h
108.30976 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
327.28519 272.17627 m
327.33017 272.17627 l
327.33017 292.24075 l
329.52405 292.24075 l
327.30768 300.83981 l
325.09131 292.24075 l
327.28519 292.24075 l
h
327.28519 272.17627 m
S
CM
128.33305 86.246918 m
128.37805 86.246918 l
128.37805 66.182449 l
130.57193 66.182449 l
128.35556 57.583385 l
126.13918 66.182449 l
128.33305 66.182449 l
h
128.33305 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
347.30847 272.17627 m
347.35345 272.17627 l
347.35345 292.24075 l
349.54733 292.24075 l
347.33096 300.83981 l
345.11459 292.24075 l
347.30847 292.24075 l
h
347.30847 272.17627 m
S
CM
148.35635 86.246918 m
148.40135 86.246918 l
148.40135 66.182449 l
150.59523 66.182449 l
148.37886 57.583385 l
146.16248 66.182449 l
148.35635 66.182449 l
h
148.35635 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
367.33176 272.17627 m
367.37677 272.17627 l
367.37677 292.24075 l
369.57065 292.24075 l
367.35428 300.83981 l
365.13788 292.24075 l
367.33176 292.24075 l
h
367.33176 272.17627 m
S
CM
168.37965 86.246918 m
168.42465 86.246918 l
168.42465 66.182449 l
170.61852 66.182449 l
168.40215 57.583385 l
166.18578 66.182449 l
168.37965 66.182449 l
h
168.37965 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
387.35507 272.17627 m
387.40005 272.17627 l
387.40005 292.24075 l
389.59393 292.24075 l
387.37756 300.83981 l
385.16119 292.24075 l
387.35507 292.24075 l
h
387.35507 272.17627 m
S
CM
188.40294 86.246918 m
188.44795 86.246918 l
188.44795 66.182449 l
190.64182 66.182449 l
188.42545 57.583385 l
186.20908 66.182449 l
188.40294 66.182449 l
h
188.40294 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
407.37836 272.17627 m
407.42337 272.17627 l
407.42337 292.24075 l
409.61722 292.24075 l
407.40085 300.83981 l
405.18448 292.24075 l
407.37836 292.24075 l
h
407.37836 272.17627 m
S
CM
208.42624 86.246918 m
208.47124 86.246918 l
208.47124 66.182449 l
210.66512 66.182449 l
208.44875 57.583385 l
206.23236 66.182449 l
208.42624 66.182449 l
h
208.42624 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
427.40164 272.17627 m
427.44666 272.17627 l
427.44666 292.24075 l
429.64053 292.24075 l
427.42416 300.83981 l
425.20779 292.24075 l
427.40164 292.24075 l
h
427.40164 272.17627 m
S
CM
228.44954 86.246918 m
228.49454 86.246918 l
228.49454 66.182449 l
230.6884 66.182449 l
228.47203 57.583385 l
226.25566 66.182449 l
228.44954 66.182449 l
h
228.44954 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
447.42496 272.17627 m
447.46994 272.17627 l
447.46994 292.24075 l
449.66382 292.24075 l
447.44745 300.83981 l
445.23108 292.24075 l
447.42496 292.24075 l
h
447.42496 272.17627 m
S
CM
248.47282 86.246918 m
248.51784 86.246918 l
248.51784 66.182449 l
250.7117 66.182449 l
248.49533 57.583385 l
246.27896 66.182449 l
248.47282 66.182449 l
h
248.47282 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
467.44824 272.17627 m
467.49326 272.17627 l
467.49326 292.24075 l
469.6871 292.24075 l
467.47073 300.83981 l
465.25436 292.24075 l
467.44824 292.24075 l
h
467.44824 272.17627 m
S
CM
268.49612 86.246918 m
268.54114 86.246918 l
268.54114 66.182449 l
270.73499 66.182449 l
268.51862 57.583385 l
266.30225 66.182449 l
268.49612 66.182449 l
h
268.49612 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
487.47153 272.17627 m
487.51654 272.17627 l
487.51654 292.24075 l
489.71042 292.24075 l
487.49405 300.83981 l
485.27768 292.24075 l
487.47153 292.24075 l
h
487.47153 272.17627 m
S
CM
288.51941 86.246918 m
288.56442 86.246918 l
288.56442 66.182449 l
290.7583 66.182449 l
288.54193 57.583385 l
286.32556 66.182449 l
288.51941 66.182449 l
h
288.51941 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
507.49484 272.17627 m
507.53983 272.17627 l
507.53983 292.24075 l
509.7337 292.24075 l
507.51733 300.83981 l
505.30096 292.24075 l
507.49484 292.24075 l
h
507.49484 272.17627 m
S
CM
308.54272 86.246918 m
308.58771 86.246918 l
308.58771 66.182449 l
310.78159 66.182449 l
308.56522 57.583385 l
306.34885 66.182449 l
308.54272 66.182449 l
h
308.54272 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
527.51813 272.17627 m
527.56311 272.17627 l
527.56311 292.24075 l
529.75702 292.24075 l
527.54065 300.83981 l
525.32428 292.24075 l
527.51813 292.24075 l
h
527.51813 272.17627 m
S
CM
328.5885 86.246918 m
328.5885 86.246918 l
328.5885 66.182449 l
330.80487 66.182449 l
328.5885 57.583385 l
326.37213 66.182449 l
328.5885 66.182449 l
h
328.5885 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
547.5639 272.17627 m
547.5639 272.17627 l
547.5639 292.24075 l
549.78027 292.24075 l
547.5639 300.83981 l
545.34753 292.24075 l
547.5639 292.24075 l
h
547.5639 272.17627 m
S
CM
348.58929 86.246918 m
348.63431 86.246918 l
348.63431 66.182449 l
350.82819 66.182449 l
348.61182 57.583385 l
346.39545 66.182449 l
348.58929 66.182449 l
h
348.58929 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
567.5647 272.17627 m
567.60974 272.17627 l
567.60974 292.24075 l
569.80359 292.24075 l
567.58722 300.83981 l
565.37085 292.24075 l
567.5647 292.24075 l
h
567.5647 272.17627 m
S
CM
368.61261 86.246918 m
368.65759 86.246918 l
368.65759 66.182449 l
370.85147 66.182449 l
368.6351 57.583385 l
366.41873 66.182449 l
368.61261 66.182449 l
h
368.61261 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
587.58801 272.17627 m
587.633 272.17627 l
587.633 292.24075 l
589.8269 292.24075 l
587.61053 300.83981 l
585.39417 292.24075 l
587.58801 292.24075 l
h
587.58801 272.17627 m
S
CM
388.63589 86.246918 m
388.68091 86.246918 l
388.68091 66.182449 l
390.87479 66.182449 l
388.65839 57.583385 l
386.44202 66.182449 l
388.63589 66.182449 l
h
388.63589 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
607.61133 272.17627 m
607.65631 272.17627 l
607.65631 292.24075 l
609.85016 292.24075 l
607.63379 300.83981 l
605.41742 292.24075 l
607.61133 292.24075 l
h
607.61133 272.17627 m
S
CM
408.65918 86.246918 m
408.70419 86.246918 l
408.70419 66.182449 l
410.89807 66.182449 l
408.6817 57.583385 l
406.46533 66.182449 l
408.65918 66.182449 l
h
408.65918 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
627.63458 272.17627 m
627.67963 272.17627 l
627.67963 292.24075 l
629.87347 292.24075 l
627.6571 300.83981 l
625.44073 292.24075 l
627.63458 292.24075 l
h
627.63458 272.17627 m
S
CM
428.6825 86.246918 m
428.72748 86.246918 l
428.72748 66.182449 l
430.92136 66.182449 l
428.70499 57.583385 l
426.48862 66.182449 l
428.6825 66.182449 l
h
428.6825 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
647.6579 272.17627 m
647.70288 272.17627 l
647.70288 292.24075 l
649.89679 292.24075 l
647.68042 300.83981 l
645.46405 292.24075 l
647.6579 292.24075 l
h
647.6579 272.17627 m
S
CM
448.70578 86.246918 m
448.75079 86.246918 l
448.75079 66.182449 l
450.94467 66.182449 l
448.72827 57.583385 l
446.5119 66.182449 l
448.70578 66.182449 l
h
448.70578 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
667.68121 272.17627 m
667.7262 272.17627 l
667.7262 292.24075 l
669.92004 292.24075 l
667.70367 300.83981 l
665.4873 292.24075 l
667.68121 292.24075 l
h
667.68121 272.17627 m
S
CM
468.7291 86.246918 m
468.77408 86.246918 l
468.77408 66.182449 l
470.96796 66.182449 l
468.75159 57.583385 l
466.53522 66.182449 l
468.7291 66.182449 l
h
468.7291 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
687.70447 272.17627 m
687.74951 272.17627 l
687.74951 292.24075 l
689.94336 292.24075 l
687.72699 300.83981 l
685.51062 292.24075 l
687.70447 292.24075 l
h
687.70447 272.17627 m
S
CM
488.75238 86.246918 m
488.79736 86.246918 l
488.79736 66.182449 l
490.99124 66.182449 l
488.77487 57.583385 l
486.5585 66.182449 l
488.75238 66.182449 l
h
488.75238 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
707.72778 272.17627 m
707.77277 272.17627 l
707.77277 292.24075 l
709.96667 292.24075 l
707.75031 300.83981 l
705.53394 292.24075 l
707.72778 292.24075 l
h
707.72778 272.17627 m
S
CM
508.77567 86.246918 m
508.82068 86.246918 l
508.82068 66.182449 l
511.01456 66.182449 l
508.79819 57.583385 l
506.58179 66.182449 l
508.77567 66.182449 l
h
508.77567 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
727.7511 272.17627 m
727.79608 272.17627 l
727.79608 292.24075 l
729.98993 292.24075 l
727.77356 300.83981 l
725.55719 292.24075 l
727.7511 292.24075 l
h
727.7511 272.17627 m
S
CM
528.79895 86.246918 m
528.84399 86.246918 l
528.84399 66.182449 l
531.03784 66.182449 l
528.82147 57.583385 l
526.6051 66.182449 l
528.79895 66.182449 l
h
528.79895 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
747.77435 272.17627 m
747.8194 272.17627 l
747.8194 292.24075 l
750.01324 292.24075 l
747.79688 300.83981 l
745.58051 292.24075 l
747.77435 292.24075 l
h
747.77435 272.17627 m
S
CM
548.82227 86.246918 m
548.86725 86.246918 l
548.86725 66.182449 l
551.06116 66.182449 l
548.84479 57.583385 l
546.62842 66.182449 l
548.82227 66.182449 l
h
548.82227 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
767.79767 272.17627 m
767.84265 272.17627 l
767.84265 292.24075 l
770.03656 292.24075 l
767.82019 300.83981 l
765.60382 292.24075 l
767.79767 292.24075 l
h
767.79767 272.17627 m
S
CM
568.84558 86.246918 m
568.89056 86.246918 l
568.89056 66.182449 l
571.08441 66.182449 l
568.86804 57.583385 l
566.65167 66.182449 l
568.84558 66.182449 l
h
568.84558 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
787.82098 272.17627 m
787.86597 272.17627 l
787.86597 292.24075 l
790.05981 292.24075 l
787.84344 300.83981 l
785.62708 292.24075 l
787.82098 292.24075 l
h
787.82098 272.17627 m
S
CM
588.86884 86.246918 m
588.91388 86.246918 l
588.91388 66.182449 l
591.10773 66.182449 l
588.89136 57.583385 l
586.67499 66.182449 l
588.86884 66.182449 l
h
588.86884 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
807.84424 272.17627 m
807.88928 272.17627 l
807.88928 292.24075 l
810.08313 292.24075 l
807.86676 300.83981 l
805.65039 292.24075 l
807.84424 292.24075 l
h
807.84424 272.17627 m
S
CM
608.89215 86.246918 m
608.93713 86.246918 l
608.93713 66.182449 l
611.13104 66.182449 l
608.91467 57.583385 l
606.6983 66.182449 l
608.89215 66.182449 l
h
608.89215 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
827.86755 272.17627 m
827.91254 272.17627 l
827.91254 292.24075 l
830.10645 292.24075 l
827.89008 300.83981 l
825.67371 292.24075 l
827.86755 292.24075 l
h
827.86755 272.17627 m
S
CM
628.91547 86.246918 m
628.96045 86.246918 l
628.96045 66.182449 l
631.1543 66.182449 l
628.93793 57.583385 l
626.72156 66.182449 l
628.91547 66.182449 l
h
628.91547 86.246918 m
f
1 0 0 -1 -218.97542 358.42319 cm
847.89087 272.17627 m
847.93585 272.17627 l
847.93585 292.24075 l
850.1297 292.24075 l
847.91333 300.83981 l
845.69696 292.24075 l
847.89087 292.24075 l
h
847.89087 272.17627 m
S
0.5 w
219.32993 358.01794 m
219.48341 301.69376 l
238.10388 301.74451 l
237.95039 358.06866 l
h
219.32993 358.01794 m
S
0 i
0 1 1 0 -310.8884 -196.28917 cm
204.89316 325.05283 m
(-.,$%)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
259.186 358.01794 m
259.33948 301.69376 l
277.95993 301.74451 l
277.80646 358.06866 l
h
259.186 358.01794 m
S
0 i
0 1 1 0 -271.03235 -236.14523 cm
244.74922 325.05283 m
(-.,$')[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
279.11401 358.01794 m
279.26752 301.69376 l
297.88797 301.74451 l
297.7345 358.06866 l
h
279.11401 358.01794 m
S
0 i
0 1 1 0 -251.10431 -256.07327 cm
264.67725 325.05283 m
(-.,$\()[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
299.04205 358.01794 m
299.19553 301.69376 l
317.81601 301.74451 l
317.66254 358.06866 l
h
299.04205 358.01794 m
S
0 i
0 1 1 0 -231.17627 -276.00131 cm
284.60529 325.05283 m
(-.,$\))[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
318.97009 358.01794 m
319.12357 301.69376 l
337.74405 301.74451 l
337.59055 358.06866 l
h
318.97009 358.01794 m
S
0 i
0 1 1 0 -211.24825 -295.92932 cm
304.53333 325.05283 m
(-.,$*)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
338.89813 358.01794 m
339.05161 301.69376 l
357.67206 301.74451 l
357.51859 358.06866 l
h
338.89813 358.01794 m
S
0 i
0 1 1 0 -191.32021 -315.85736 cm
324.46133 325.05283 m
(-.,$+)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
358.82614 358.01794 m
358.97964 301.69376 l
377.6001 301.74451 l
377.44662 358.06866 l
h
358.82614 358.01794 m
S
0 i
0 1 1 0 -171.39218 -335.7854 cm
344.38937 325.05283 m
(-.,%#)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
378.75418 358.01794 m
378.90765 301.69376 l
397.52814 301.74451 l
397.37466 358.06866 l
h
378.75418 358.01794 m
S
0 i
0 1 1 0 -151.46414 -355.71344 cm
364.31741 325.05283 m
(-.,%,)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
398.68222 358.01794 m
398.83569 301.69376 l
417.45618 301.74451 l
417.30267 358.06866 l
h
398.68222 358.01794 m
S
0 i
0 1 1 0 -131.53612 -375.64145 cm
384.24545 325.05283 m
(-.,%$)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
418.61026 358.01794 m
418.76373 301.69376 l
437.38422 301.74451 l
437.23071 358.06866 l
h
418.61026 358.01794 m
S
0 i
0 1 1 0 -111.60808 -395.56949 cm
404.17346 325.05283 m
(-.,%%)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
438.53827 358.01794 m
438.69177 301.69376 l
457.31223 301.74451 l
457.15875 358.06866 l
h
438.53827 358.01794 m
S
0 i
0 1 1 0 -91.680046 -415.49753 cm
424.1015 325.05283 m
(-.,%&)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
458.46631 358.01794 m
458.61981 301.69376 l
477.24026 301.74451 l
477.08679 358.06866 l
h
458.46631 358.01794 m
S
0 i
0 1 1 0 -71.752014 -435.42557 cm
444.02954 325.05283 m
(-.,%')[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
478.39435 358.01794 m
478.54782 301.69376 l
497.1683 301.74451 l
497.0148 358.06866 l
h
478.39435 358.01794 m
S
0 i
0 1 1 0 -51.823982 -455.35358 cm
463.95758 325.05283 m
(-.,%\()[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
498.32239 358.01794 m
498.47586 301.69376 l
517.09631 301.74451 l
516.94287 358.06866 l
h
498.32239 358.01794 m
S
0 i
0 1 1 0 -31.89595 -475.28162 cm
483.88559 325.05283 m
(-.,%\))[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
518.25043 358.01794 m
518.40387 301.69376 l
537.02435 301.74451 l
536.87085 358.06866 l
h
518.25043 358.01794 m
S
0 i
0 1 1 0 -11.967918 -495.20966 cm
503.81363 325.05283 m
(-.,%*)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
538.17847 358.01794 m
538.33191 301.69376 l
556.95239 301.74451 l
556.79889 358.06866 l
h
538.17847 358.01794 m
S
0 i
0 1 1 0 7.9601135 -515.1377 cm
523.74164 325.05283 m
(-.,%+)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
558.10645 358.01794 m
558.25995 301.69376 l
576.88043 301.74451 l
576.72693 358.06866 l
h
558.10645 358.01794 m
S
0 i
0 1 1 0 27.888145 -535.06573 cm
543.66968 325.05283 m
(-.,&#)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
578.03448 358.01794 m
578.18799 301.69376 l
596.80847 301.74451 l
596.65497 358.06866 l
h
578.03448 358.01794 m
S
0 i
0 1 1 0 47.816177 -554.99377 cm
563.59772 325.05283 m
(-.,&,)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
597.96252 358.01794 m
598.11603 301.69376 l
616.73651 301.74451 l
616.58301 358.06866 l
h
597.96252 358.01794 m
S
0 i
0 1 1 0 67.744209 -574.92175 cm
583.52576 325.05283 m
(-.,&$)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
617.89056 358.01794 m
618.04407 301.69376 l
636.66455 301.74451 l
636.51105 358.06866 l
h
617.89056 358.01794 m
S
0 i
0 1 1 0 87.672241 -594.84979 cm
603.4538 325.05283 m
(-.,&%)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
637.8186 358.01794 m
637.97211 301.69376 l
656.59253 301.74451 l
656.43909 358.06866 l
h
637.8186 358.01794 m
S
0 i
0 1 1 0 107.60027 -614.77783 cm
623.38184 325.05283 m
(-.,&&)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
657.74664 358.01794 m
657.90015 301.69376 l
676.52057 301.74451 l
676.36713 358.06866 l
h
657.74664 358.01794 m
S
0 i
0 1 1 0 127.52831 -634.70587 cm
643.30988 325.05283 m
(-.,&')[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
677.67468 358.01794 m
677.82812 301.69376 l
696.44861 301.74451 l
696.29517 358.06866 l
h
677.67468 358.01794 m
S
0 i
0 1 1 0 147.45634 -654.63391 cm
663.23792 325.05283 m
(-.,&\()[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
697.60272 358.01794 m
697.75616 301.69376 l
716.37665 301.74451 l
716.22314 358.06866 l
h
697.60272 358.01794 m
S
0 i
0 1 1 0 167.38437 -674.56195 cm
683.16595 325.05283 m
(-.,&\))[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
717.53076 358.01794 m
717.6842 301.69376 l
736.30469 301.74451 l
736.15118 358.06866 l
h
717.53076 358.01794 m
S
0 i
0 1 1 0 187.31241 -694.48999 cm
703.09393 325.05283 m
(-.,&*)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
737.45874 358.01794 m
737.61224 301.69376 l
756.23273 301.74451 l
756.07922 358.06866 l
h
737.45874 358.01794 m
S
0 i
0 1 1 0 207.24043 -714.41803 cm
723.02197 325.05283 m
(-.,&+)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
757.38678 358.01794 m
757.54028 301.69376 l
776.16077 301.74451 l
776.00726 358.06866 l
h
757.38678 358.01794 m
S
0 i
0 1 1 0 227.16847 -734.34607 cm
742.95001 325.05283 m
(-.,'#)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
777.31482 358.01794 m
777.46832 301.69376 l
796.08881 301.74451 l
795.9353 358.06866 l
h
777.31482 358.01794 m
S
0 i
0 1 1 0 247.0965 -754.27405 cm
762.87805 325.05283 m
(-.,',)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
797.24286 358.01794 m
797.39636 301.69376 l
816.01678 301.74451 l
815.86334 358.06866 l
h
797.24286 358.01794 m
S
0 i
0 1 1 0 267.02454 -774.20209 cm
782.80609 325.05283 m
(-.,'$)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
817.1709 358.01794 m
817.3244 301.69376 l
835.94482 301.74451 l
835.79138 358.06866 l
h
817.1709 358.01794 m
S
0 i
0 1 1 0 286.95258 -794.13013 cm
802.73413 325.05283 m
(-.,'%)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
837.09894 358.01794 m
837.25238 301.69376 l
855.87286 301.74451 l
855.71942 358.06866 l
h
837.09894 358.01794 m
S
0 i
0 1 1 0 306.88058 -814.05817 cm
822.66217 325.05283 m
(-.,'&)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -218.97542 358.42319 cm
239.25797 358.01794 m
239.41144 301.69376 l
258.03192 301.74451 l
257.87842 358.06866 l
h
239.25797 358.01794 m
S
0 i
0 1 1 0 -290.96036 -216.21719 cm
224.82118 325.05283 m
(-.,$&)[ 12.000000 12.000000 4.812000 7.200000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
