%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 319 246
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 319 246
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: XPFEES+Helvetica-Bold
%!FontType1-1.0: XPFEES+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /XPFEES+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /x put
dup 34 /h put
dup 35 /o put
dup 36 /zero put
dup 37 /two put
dup 38 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000003886670676D000000000000042400000B97676C79660000000000000FBC0000055068656164000000000000150C0000003668686561000000000000154400000024686D74780000000000001568000000206C6F63610000000000001588000000126D617870000000000000159C000000207072657000000000000015BC000003D305C0001105C2002D0597001D0442001D0000FFDA0000FFDB0000FFDAFE53FFEF05D0000AFFFDFFED03340000012200000122DFFB011400AF000700B7007E000400D200AA0109002300ED013200D9011D012A00D800FE00DB00E2001A008B00A0001A004500E801F6000900E90128013200360082009E009FFF700070003F003F00E801050015003800E9FF7BFFC8FFF90042008A00C401070113011DFFB9002F00870087009A009C010C0262FFB10018004C00770080008200C900DAFFB2FFEA001A003600E50111012F043BFFDD00020005001A0039008900AA00B701210123012A015BFFE5000200180023005C00AAFF4DFF76FFB2FFEF001A002F004E007B008A00E1011F0126012B019A01DE03EDFF80FF8E0007001C004E005500630063006D00810098009C00AD011F01260162041C051500390044004B0063008E00CC00E800F2010001290142017802D503EA03F0043B049AFFC400050055005C0060009F0103011D012401550164017001AD01B401C301F602370261033903D5047004A100020055008800A100BD00C700D300DD00EB00ED00FA00FD0104012B013E014F017B019D01AD01E20233025D027D028C02DA02EF033103DE0407048B058505BBFF04FFD5FFFA0007001E002A003B004700510058006500650066006E0075007F00840107009700B100C300CC00DF00DF010A0110012F013101470154015B016B0179009101A401BA01DC01E401E601E901F60213021F0223022F0276027D0282028902AD02B202B902ED03110374037D03C003DE03F60415045D04C004C004DF052D0574061C064B0751FE94FEDFFF2DFF90FF9AFFEA0016001600240029002D003E0104006D006D008400870089008E009C00A400AB00AE00B200B2FFFB013900C400D100DF00E100EF00F70121011C011C012101320138015001510154016C016D017F019801A401AA01B601BA01BB01BB00D701D701FB01FB01FE00190209022D025B026102790279029A009802D302DA02EF030C03210328032D034B0353FFF103AD03B103F20425045A0471047B048A0498049F051C053D0557055A0570059505B605CB05D605EF05F4061D068706A406B406D307080734079807FE012201320120012500B400BE0082009603700132012400430184011D015600CC010500ED00C500FB00F900C000A7011D00FE035500880026FFA100B8FF8800DD00BD00B5






00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/h 4 def
/o 5 def
/x 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4330650 def
currentdict currentfile eexec

80807AFA83BC657A619BDAA503676E01E422D5E8DB61E37A86CB98293A1836B10C9E174FF1D5BD06BABD293DE1DED238C4B0DDF1228CAE4E0B0B3B2426C7CDCFF02ECA17119A12D7E72E7CB4898B7C992403112BB915E8FA191611DFC9969F146C480E9F727FEEE873DC60CB1208A350A03DB5127F09290D58E33DA749E7195E340E9D547AB0DB13374F0536804CE36CA6CD44679F0EE927E304487274AB71661BDED4D48299A103B643A7BF515D39EA6CC00C39945FFB5B06AE3A6281118559A043CBDD5745BE0C526D7F0466B180E3566AFC6F3D3ECEF887129EA2695C1A2182F525031C7EA5221DB5FD7D788067EDBBD71D24F836D03A7DD6D5356859AAE0FC53031F9693E9CD247A01CF45FBD96D9DF44A5EB2F8795AFFECB7D53AAE580F99B31FB2CF0F2423AA3BCD0D909E4B8B6F79E9A5808C900C3FC31E5C73E07D91769467D007A4B8E9097F5F3A55AF03645712E19BC341C3BE90D6C9C10A81A374CF0222A6175D50BFF2E1C7B02120288AAE1A3BE140F52B898CF32BC71BD4E77CD97D6163DBC09E4A8361B4F669234F12852F983F404BF4775BC5E0D52FE132C4A366962EC104278F55E401D2F5F8D391DF2B3E78D91920D31DFB978C361DC944DDB1FBB471F18B426F58307E716B1562A1BF2FFB56AB04C785223B978E0D5DF5B8A551C9415409CFCA43957F92F2D3D61E6775EE289C16CEFC8BCFF936413228BE24FBD130F7DF39431D67B8D48AFA354FA2B758CBBFD62B2A4808
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XPFEES+Helvetica-Bold cguidfix
/F1.1/XPFEES+Helvetica-Bold renmfont
%RBIBeginFontSubset: KEHQEO+Helvetica
%!FontType1-1.0: KEHQEO+Helvetica 1.0000.0.0000
14 dict begin/FontName /KEHQEO+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /two put
dup 35 /zero put
dup 36 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/u20B8 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec

B921221482F9884DA2824C476BB5012AAABDE92480BD720007311A4F6F6981DF7C10C79D1623857BE0FFCD42860A1502A1AC7354E78E3DBBC681E5B115788485ED0F6FDD30A067DEEBAADCA37309CDCEC674C3DCA0E6D9D7744301797CA9F5BB34DBE55DD67853DE53E19A18E2FFFF0EAD9111F377F745050822E87FA0E238A41E91A47FF980DF51F99F4D80CE685175ED70EBD7E6EAA5BCC899E44A74398E5026AFB0EC262E1861D1ADF76D87823497D09CC03BD6F5CE705FA6EDD5BB851710487CACF21501514C91829672128BC30407FF0F404D72A92218E9B862F41973CA285A2D9A45AE0D65139FF5330AF7E8198EF1322BA3CC152A62889DBA63A9C8E6531ACF3486662A6501C939409EA132D84AFD6C151AC43B761BA488ED2F9C5D84A7F04B1D593A9601EBF131B67C0F0BF6733087F694FF805FB3C05E420D45D5F5CFA56EC3C244DD3024E647634378E5C73C2292C9E8A89912AF26A2C463CA138AD2695747BC1A75E7A2CA5D8E377525B0D2658FB13FE2EA35041C134025D8524B270AA3CD5236C480E3B6E6BB2A060B6FC00135CB06E64272D6976ABD48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/KEHQEO+Helvetica cguidfix
/F2.1/KEHQEO+Helvetica renmfont
%RBIBeginFontSubset: QLYDNV+AppleSymbols
%!FontType1-1.0: QLYDNV+AppleSymbols 1.0000.5.0000
14 dict begin/FontName /QLYDNV+AppleSymbols def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /uni22A5 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -658 1 index div -743 2 index div 6283 3 index div 1966 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/uni22A5 1 def
/uni16F0 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-658 -743 6283 1966}def
/UniqueID 4059904 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0CBF41476A88137148272D68F00BF28F91188F04043C87873E412876B7419C78E5C32666F851DB001373375968A93CBF8097B55D54595176895AC04664F8A77C54A8D8CE7382661851DB49CAE1EC0E691C4AE8F7C67CD1390900A9CD38FBAD03EBBAE90893BC2AF93935A9C94B0A499BE5D9CC2743AB65FD41203FC4A471779BE6CF85D5727EA575992C5637616099934D630D6AA7CB48F03DEC40C0D12AC231F62BCF66C517B2BA8D4B39FE1F4D553659334FF792387B8F8BAFD022E11FEBD087B063A019C4EC41FCC2FFA4D064FA4775893EA613FBE9E0DC7E3173DCBB97C96B22B38E311144415FC3727B725B1E08B6DE41ACA8233802F15205FE7C16B15475D85A39F3B2D6D2115A002C1A61801F342C163E66023651869EEFD09DC52A9312E97A077B8EC55F106FF9C2D8181A23449D2697DAD4BA10B027A1C42CA67CBCC876FF691B7E3638F5DB7FE2628904E505450EABE7A4C17A06B8B0C4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/QLYDNV+AppleSymbols cguidfix
/F3.1/QLYDNV+AppleSymbols renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1.4173229 w
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 318.49036 245.19904 rc
1 0 0 -1 -383.58353 269.02667 cm
425.87891 48.031456 m
384.39114 54.375713 l
S
419.30948 39.632744 m
390.96057 62.774426 l
S
412.76126 31.65336 m
397.50879 70.753807 l
S
392.01715 34.823952 m
418.2529 67.583214 l
S
402.20013 33.142975 m
408.06992 69.264198 l
S
388.02664 44.714966 m
422.24341 57.692204 l
S
0.91094005 0.70545441 0.33410352 sc
CM
33.42342 217.82307 m
33.424278 219.37724 33.115273 220.93073 32.519726 222.36626 c
31.925766 223.80244 31.045788 225.11943 29.94622 226.21777 c
28.847866 227.31735 27.530888 228.19733 26.094698 228.79129 c
24.659166 229.38683 23.105682 229.69585 21.551517 229.69498 c
19.997353 229.69585 18.443871 229.38683 17.008337 228.79129 c
15.572148 228.19733 14.255169 227.31735 13.156816 226.21777 c
12.057248 225.11943 11.177271 223.80244 10.583311 222.36626 c
9.9877644 220.93073 9.6787577 219.37724 9.6796169 217.82307 c
9.6787577 216.26892 9.9877644 214.71542 10.583311 213.27989 c
11.177271 211.8437 12.057248 210.52673 13.156816 209.42838 c
14.255169 208.32881 15.572148 207.44884 17.008337 206.85487 c
18.443871 206.25932 19.997353 205.95032 21.551517 205.95117 c
23.105682 205.95032 24.659166 206.25932 26.094698 206.85487 c
27.530888 207.44884 28.847866 208.32881 29.94622 209.42838 c
31.045788 210.52673 31.925766 211.8437 32.519726 213.27989 c
33.115273 214.71542 33.424278 216.26892 33.42342 217.82307 c
h
33.42342 217.82307 m
f
2.5815804 w
0 0 0 sc
1 0 0 -1 -383.58353 269.02667 cm
417.00693 51.203583 m
417.00778 49.649422 416.69879 48.095936 416.10324 46.660404 c
415.50928 45.224216 414.6293 43.907234 413.52972 42.808884 c
412.43137 41.709316 411.11441 40.829338 409.67822 40.235378 c
408.24268 39.639832 406.68921 39.330826 405.13504 39.331684 c
403.58087 39.330826 402.02737 39.639832 400.59186 40.235378 c
399.15567 40.829338 397.83868 41.709316 396.74033 42.808884 c
395.64075 43.907234 394.76077 45.224216 394.16681 46.660404 c
393.57129 48.095936 393.26227 49.649422 393.26312 51.203583 c
393.26227 52.757748 393.57129 54.311234 394.16681 55.746765 c
394.76077 57.182953 395.64075 58.499935 396.74033 59.598286 c
397.83868 60.697853 399.15567 61.577831 400.59186 62.171791 c
402.02737 62.767338 403.58087 63.076344 405.13504 63.075485 c
406.68921 63.076344 408.24268 62.767338 409.67822 62.171791 c
411.11441 61.577831 412.43137 60.697853 413.52972 59.598286 c
414.6293 58.499935 415.50928 57.182953 416.10324 55.746765 c
416.69879 54.311234 417.00778 52.757748 417.00693 51.203583 c
h
417.00693 51.203583 m
S
Q
0.53286934 w
0 J
2 M
0.90196079 0.90196079 0.90196079 sc
q
201.89404 224.5186 m
222.18349 230.14169 242.47293 235.76479 262.76236 241.38788 c
268.06461 242.85736 274.83636 239.0246 276.30585 233.72235 c
276.40909 233.34979 276.51233 232.97723 276.6156 232.60469 c
278.08508 227.30244 274.25232 220.5307 268.95007 219.06122 c
248.66061 213.43813 228.37117 207.81503 208.08173 202.19196 c
202.77948 200.72246 196.00775 204.55522 194.53827 209.85748 c
194.43501 210.23003 194.33176 210.60258 194.22852 210.97514 c
192.75902 216.27739 196.59178 223.04912 201.89404 224.5186 c
h
201.89404 224.5186 m
W
0 0 318.49036 245.19904 rc
0.96367532 0.26707649 0.26707649 -0.96367532 -373.71417 101.98897 cm
448.66327 58.705025 m
789.34784 58.705025 l
S
448.66327 58.473343 m
789.34784 58.473343 l
S
0.89882278 0.89784515 0.89647377 sc
448.66327 58.241661 m
789.34784 58.241661 l
S
0.89725375 0.8957873 0.89373022 sc
448.66327 58.009979 m
789.34784 58.009979 l
S
0.89568478 0.89372951 0.89098668 sc
448.66327 57.778297 m
789.34784 57.778297 l
S
0.89411575 0.89167166 0.8882432 sc
448.66327 57.546616 m
789.34784 57.546616 l
S
0.89254677 0.88961381 0.88549966 sc
448.66327 57.314934 m
789.34784 57.314934 l
S
0.89097774 0.88755602 0.88275611 sc
448.66327 57.083248 m
789.34784 57.083248 l
S
0.88940877 0.88549817 0.88001263 sc
448.66327 56.851566 m
789.34784 56.851566 l
S
0.88783973 0.88344038 0.87726909 sc
448.66327 56.619884 m
789.34784 56.619884 l
S
0.88627076 0.88138252 0.87452555 sc
448.66327 56.388203 m
789.34784 56.388203 l
S
0.88470173 0.87932467 0.87178206 sc
448.66327 56.156521 m
789.34784 56.156521 l
S
0.8831327 0.87726688 0.86903852 sc
448.66327 55.924839 m
789.34784 55.924839 l
S
0.88156372 0.87520903 0.86629498 sc
448.66327 55.693157 m
789.34784 55.693157 l
S
0.87999469 0.87315124 0.8635515 sc
448.66327 55.461472 m
789.34784 55.461472 l
S
0.87842572 0.87109339 0.86080796 sc
448.66327 55.22979 m
789.34784 55.22979 l
S
0.87685668 0.86903554 0.85806441 sc
448.66327 54.998108 m
789.34784 54.998108 l
S
0.87528771 0.86697775 0.85532087 sc
448.66327 54.766426 m
789.34784 54.766426 l
S
0.87371868 0.8649199 0.85257739 sc
448.66327 54.534744 m
789.34784 54.534744 l
S
0.87214971 0.86286205 0.84983385 sc
448.66327 54.303062 m
789.34784 54.303062 l
S
0.87058067 0.86080426 0.8470903 sc
448.66327 54.071381 m
789.34784 54.071381 l
S
0.8690117 0.85874641 0.84434682 sc
448.66327 53.839699 m
789.34784 53.839699 l
S
0.86744267 0.85668862 0.84160328 sc
448.66327 53.608013 m
789.34784 53.608013 l
S
0.86587363 0.85463077 0.83885974 sc
448.66327 53.376331 m
789.34784 53.376331 l
S
0.86430466 0.85257292 0.83611625 sc
448.66327 53.14465 m
789.34784 53.14465 l
S
0.86273563 0.85051513 0.83337271 sc
448.66327 52.912968 m
789.34784 52.912968 l
S
0.86116666 0.84845728 0.83062917 sc
448.66327 52.681286 m
789.34784 52.681286 l
S
0.85959762 0.84639949 0.82788569 sc
448.66327 52.449604 m
789.34784 52.449604 l
S
0.85802865 0.84434164 0.82514215 sc
448.66327 52.217922 m
789.34784 52.217922 l
S
0.85645962 0.84228379 0.8223986 sc
448.66327 51.986237 m
789.34784 51.986237 l
S
0.85489064 0.84022599 0.81965512 sc
448.66327 51.754555 m
789.34784 51.754555 l
S
0.85332161 0.83816814 0.81691158 sc
448.66327 51.522873 m
789.34784 51.522873 l
S
0.85175264 0.83611035 0.81416804 sc
448.66327 51.291191 m
789.34784 51.291191 l
S
0.85018361 0.8340525 0.81142455 sc
448.66327 51.059509 m
789.34784 51.059509 l
S
0.84861457 0.83199465 0.80868101 sc
448.66327 50.827827 m
789.34784 50.827827 l
S
0.8470456 0.82993686 0.80593747 sc
448.66327 50.596146 m
789.34784 50.596146 l
S
0.84547657 0.82787901 0.80319399 sc
448.66327 50.36446 m
789.34784 50.36446 l
S
0.84390759 0.82582122 0.80045044 sc
448.66327 50.132778 m
789.34784 50.132778 l
S
0.84233856 0.82376337 0.7977069 sc
448.66327 49.901096 m
789.34784 49.901096 l
S
0.84076959 0.82170552 0.79496342 sc
448.66327 49.669415 m
789.34784 49.669415 l
S
0.83920056 0.81964773 0.79221988 sc
448.66327 49.437733 m
789.34784 49.437733 l
S
0.83763158 0.81758988 0.78947634 sc
448.66327 49.206051 m
789.34784 49.206051 l
S
0.83606255 0.81553209 0.78673285 sc
448.66327 48.974369 m
789.34784 48.974369 l
S
0.83449358 0.81347424 0.78398931 sc
448.66327 48.742687 m
789.34784 48.742687 l
S
0.83292454 0.81141639 0.78124577 sc
448.66327 48.511002 m
789.34784 48.511002 l
S
0.83135551 0.8093586 0.77850229 sc
448.66327 48.27932 m
789.34784 48.27932 l
S
0.82978654 0.80730075 0.77575874 sc
448.66327 48.047638 m
789.34784 48.047638 l
S
0.82821751 0.80524296 0.7730152 sc
448.66327 47.815956 m
789.34784 47.815956 l
S
0.82664853 0.80318511 0.77027172 sc
448.66327 47.584274 m
789.34784 47.584274 l
S
0.8250795 0.80112725 0.76752818 sc
448.66327 47.352592 m
789.34784 47.352592 l
S
0.82351053 0.79906946 0.76478463 sc
448.66327 47.120911 m
789.34784 47.120911 l
S
0.82194149 0.79701161 0.76204109 sc
448.66327 46.889225 m
789.34784 46.889225 l
S
0.82037252 0.79495376 0.75929761 sc
448.66327 46.657543 m
789.34784 46.657543 l
S
0.81880349 0.79289597 0.75655407 sc
448.66327 46.425861 m
789.34784 46.425861 l
S
0.81723452 0.79083812 0.75381052 sc
448.66327 46.19418 m
789.34784 46.19418 l
S
0.81566548 0.78878033 0.75106704 sc
448.66327 45.962498 m
789.34784 45.962498 l
S
0.81409645 0.78672248 0.7483235 sc
448.66327 45.730816 m
789.34784 45.730816 l
S
0.81252748 0.78466463 0.74557996 sc
448.66327 45.499134 m
789.34784 45.499134 l
S
0.81095845 0.78260684 0.74283648 sc
448.66327 45.267452 m
789.34784 45.267452 l
S
0.80938947 0.78054899 0.74009293 sc
448.66327 45.035767 m
789.34784 45.035767 l
S
0.80782044 0.7784912 0.73734939 sc
448.66327 44.804085 m
789.34784 44.804085 l
S
0.80625147 0.77643335 0.73460591 sc
448.66327 44.572403 m
789.34784 44.572403 l
S
0.80468243 0.7743755 0.73186237 sc
448.66327 44.340721 m
789.34784 44.340721 l
S
0.80311346 0.77231771 0.72911882 sc
448.66327 44.109039 m
789.34784 44.109039 l
S
0.80154443 0.77025986 0.72637534 sc
448.66327 43.877357 m
789.34784 43.877357 l
S
0.79997545 0.76820207 0.7236318 sc
448.66327 43.645676 m
789.34784 43.645676 l
S
0.79840642 0.76614422 0.72088826 sc
448.66327 43.41399 m
789.34784 43.41399 l
S
0.79683739 0.76408637 0.71814477 sc
448.66327 43.182308 m
789.34784 43.182308 l
S
0.79526842 0.76202857 0.71540123 sc
448.66327 42.950626 m
789.34784 42.950626 l
S
0.79369938 0.75997072 0.71265769 sc
448.66327 42.718945 m
789.34784 42.718945 l
S
0.79213041 0.75791293 0.70991421 sc
448.66327 42.487263 m
789.34784 42.487263 l
S
0.79056138 0.75585508 0.70717067 sc
448.66327 42.255581 m
789.34784 42.255581 l
S
0.7889924 0.75379723 0.70442712 sc
448.66327 42.023899 m
789.34784 42.023899 l
S
0.78742337 0.75173944 0.70168364 sc
448.66327 41.792217 m
789.34784 41.792217 l
S
0.7858544 0.74968159 0.6989401 sc
448.66327 41.560532 m
789.34784 41.560532 l
S
0.78428537 0.7476238 0.69619656 sc
448.66327 41.32885 m
789.34784 41.32885 l
S
0.78271639 0.74556595 0.69345307 sc
448.66327 41.097168 m
789.34784 41.097168 l
S
0.78114736 0.7435081 0.69070953 sc
448.66327 40.865486 m
789.34784 40.865486 l
S
0.77957833 0.74145031 0.68796599 sc
448.66327 40.633804 m
789.34784 40.633804 l
S
0.77800936 0.73939246 0.68522251 sc
448.66327 40.402122 m
789.34784 40.402122 l
S
0.77644032 0.73733467 0.68247896 sc
448.66327 40.170441 m
789.34784 40.170441 l
S
0.77487135 0.73527682 0.67973542 sc
448.66327 39.938755 m
789.34784 39.938755 l
S
0.77330232 0.73321897 0.67699194 sc
448.66327 39.707073 m
789.34784 39.707073 l
S
0.77173334 0.73116118 0.6742484 sc
448.66327 39.475391 m
789.34784 39.475391 l
S
0.77016431 0.72910333 0.67150486 sc
448.66327 39.24371 m
789.34784 39.24371 l
S
0.76859534 0.72704548 0.66876131 sc
448.66327 39.012028 m
789.34784 39.012028 l
S
0.76702631 0.72498769 0.66601783 sc
448.66327 38.780346 m
789.34784 38.780346 l
S
0.76545733 0.72292984 0.66327429 sc
448.66327 38.548664 m
789.34784 38.548664 l
S
0.7638883 0.72087204 0.66053075 sc
448.66327 38.316982 m
789.34784 38.316982 l
S
0.76231927 0.71881419 0.65778726 sc
448.66327 38.085297 m
789.34784 38.085297 l
S
0.76075029 0.71675634 0.65504372 sc
448.66327 37.853615 m
789.34784 37.853615 l
S
0.75918126 0.71469855 0.65230018 sc
448.66327 37.621933 m
789.34784 37.621933 l
S
0.75761229 0.7126407 0.6495567 sc
448.66327 37.390251 m
789.34784 37.390251 l
S
0.75604326 0.71058291 0.64681315 sc
448.66327 37.158569 m
789.34784 37.158569 l
S
0.75447428 0.70852506 0.64406961 sc
448.66327 36.926888 m
789.34784 36.926888 l
S
0.75290525 0.70646721 0.64132613 sc
448.66327 36.695206 m
789.34784 36.695206 l
S
0.75133628 0.70440942 0.63858259 sc
448.66327 36.46352 m
789.34784 36.46352 l
S
0.74976724 0.70235157 0.63583905 sc
448.66327 36.231838 m
789.34784 36.231838 l
S
0.74662924 0.69823593 0.63035202 sc
448.66327 36.000156 m
789.34784 36.000156 l
S
448.66327 35.768475 m
789.34784 35.768475 l
S
Q
1.4173229 w
10 M
0 0 0 sc
q
0 0 318.49036 245.19904 rc
0.96367532 0.26707649 0.26707649 -0.96367532 -373.71417 101.98897 cm
587.42419 35.652634 m
608.47845 35.652634 629.53265 35.652634 650.58691 35.652634 c
656.08905 35.652634 661.59113 41.154743 661.59113 46.656853 c
661.59113 47.043453 661.59113 47.43005 661.59113 47.816647 c
661.59113 53.318756 656.08905 58.820866 650.58691 58.820866 c
629.53265 58.820866 608.47845 58.820866 587.42419 58.820866 c
581.92212 58.820866 576.41998 53.318756 576.41998 47.816647 c
576.41998 47.43005 576.41998 47.043453 576.41998 46.656853 c
576.41998 41.154743 581.92212 35.652634 587.42419 35.652634 c
h
587.42419 35.652634 m
S
Q
0.53286934 w
2 M
0.90196079 0.90196079 0.90196079 sc
q
61.422153 21.115595 m
81.682274 26.843452 101.94239 32.571312 122.20251 38.299168 c
127.49709 39.796032 134.7121 35.99831 136.63251 30.703728 c
136.76744 30.331711 136.90237 29.959696 137.03731 29.587679 c
138.95772 24.293097 135.58356 17.501648 130.28897 16.004786 c
110.02885 10.276928 89.768738 4.5490699 69.508621 -1.1787881 c
64.214035 -2.6756511 56.999035 1.1220695 55.078621 6.4166532 c
54.943687 6.7886691 54.80875 7.1606851 54.673817 7.532701 c
52.753403 12.827285 56.127571 19.618732 61.422153 21.115595 c
h
61.422153 21.115595 m
W
0 0 318.49036 245.19904 rc
0.96228242 0.27205256 0.3490324 -0.96228242 -452.92114 129.14705 cm
309.0968 261.93475 m
649.78137 261.93475 l
S
309.0968 261.70306 m
649.78137 261.70306 l
S
0.89882278 0.89784515 0.89647377 sc
309.0968 261.47137 m
649.78137 261.47137 l
S
0.89725375 0.8957873 0.89373022 sc
309.0968 261.23972 m
649.78137 261.23972 l
S
0.89568478 0.89372951 0.89098668 sc
309.0968 261.00803 m
649.78137 261.00803 l
S
0.89411575 0.89167166 0.8882432 sc
309.0968 260.77634 m
649.78137 260.77634 l
S
0.89254677 0.88961381 0.88549966 sc
309.0968 260.54465 m
649.78137 260.54465 l
S
0.89097774 0.88755602 0.88275611 sc
309.0968 260.31296 m
649.78137 260.31296 l
S
0.88940877 0.88549817 0.88001263 sc
309.0968 260.0813 m
649.78137 260.0813 l
S
0.88783973 0.88344038 0.87726909 sc
309.0968 259.84961 m
649.78137 259.84961 l
S
0.88627076 0.88138252 0.87452555 sc
309.0968 259.61792 m
649.78137 259.61792 l
S
0.88470173 0.87932467 0.87178206 sc
309.0968 259.38623 m
649.78137 259.38623 l
S
0.8831327 0.87726688 0.86903852 sc
309.0968 259.15457 m
649.78137 259.15457 l
S
0.88156372 0.87520903 0.86629498 sc
309.0968 258.92288 m
649.78137 258.92288 l
S
0.87999469 0.87315124 0.8635515 sc
309.0968 258.69119 m
649.78137 258.69119 l
S
0.87842572 0.87109339 0.86080796 sc
309.0968 258.4595 m
649.78137 258.4595 l
S
0.87685668 0.86903554 0.85806441 sc
309.0968 258.22784 m
649.78137 258.22784 l
S
0.87528771 0.86697775 0.85532087 sc
309.0968 257.99615 m
649.78137 257.99615 l
S
0.87371868 0.8649199 0.85257739 sc
309.0968 257.76447 m
649.78137 257.76447 l
S
0.87214971 0.86286205 0.84983385 sc
309.0968 257.53278 m
649.78137 257.53278 l
S
0.87058067 0.86080426 0.8470903 sc
309.0968 257.30109 m
649.78137 257.30109 l
S
0.8690117 0.85874641 0.84434682 sc
309.0968 257.06943 m
649.78137 257.06943 l
S
0.86744267 0.85668862 0.84160328 sc
309.0968 256.83774 m
649.78137 256.83774 l
S
0.86587363 0.85463077 0.83885974 sc
309.0968 256.60605 m
649.78137 256.60605 l
S
0.86430466 0.85257292 0.83611625 sc
309.0968 256.37436 m
649.78137 256.37436 l
S
0.86273563 0.85051513 0.83337271 sc
309.0968 256.1427 m
649.78137 256.1427 l
S
0.86116666 0.84845728 0.83062917 sc
309.0968 255.91101 m
649.78137 255.91101 l
S
0.85959762 0.84639949 0.82788569 sc
309.0968 255.67932 m
649.78137 255.67932 l
S
0.85802865 0.84434164 0.82514215 sc
309.0968 255.44765 m
649.78137 255.44765 l
S
0.85645962 0.84228379 0.8223986 sc
309.0968 255.21596 m
649.78137 255.21596 l
S
0.85489064 0.84022599 0.81965512 sc
309.0968 254.98428 m
649.78137 254.98428 l
S
0.85332161 0.83816814 0.81691158 sc
309.0968 254.75259 m
649.78137 254.75259 l
S
0.85175264 0.83611035 0.81416804 sc
309.0968 254.52092 m
649.78137 254.52092 l
S
0.85018361 0.8340525 0.81142455 sc
309.0968 254.28923 m
649.78137 254.28923 l
S
0.84861457 0.83199465 0.80868101 sc
309.0968 254.05756 m
649.78137 254.05756 l
S
0.8470456 0.82993686 0.80593747 sc
309.0968 253.82587 m
649.78137 253.82587 l
S
0.84547657 0.82787901 0.80319399 sc
309.0968 253.59418 m
649.78137 253.59418 l
S
0.84390759 0.82582122 0.80045044 sc
309.0968 253.3625 m
649.78137 253.3625 l
S
0.84233856 0.82376337 0.7977069 sc
309.0968 253.13081 m
649.78137 253.13081 l
S
0.84076959 0.82170552 0.79496342 sc
309.0968 252.89914 m
649.78137 252.89914 l
S
0.83920056 0.81964773 0.79221988 sc
309.0968 252.66745 m
649.78137 252.66745 l
S
0.83763158 0.81758988 0.78947634 sc
309.0968 252.43578 m
649.78137 252.43578 l
S
0.83606255 0.81553209 0.78673285 sc
309.0968 252.20409 m
649.78137 252.20409 l
S
0.83449358 0.81347424 0.78398931 sc
309.0968 251.97241 m
649.78137 251.97241 l
S
0.83292454 0.81141639 0.78124577 sc
309.0968 251.74072 m
649.78137 251.74072 l
S
0.83135551 0.8093586 0.77850229 sc
309.0968 251.50905 m
649.78137 251.50905 l
S
0.82978654 0.80730075 0.77575874 sc
309.0968 251.27736 m
649.78137 251.27736 l
S
0.82821751 0.80524296 0.7730152 sc
309.0968 251.04568 m
649.78137 251.04568 l
S
0.82664853 0.80318511 0.77027172 sc
309.0968 250.814 m
649.78137 250.814 l
S
0.8250795 0.80112725 0.76752818 sc
309.0968 250.58232 m
649.78137 250.58232 l
S
0.82351053 0.79906946 0.76478463 sc
309.0968 250.35063 m
649.78137 250.35063 l
S
0.82194149 0.79701161 0.76204109 sc
309.0968 250.11894 m
649.78137 250.11894 l
S
0.82037252 0.79495376 0.75929761 sc
309.0968 249.88727 m
649.78137 249.88727 l
S
0.81880349 0.79289597 0.75655407 sc
309.0968 249.65558 m
649.78137 249.65558 l
S
0.81723452 0.79083812 0.75381052 sc
309.0968 249.4239 m
649.78137 249.4239 l
S
0.81566548 0.78878033 0.75106704 sc
309.0968 249.19221 m
649.78137 249.19221 l
S
0.81409645 0.78672248 0.7483235 sc
309.0968 248.96054 m
649.78137 248.96054 l
S
0.81252748 0.78466463 0.74557996 sc
309.0968 248.72885 m
649.78137 248.72885 l
S
0.81095845 0.78260684 0.74283648 sc
309.0968 248.49718 m
649.78137 248.49718 l
S
0.80938947 0.78054899 0.74009293 sc
309.0968 248.26549 m
649.78137 248.26549 l
S
0.80782044 0.7784912 0.73734939 sc
309.0968 248.03381 m
649.78137 248.03381 l
S
0.80625147 0.77643335 0.73460591 sc
309.0968 247.80212 m
649.78137 247.80212 l
S
0.80468243 0.7743755 0.73186237 sc
309.0968 247.57045 m
649.78137 247.57045 l
S
0.80311346 0.77231771 0.72911882 sc
309.0968 247.33876 m
649.78137 247.33876 l
S
0.80154443 0.77025986 0.72637534 sc
309.0968 247.10709 m
649.78137 247.10709 l
S
0.79997545 0.76820207 0.7236318 sc
309.0968 246.8754 m
649.78137 246.8754 l
S
0.79840642 0.76614422 0.72088826 sc
309.0968 246.64371 m
649.78137 246.64371 l
S
0.79683739 0.76408637 0.71814477 sc
309.0968 246.41203 m
649.78137 246.41203 l
S
0.79526842 0.76202857 0.71540123 sc
309.0968 246.18034 m
649.78137 246.18034 l
S
0.79369938 0.75997072 0.71265769 sc
309.0968 245.94867 m
649.78137 245.94867 l
S
0.79213041 0.75791293 0.70991421 sc
309.0968 245.71698 m
649.78137 245.71698 l
S
0.79056138 0.75585508 0.70717067 sc
309.0968 245.48531 m
649.78137 245.48531 l
S
0.7889924 0.75379723 0.70442712 sc
309.0968 245.25362 m
649.78137 245.25362 l
S
0.78742337 0.75173944 0.70168364 sc
309.0968 245.02194 m
649.78137 245.02194 l
S
0.7858544 0.74968159 0.6989401 sc
309.0968 244.79025 m
649.78137 244.79025 l
S
0.78428537 0.7476238 0.69619656 sc
309.0968 244.55858 m
649.78137 244.55858 l
S
0.78271639 0.74556595 0.69345307 sc
309.0968 244.32689 m
649.78137 244.32689 l
S
0.78114736 0.7435081 0.69070953 sc
309.0968 244.09521 m
649.78137 244.09521 l
S
0.77957833 0.74145031 0.68796599 sc
309.0968 243.86353 m
649.78137 243.86353 l
S
0.77800936 0.73939246 0.68522251 sc
309.0968 243.63185 m
649.78137 243.63185 l
S
0.77644032 0.73733467 0.68247896 sc
309.0968 243.40016 m
649.78137 243.40016 l
S
0.77487135 0.73527682 0.67973542 sc
309.0968 243.16847 m
649.78137 243.16847 l
S
0.77330232 0.73321897 0.67699194 sc
309.0968 242.9368 m
649.78137 242.9368 l
S
0.77173334 0.73116118 0.6742484 sc
309.0968 242.70511 m
649.78137 242.70511 l
S
0.77016431 0.72910333 0.67150486 sc
309.0968 242.47343 m
649.78137 242.47343 l
S
0.76859534 0.72704548 0.66876131 sc
309.0968 242.24174 m
649.78137 242.24174 l
S
0.76702631 0.72498769 0.66601783 sc
309.0968 242.01007 m
649.78137 242.01007 l
S
0.76545733 0.72292984 0.66327429 sc
309.0968 241.77838 m
649.78137 241.77838 l
S
0.7638883 0.72087204 0.66053075 sc
309.0968 241.54671 m
649.78137 241.54671 l
S
0.76231927 0.71881419 0.65778726 sc
309.0968 241.31502 m
649.78137 241.31502 l
S
0.76075029 0.71675634 0.65504372 sc
309.0968 241.08334 m
649.78137 241.08334 l
S
0.75918126 0.71469855 0.65230018 sc
309.0968 240.85165 m
649.78137 240.85165 l
S
0.75761229 0.7126407 0.6495567 sc
309.0968 240.61998 m
649.78137 240.61998 l
S
0.75604326 0.71058291 0.64681315 sc
309.0968 240.38829 m
649.78137 240.38829 l
S
0.75447428 0.70852506 0.64406961 sc
309.0968 240.15662 m
649.78137 240.15662 l
S
0.75290525 0.70646721 0.64132613 sc
309.0968 239.92493 m
649.78137 239.92493 l
S
0.75133628 0.70440942 0.63858259 sc
309.0968 239.69324 m
649.78137 239.69324 l
S
0.74976724 0.70235157 0.63583905 sc
309.0968 239.46156 m
649.78137 239.46156 l
S
0.74662924 0.69823593 0.63035202 sc
309.0968 239.22987 m
649.78137 239.22987 l
S
309.0968 238.9982 m
649.78137 238.9982 l
S
Q
1.4173229 w
10 M
0 0 0 sc
q
0 0 318.49036 245.19904 rc
0.96228242 0.27205256 0.3490324 -0.96228242 -452.92114 129.14705 cm
447.85773 238.88235 m
468.91196 238.88235 489.96619 238.88235 511.02042 238.88235 c
516.52252 238.88235 522.02466 244.38446 522.02466 249.88658 c
522.02466 250.27318 522.02466 250.65977 522.02466 251.04637 c
522.02466 256.54849 516.52252 262.0506 511.02042 262.0506 c
489.96619 262.0506 468.91196 262.0506 447.85773 262.0506 c
442.35562 262.0506 436.85352 256.54849 436.85352 251.04637 c
436.85352 250.65977 436.85352 250.27318 436.85352 249.88658 c
436.85352 244.38446 442.35562 238.88235 447.85773 238.88235 c
h
447.85773 238.88235 m
S
CM
299.03882 40.69558 m
299.15244 40.305927 299.18857 39.89381 299.14841 39.471912 c
299.10858 39.050022 298.99258 38.618542 298.81006 38.190285 c
298.62775 37.761948 298.37912 37.336971 298.07938 36.926022 c
297.77972 36.51495 297.42917 36.117958 297.04489 35.742279 c
296.66058 35.36647 296.24271 35.011948 295.80731 34.682346 c
295.3718 34.352631 294.91882 34.047771 294.46152 33.768402 c
294.00409 33.48896 293.5423 33.234936 293.08569 33.004921 c
292.629 32.774864 292.17746 32.56876 291.73734 32.384052 c
291.29709 32.199326 290.86823 32.035954 290.45428 31.890921 c
290.04025 31.745888 289.64108 31.619171 289.25836 31.507748 c
288.87567 31.396347 288.47086 31.289019 288.04367 31.189165 c
287.61655 31.08935 287.16699 30.997004 286.69641 30.916578 c
286.22592 30.836193 285.73431 30.767736 285.22549 30.716713 c
284.7168 30.66572 284.1908 30.632193 283.65485 30.622448 c
283.11905 30.612707 282.57324 30.626814 282.02881 30.671251 c
281.48453 30.715656 280.94165 30.790493 280.41568 30.901304 c
279.8898 31.012026 279.38095 31.15884 278.90747 31.344837 c
278.43399 31.530689 277.99612 31.755821 277.61237 32.019371 c
277.22852 32.282742 276.89905 32.584553 276.63898 32.919136 c
276.37866 33.253559 276.18796 33.620674 276.07468 34.010422 c
275.96106 34.400074 275.92493 34.812191 275.96509 35.234089 c
276.00491 35.655979 276.12091 36.08746 276.30344 36.515717 c
276.48575 36.944054 276.73438 37.36903 277.03412 37.779976 c
277.33377 38.191051 277.68433 38.588043 278.0686 38.963722 c
278.45291 39.339531 278.87079 39.69405 279.30618 40.023655 c
279.7417 40.353367 280.19467 40.65823 280.65198 40.937599 c
281.10944 41.217041 281.5712 41.471066 282.0278 41.70108 c
282.4845 41.931133 282.93604 42.137238 283.37616 42.321949 c
283.81641 42.506676 284.24527 42.670048 284.65921 42.815079 c
285.07324 42.960114 285.47241 43.08683 285.85513 43.198254 c
286.23782 43.309654 286.64264 43.416981 287.06982 43.516834 c
287.49695 43.61665 287.9465 43.708996 288.41708 43.789421 c
288.88757 43.869808 289.37918 43.938263 289.888 43.989288 c
290.39673 44.040279 290.9227 44.073807 291.45865 44.083553 c
291.99445 44.093292 292.54025 44.079189 293.08469 44.034748 c
293.62897 43.990345 294.17184 43.915508 294.69781 43.804695 c
295.22369 43.693974 295.73254 43.547161 296.20602 43.361164 c
296.6795 43.175312 297.11737 42.95018 297.50113 42.68663 c
297.88501 42.42326 298.21445 42.121449 298.47452 41.786865 c
298.73483 41.452442 298.92554 41.085327 299.03882 40.69558 c
f
1 w
2 J
0.98422021 -0.52084577 -0.52084577 -0.98422021 -235.90349 582.74139 cm
652.29279 205.54535 m
652.54669 205.80692 652.74847 206.11885 652.8938 206.4706 c
653.03937 206.8222 653.12854 207.21341 653.16357 207.63 c
653.19879 208.04659 653.17993 208.48833 653.11462 208.94043 c
653.04944 209.39259 652.93799 209.85495 652.79077 210.31454 c
652.64355 210.77428 652.46082 211.2312 652.25366 211.67572 c
652.04645 212.12036 651.81494 212.55261 651.56934 212.96645 c
651.32361 213.3804 651.06378 213.776 650.79797 214.15036 c
650.5321 214.52481 650.26025 214.87807 649.98853 215.20956 c
649.71667 215.54109 649.44489 215.85092 649.17725 216.13992 c
648.90955 216.42896 648.64594 216.6972 648.38892 216.9464 c
648.13196 217.19557 647.85571 217.45081 647.55859 217.7095 c
647.26147 217.96814 646.94348 218.23027 646.6037 218.49178 c
646.26404 218.75322 645.90259 219.01405 645.52014 219.26828 c
645.13776 219.52243 644.73438 219.76999 644.31305 220.00285 c
643.89185 220.23564 643.4527 220.4537 643.00189 220.64713 c
642.55121 220.8405 642.08887 221.00912 641.62482 221.14211 c
641.16089 221.27512 640.69531 221.37233 640.24139 221.42358 c
639.78748 221.47495 639.3454 221.48016 638.93005 221.43217 c
638.51477 221.38437 638.12646 221.28319 637.77948 221.12685 c
637.43243 220.97075 637.12683 220.75948 636.87317 220.4977 c
636.61932 220.23613 636.41754 219.92419 636.27222 219.57245 c
636.12665 219.22084 636.03741 218.82964 636.00244 218.41304 c
635.96722 217.99646 635.98602 217.5547 636.05133 217.10262 c
636.11658 216.65045 636.22803 216.1881 636.37524 215.72849 c
636.52246 215.26875 636.7052 214.81183 636.91235 214.36732 c
637.11957 213.92267 637.35101 213.49043 637.59668 213.07658 c
637.84241 212.66263 638.10223 212.26703 638.36804 211.89267 c
638.63391 211.51823 638.9057 211.16496 639.17749 210.83348 c
639.44934 210.50194 639.72113 210.19212 639.98877 209.90312 c
640.25647 209.61409 640.52008 209.34584 640.77704 209.09663 c
641.03406 208.84746 641.3103 208.59222 641.60742 208.33353 c
641.90448 208.07489 642.22253 207.81276 642.56226 207.55125 c
642.90198 207.28983 643.26343 207.02899 643.64587 206.77475 c
644.02826 206.5206 644.43164 206.27306 644.85297 206.04019 c
645.27417 205.8074 645.71332 205.58932 646.16412 205.39592 c
646.61481 205.20253 647.07715 205.03391 647.5412 204.90092 c
648.00513 204.76791 648.47064 204.67072 648.92462 204.61946 c
649.37848 204.5681 649.82062 204.56287 650.2359 204.61087 c
650.65125 204.65868 651.03955 204.75986 651.38647 204.91618 c
651.73358 205.07228 652.03918 205.28357 652.29279 205.54535 c
S
632.76038 219.68045 m
667.67456 236.54051 l
650.53174 200.03938 l
S
0 i
1 0 0 -1 -383.58353 269.02667 cm
/F1.1[ 24 0 0 -24 0 0]sf
470.659 253.7923 m
(!)s
/F2.1[ 13 0 0 -13 0 0]sf
484.00665 259.7923 m
(!)s
/F1.1[ 24 0 0 -24 0 0]sf
612.73486 52.658112 m
(!)s
/F2.1[ 13 0 0 -13 0 0]sf
626.08252 58.658112 m
(")s
1.4173229 w
0.60000002 i
0.43921569 0.43921569 0.43921569 sc
412.60751 62.146805 m
481.57199 237.26726 l
S
618.02319 59.823051 m
483.10773 236.42116 l
S
0 0 0 sc
CM
235.2516 208.31267 m
221.17815 165.92252 l
f
2.8346457 w
0.001491052 0.40716502 0.21674308 sc
1 0 0 -1 -383.58353 269.02667 cm
618.83514 60.713993 m
604.76166 103.10415 l
S
CM
218.51013 157.88632 m
218.09441 172.46039 l
221.17815 165.92252 l
227.55971 169.31793 l
h
218.51013 157.88632 m
f
0.70866144 w
1 0 0 -1 -383.58353 269.02667 cm
602.09363 111.14035 m
601.67792 96.566277 l
604.76166 103.10415 l
611.14325 99.70874 l
h
602.09363 111.14035 m
S
0.001491052 0.40716502 0.21674308 sc
0 i
/F1.1[ 24 0 0 -24 0 0]sf
586.72479 143.60121 m
(")s
/F2.1[ 13 0 0 -13 0 0]sf
601.38495 149.60121 m
(")s
/F1.1[ 24 0 0 -24 0 0]sf
463.9801 165.65913 m
(")s
/F2.1[ 13 0 0 -13 0 0]sf
478.64026 171.65913 m
(!)s
2.8346457 w
0.60000002 i
0.001491052 0.40716502 0.21674308 sc
483.04132 235.37399 m
484.7511 190.98982 l
S
CM
101.49353 86.498077 m
105.9491 72.615555 l
101.16758 78.036842 l
95.983177 72.999466 l
h
101.49353 86.498077 m
f
0.70866144 w
1 0 0 -1 -383.58353 269.02667 cm
485.07706 182.52859 m
489.53259 196.4111 l
484.7511 190.98982 l
479.56668 196.02719 l
h
485.07706 182.52859 m
S
2.1259842 w
[
4
4
] 0 d
1 0 0.72941178 sc
511.01666 185.27107 m
502.81763 180.97478 493.71854 178.7312 484.45847 178.77371 c
S
CM
133.85147 79.839348 m
126.12806 81.924767 l
129.27547 86.401382 l
h
133.85147 79.839348 m
f
0.53149605 w
[] 0 d
1 0 0 -1 -383.58353 269.02667 cm
517.435 189.18732 m
509.71158 187.1019 l
512.85901 182.62527 l
h
517.435 189.18732 m
S
2.1259842 w
[
4
4
] 0 d
600.30115 114.86543 m
610.01172 118.02066 620.33704 118.55389 630.24542 116.47634 c
S
CM
253.90532 154.56506 m
247.70972 149.504 l
245.90602 154.67053 l
h
253.90532 154.56506 m
f
0.53149605 w
[] 0 d
1 0 0 -1 -383.58353 269.02667 cm
637.48883 114.46159 m
631.29321 119.52267 l
629.48956 114.35614 l
h
637.48883 114.46159 m
S
0 0.47411042 0.28023571 sc
0 i
/F3.1[ 14 0 0 -14 0 0]sf
478.14468 151.87457 m
(!)s
1.4173229 w
0.60000002 i
0.43921569 0.43921569 0.43921569 sc
620.07007 60.2024 m
669.39868 225.18533 l
S
0 0.47411042 0.28023571 sc
0 i
599.93359 129.71034 m
(!)s
2.1259842 w
[
4
4
] 0 d
0.60000002 i
1 0 0.72941178 sc
662.12341 220.27142 m
569.82806 150.05966 520.67596 106.38517 434.88449 88.986168 c
S
CM
43.917057 181.45642 m
51.801643 182.81042 l
50.827332 177.42554 l
h
43.917057 181.45642 m
f
0.53149605 w
[] 0 d
1 0 0 -1 -383.58353 269.02667 cm
427.50058 87.570236 m
435.38516 86.21624 l
434.41086 91.601128 l
h
427.50058 87.570236 m
S
0 0 0 sc
0 i
/F1.1[ 24 0 0 -24 0 0]sf
391.06534 102.73296 m
(#)s
/F1.1[ 12 0 0 -12 0 0]sf
405.72549 107.73296 m
($)s
/F3.1[ 14 0 0 -14 0 0]sf
405.50604 89.154724 m
(!)s
/F1.1[ 24 0 0 -24 0 0]sf
644.13928 105.12795 m
(#)s
/F1.1[ 12 0 0 -12 0 0]sf
658.79944 110.12795 m
(%)s
/F3.1[ 14 0 0 -14 0 0]sf
658.58002 91.549721 m
(!)s
2.8346457 w
0.60000002 i
413.19852 61.265293 m
428.43967 103.85754 l
S
CM
47.709019 157.19669 m
38.3979 168.41628 l
44.856163 165.16913 l
47.788109 171.77646 l
h
47.709019 157.19669 m
f
0.70866144 w
1 0 0 -1 -383.58353 269.02667 cm
431.29254 111.82999 m
421.98141 100.61038 l
428.43967 103.85754 l
431.37161 97.250198 l
h
431.29254 111.82999 m
S
2.8346457 w
621.10376 60.350498 m
635.00885 107.57685 l
S
CM
253.81696 153.32707 m
245.16362 165.06148 l
251.42534 161.44981 l
254.73085 167.8784 l
h
253.81696 153.32707 m
f
0.70866144 w
1 0 0 -1 -383.58353 269.02667 cm
637.40045 115.69959 m
628.74713 103.96519 l
635.00885 107.57685 l
638.31433 101.14826 l
h
637.40045 115.69959 m
S
2.8346457 w
484.58148 235.93449 m
514.06854 196.07809 l
S
CM
135.52113 79.755646 m
131.38135 65.775711 l
130.48503 72.948563 l
123.36375 71.707397 l
h
135.52113 79.755646 m
f
0.70866144 w
1 0 0 -1 -383.58353 269.02667 cm
519.10468 189.27101 m
514.96484 203.25095 l
514.06854 196.07809 l
506.94727 197.31926 l
h
519.10468 189.27101 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
519.58624 217.13858 m
(#)s
/F1.1[ 12 0 0 -12 0 0]sf
534.2464 222.13858 m
(&)s
/F3.1[ 14 0 0 -14 0 0]sf
534.02692 203.56035 m
(!)s
/F1.1[ 24 0 0 -24 0 0]sf
428.15897 60.124935 m
(!)s
/F2.1[ 13 0 0 -13 0 0]sf
441.50662 66.124939 m
(#)s
/F1.1[ 24 0 0 -24 0 0]sf
639.39856 260.02667 m
(!)s
/F2.1[ 13 0 0 -13 0 0]sf
652.74622 266.02667 m
($)s
ep
end
%%Trailer
%%EOF
