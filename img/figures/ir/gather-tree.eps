%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.1 (Build 17B48) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 965 259
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 965 259
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: QTEXEC+Helvetica
%!FontType1-1.0: QTEXEC+Helvetica 1.0000.0.0000
14 dict begin/FontName /QTEXEC+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /G put
dup 34 /two put
dup 35 /one put
dup 36 /zero put
dup 37 /parenleft put
dup 38 /a put
dup 39 /parenright put
dup 40 /space put
dup 41 /t put
dup 42 /L put
dup 43 /six put
dup 44 /four put
dup 45 /five put
dup 46 /three put
dup 47 /b put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020






00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/five 9 def
/six 10 def
/G 11 def
/L 12 def
/a 13 def
/b 14 def
/t 15 def
/u20B8 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec


73F0D6E889EC18BACD7A3D15BC7A8D286FD80F6822E6C59D70EE1AD0B0C55B3A157F1E8D31DACC73F3B17FBF2A18AFD01E4B263D5163CB3623ACCA5F3B61B7E58B7955FFACA3B44FF7B6DEFD8C6A9FFA36651A5472E94E865C381307FA516106D93A9BAD0B5A6482CE4A4CC911D493692C32C6772ACFA039BF635274AB763569E2DA30BCC922BEDC17FF7D7913BC6BE9B34E856A3C3C70CE655877AADB27BF3904FCB4D42630DE0C24427119A27F4CC58EB99DCADF4C7A0A2983F36AE809F33764A8BCD837AA83028EFC19F401AA71822A6F4ABB039548D4BC8C9325DF14E5D57CDB1A54DDE10281558DE61296D58E7B916F6433C8D3BB21EC26A6BD3AF3837EC94B34FDDE11ECF7D1A4F3A0C50E7D9CBA768E04D687DC6AA89E559E03337112FE82979DC65F25977CD201FAF8B6BA34BAC4DC0110C08CCF767204F7B161C86077C766D5340586F10EAE7A2D35F7F30DF9B958014242DC05122BC119F9CBE4FAAD17FD37EAB0ADBD940F020CE2522DE494B2135614E01E1C27242A0C9FAC75DA32EBA7BFCADE60D8F5BEC8FA1A52ACD061F6439B8033392CC04049AAAA4638877F366977FC363A08A7F0A532BE32E94E3FA542F98284F45860E589384444621622915186C5BA22D3E2595FCE78789BBE81D1E9530C594AE163088204550B029421DA9DA31F1594DF2FC4838613DF553B74FDF59D299D76D98523FB6B6E05D21B5AEDBB479F1112EBE50122E2CEB27DC3B912D8CEDDF0999B7685299128EA88FAC9878D2FFFA2C0C7BA5447790988465DC63F4D4D50323D68D57A8A748BC65AFF9E5400FFE24F502C580E6C7D925C8F60E1CFAAA8B7278FF8F48BDF49B02E78A0E100832197E6ADF4EB2696B9CE7FD9513F884A5386220E2BBD9FD74F2DBFF5128138E629237B6964F514E28C6EE99FCB1FD82857FB3BB5EE54BCCF133C9B78545D2C19ECB1063A2CF82562F457524429F853BA5B6D31126B304DEDE018200B9FFBE815DFDEB0BBBC276958CD1BEECC2FCBFB4EF00783C5AF9415E9B6C37AF97A82F06C307464208257FAF535FBA98B66A8B1120AC4DDAFD7DE63ABE3FC503270F1677354E36A6881535138A24339371B30EED860CA6E09824FABDD709C787D053C1EA826D8C86AC0BCE97AFADECD4D060DC7A1DC6CCE87E082783E371BB54BB582EAC2F0CA421489AD6EE9744B3842FCF3996F91C723814892C45E2ACCD1B9384E594CCF4083BC0B80151A8F2BA14CBCCD8A6731095A84A4E273F06217362FDDC0E57E756F7F4A88E775FA721682A8716E82EDFCD505659A570F82B61F4CFDBBB1733EB99A5EC5E46C84B6102D01244C8B3FCC40C977D2653855669B719402EF96FF8175537BD1ABC0DCCF62101100A33A1D70230B1EB6F265E55946E02D5522344A2D2E4086998DB1A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/QTEXEC+Helvetica cguidfix
/F1.1/QTEXEC+Helvetica renmfont
%RBIBeginFontSubset: XLLKJG+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 11/4/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1591 putdup 2 /gid3501 putdup 3 /gid3781 putdup 4 /gid4320 putdup 5 /gid4457 putdup 6 /gid7518 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA66220E183507C2670BFFEE9B10FE56DD319F768A004B17A59025002D9D95F7E82180B7E78244889EE81177017741CF63E954EC0AAC8B981AE8B7CAFDB1C89BFFACDD7B4760D51196046899BBDF0D7240BCC29C59A4D8C74D97EDD3079A1E197C08DF7A49CC467027DAB3EFFA2D37D6C84FE38519F1DBBCE0F5BFD1925B9D3CA2E68970A663BD898AF22AF04B5A2BEFBCAF484132CED65396400978604E380036F283AC08A5B7F5876D3D6C76BBDA82245BA0F31A12AD5FA0F195103DDF5C66AC9A2AE37A5C760DA71BD94D857139C5817F9469A5F3DB3F5DBAE89D47591AF7B9A289FA07D367A53B73038762B2F8A3787D197F2E067BB669490E6CF2B43A0D951CC8A87300BD8E6FB7F04C56E0D26F131AE7228B8C92ADA92751DAA179BB6B4BE626DB69AE6D683A8AAD2D370DA90E9E81410951A69F3A94136E0D053251F14B79A3860AB1633C970F329128D1FA2BFB0DD77B7118125D3CEA43F09793B2D1B92861DDEA1FB9B9F529A9271720CF2127005160406B8EF9B5535CA14A38C861D8B318868A5AB3164BC91C0E89C13E28D2DDD6D3837472BA735B6A066F3695C2A97782F16701F547F072A548287547BA0B2509D32DC6256077323AFE26D51AFDDD8F356E6BE0325B6F51A60913EC216CBA4FFF5E31EEE52244CD0CEB9516A2A634A918F3D55EDE81CD9A7D0E6D4014BF0A9B42FBC24E97AC0722041F9DCF3FCC878750C8149E5197E47365E5F45C9361CCC0D2CAA42DF10BBDE7D866F38921D4695D133BA1B68AE8D289867257BCFB8E961BC2D5A5E12C96BB9C2A18F673436BCD2FDC7692DED848A819C38B19C9958D27A40875C4E27820D923F4702DA8825AD7DF1BD0FCD20F757EA8AFDA067BD8750DE09AE8F613F2B025EA7D145A95C0ABE575E985D99879FF3DA41F200963277F027B849D1CDAFB620C8C89373D0CFA98A0EE470FA70A76D92B1F2ABF4A9805F214B8BE835123502209EF68763FA511AF2567B1566F4BE76C82B3C4D2FA8B1300544DFFE5A6A87DD91C430AC8365D343B84720AE703DE5BF4A9288CAAD14A2F3A44B1EB69C07BCB639839C4A4DA055C3A522DD9014F80DB9E268508015C067707F59216F0105AC837965111E08B2FE413345A8C42A8114535668F60B0B6CB1CD4239FC91A15C90CF2D42B3111C49088222376CD0097A84C6556B56D927F7DCCB8046CB52FBE698E4ECA0F780BE467CB8BB8B8FE051D7A52D04D5E389B5F7BBEEC61FD5C7F8FF851362DD41E8561779309C23DDAB182DF93A3624C95F2FD4409FCC9B7E6A2C9F2F0F1E20334669A54166B5A838073A5B999B9A12A37D2B8FFD58B5A1BA4851BAFB3AF1F5AE632BC8433A81EF30015677CD1F20020DEA9E560AD5A9BF82EED36CAF8832EC5DC3CCFD1B713CDA62E04E1290AABED673F58DC8AF0B25A017A69175C12D654025EAD077D6047214E3E711F897CD82C4404894B832530A86331FAA877B4328E9895848F6175B9205607C63F503ED972CD7D4CE59461205A1B17AAEAAE7C15D1B75048D3B901C9F622C8D7ACBF8DD3A8CD99B1D825738C331F85AC98D5E6DA552A3F248923454BB1599D5403D9AEF32D8217BFE7374E0884E5CE2C9FA093C940752E5BECDA776B29FDFD965A84CFC6ECD65596F456EAD688A9D30BAD47F503D8E241394F6E235D8516968B82856CB53B3B2D63189C21C2298ED540D900EC4B46BD51BDFC4FD4709D129D649228976503F349B5BC191B1EB3D5BC5599485B052F3F4219582DC520B82EFF44AB7892FF85E720DF56DF92EB2F325B51CA9989C23702B98A382827065E9EF78CCC4C6ACBB03707FE97500FC7DA9876EA4F7D749F101C3EDD928E89833F50DC65168C1D5929CAC20008F456E1C22D413E7DF3060F1D586C9D35A440EF3316BD29D10599376347A4D6B5AC2C6C0185420385EE11A272A8A4826022BE0D63474372CAE31CE9E776ABF0369CD8FFDB4621AC1925A55ACF5037DC1EEA6C70E31ACFFB562694887710D22EFA7EEEE0086BA9B8DB2FD5770CCCDDE9AFDB827C3C753F5FA7E2EB0CDAC2398F3A346877412088AE4ADD08DC6807341352E59357F1DA593E8B93DD46F5E5FDD6CC51AB44F3DF083D15E6BE7076BC27ADC06DB78125C87B0FAC26A4D741907D4578D029A721E1EABFBF06EEAB6B2185D6AD84F642BE7A42ABE30BAEA89912E2BCCF8E4B1647BE6FACA46CAA9BD133230F955FEFDEE9BDAC391A8EADE100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: XLLKJG+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /XLLKJG+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid3501 putdup 34 /gid7518 putdup 35 /gid4457 putdup 36 /gid3781 putdup 37 /gid1591 putdup 38 /gid4320 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 8 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1591 {(\001) 0 $SP} putdup /gid3501 {(\002) 0 $SP} putdup /gid3781 {(\003) 0 $SP} putdup /gid4320 {(\004) 0 $SP} putdup /gid4457 {(\005) 0 $SP} putdup /gid7518 {(\006) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/XLLKJG+PingFangSC-Regular cguidfix
/F2.1/XLLKJG+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2.8346457 w
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 964.28802 258.60074 rc
1 0 0 -1 -292.68384 325.92029 cm
478.96124 165.05984 m
478.96283 162.18063 478.39035 159.30267 477.28708 156.64323 c
476.18671 153.98257 474.55649 151.54277 472.51944 149.50798 c
470.48465 147.47095 468.04483 145.84071 465.38419 144.74036 c
462.72473 143.63705 459.8468 143.06459 456.96756 143.06618 c
454.08835 143.06459 451.21039 143.63705 448.55096 144.74036 c
445.89032 145.84071 443.4505 147.47095 441.41571 149.50798 c
439.37866 151.54277 437.74844 153.98257 436.64807 156.64323 c
435.54477 159.30267 434.97232 162.18063 434.97391 165.05984 c
434.97232 167.93906 435.54477 170.81702 436.64807 173.47646 c
437.74844 176.13712 439.37866 178.57692 441.41571 180.61171 c
443.4505 182.64874 445.89032 184.27898 448.55096 185.37933 c
451.21039 186.48264 454.08835 187.0551 456.96756 187.05351 c
459.8468 187.0551 462.72473 186.48264 465.38419 185.37933 c
468.04483 184.27898 470.48465 182.64874 472.51944 180.61171 c
474.55649 178.57692 476.18671 176.13712 477.28708 173.47646 c
478.39035 170.81702 478.96283 167.93906 478.96124 165.05984 c
h
478.96124 165.05984 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
441.10977 173.55984 m
(!")[ 18.667969 0.000000 ] xS
0.60000002 i
535.81158 251.83675 m
535.81311 249.10156 535.26923 246.36757 534.22113 243.84116 c
533.17584 241.31358 531.62714 238.99582 529.69202 237.06281 c
527.75897 235.12767 525.44122 233.57898 522.91364 232.53366 c
520.38727 231.48555 517.65326 230.94173 514.91803 230.94324 c
512.18286 230.94173 509.44885 231.48555 506.92245 232.53366 c
504.3949 233.57898 502.07712 235.12767 500.1441 237.06281 c
498.20895 238.99582 496.66028 241.31358 495.61496 243.84116 c
494.56686 246.36757 494.02304 249.10156 494.02454 251.83675 c
494.02304 254.57195 494.56686 257.30594 495.61496 259.83237 c
496.66028 262.35992 498.20895 264.6777 500.1441 266.61069 c
502.07712 268.54584 504.3949 270.09451 506.92245 271.13983 c
509.44885 272.18796 512.18286 272.73178 514.91803 272.73026 c
517.65326 272.73178 520.38727 272.18796 522.91364 271.13983 c
525.44122 270.09451 527.75897 268.54584 529.69202 266.61069 c
531.62714 264.6777 533.17584 262.35992 534.22113 259.83237 c
535.26923 257.30594 535.81311 254.57195 535.81158 251.83675 c
h
535.81158 251.83675 m
S
0 i
499.06024 260.33676 m
(!#)[ 18.667969 0.000000 ] xS
0.60000002 i
419.91061 251.83675 m
419.91211 249.10156 419.36829 246.36757 418.32019 243.84116 c
417.27487 241.31358 415.7262 238.99582 413.79105 237.06281 c
411.85803 235.12767 409.54025 233.57898 407.0127 232.53366 c
404.48627 231.48555 401.75229 230.94173 399.01709 230.94324 c
396.28189 230.94173 393.54791 231.48555 391.02148 232.53366 c
388.49393 233.57898 386.17615 235.12767 384.24313 237.06281 c
382.30801 238.99582 380.75931 241.31358 379.71399 243.84116 c
378.66589 246.36757 378.12207 249.10156 378.12357 251.83675 c
378.12207 254.57195 378.66589 257.30594 379.71399 259.83237 c
380.75931 262.35992 382.30801 264.6777 384.24313 266.61069 c
386.17615 268.54584 388.49393 270.09451 391.02148 271.13983 c
393.54791 272.18796 396.28189 272.73178 399.01709 272.73026 c
401.75229 272.73178 404.48627 272.18796 407.0127 271.13983 c
409.54025 270.09451 411.85803 268.54584 413.79105 266.61069 c
415.7262 264.6777 417.27487 262.35992 418.32019 259.83237 c
419.36829 257.30594 419.91211 254.57195 419.91061 251.83675 c
h
419.91061 251.83675 m
S
0 i
383.15927 260.33676 m
(!$)[ 18.667969 0.000000 ] xS
0.60000002 i
442.4903 184.69507 m
416.74435 221.75639 l
S
CM
116.14668 92.771927 m
121.17035 111.80304 l
119.45457 105.48138 126.8256 100.36083 132.228 104.12145 c
h
116.14668 92.771927 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
408.83051 233.14838 m
413.85419 214.11726 l
412.1384 220.43892 419.50943 225.55946 424.91183 221.79884 c
h
408.83051 233.14838 m
S
2.8346457 w
472.63196 182.07233 m
498.31003 222.35461 l
S
CM
213.08229 91.86898 m
197.46346 103.84698 l
202.62019 99.876923 210.18839 104.70129 208.81688 111.08426 c
h
213.08229 91.86898 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
505.76611 234.05132 m
490.14728 222.07332 l
495.30402 226.04338 502.87222 221.21901 501.5007 214.83604 c
h
505.76611 234.05132 m
S
0 i
385.2709 314.27896 m
(%&'\()[ 7.992188 13.347656 7.992188 0.000000 ] xS
/F2.1[ 24 0 0 -24 0 0]sf
421.2709 314.27896 m
(!"#$)[ 24.000000 24.000000 24.000000 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
1.0629921 224.77095 m
35.428951 224.77095 l
35.428951 190.405 l
1.0629921 190.405 l
h
1.0629921 224.77095 m
f
2.1259842 w
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
293.74683 101.14935 m
328.11279 101.14935 l
328.11279 135.5153 l
293.74683 135.5153 l
h
293.74683 101.14935 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
302.42575 158.86067 m
(\))s
/F1.1[ 18 0 0 -18 0 0]sf
309.09372 166.86067 m
($)s
/F1.1[ 24 0 0 -24 0 0]sf
339.69101 160.04597 m
(\))s
/F1.1[ 18 0 0 -18 0 0]sf
346.35898 168.04597 m
(#)s
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
36.173939 224.77095 m
70.539894 224.77095 l
70.539894 190.405 l
36.173939 190.405 l
h
36.173939 224.77095 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
328.85776 101.14935 m
363.22372 101.14935 l
363.22372 135.5153 l
328.85776 135.5153 l
h
328.85776 101.14935 m
S
0.61073029 0.86147112 0.97455579 sc
CM
129.62221 223.40765 m
163.98816 223.40765 l
163.98816 189.04169 l
129.62221 189.04169 l
h
129.62221 223.40765 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
422.30603 102.51265 m
456.672 102.51265 l
456.672 136.87862 l
422.30603 136.87862 l
h
422.30603 102.51265 m
S
0 i
427.63315 126.69563 m
(!$)[ 14.000977 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
164.73315 223.40765 m
199.09911 223.40765 l
199.09911 189.04169 l
164.73315 189.04169 l
h
164.73315 223.40765 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
457.41699 102.51265 m
491.78293 102.51265 l
491.78293 136.87862 l
457.41699 136.87862 l
h
457.41699 102.51265 m
S
0 i
462.74411 126.69563 m
(!#)[ 14.000977 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
7.3166318 91.266525 m
41.68259 91.266525 l
41.68259 56.900566 l
7.3166318 56.900566 l
h
7.3166318 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
300.00046 234.65378 m
334.36642 234.65378 l
334.36642 269.01974 l
300.00046 269.01974 l
h
300.00046 234.65378 m
S
0 i
305.32758 258.83676 m
(!$)[ 14.000977 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
42.427578 91.266525 m
76.793541 91.266525 l
76.793541 56.900566 l
42.427578 56.900566 l
h
42.427578 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
335.11142 234.65378 m
369.47736 234.65378 l
369.47736 269.01974 l
335.11142 269.01974 l
h
335.11142 234.65378 m
S
0.61073029 0.86147112 0.97455579 sc
CM
251.92778 91.266525 m
286.29373 91.266525 l
286.29373 56.900566 l
251.92778 56.900566 l
h
251.92778 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
544.61163 234.65378 m
578.9776 234.65378 l
578.9776 269.01974 l
544.61163 269.01974 l
h
544.61163 234.65378 m
S
0.97411805 0.93741363 0.63905346 sc
CM
287.03873 91.266525 m
321.40469 91.266525 l
321.40469 56.900566 l
287.03873 56.900566 l
h
287.03873 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
579.72253 234.65378 m
614.0885 234.65378 l
614.0885 269.01974 l
579.72253 269.01974 l
h
579.72253 234.65378 m
S
0 i
585.04968 258.83676 m
(!#)[ 14.000977 0.000000 ] xS
2.8346457 w
0.60000002 i
971.83136 94.845741 m
971.83282 92.110542 971.289 89.376549 970.24091 86.850136 c
969.19562 84.322571 967.64691 82.004799 965.71179 80.071793 c
963.77875 78.13665 961.461 76.587967 958.93341 75.542648 c
956.40698 74.494537 953.67303 73.950714 950.93781 73.952225 c
948.20264 73.950714 945.46863 74.494537 942.9422 75.542648 c
940.41467 76.587967 938.09686 78.13665 936.16388 80.071793 c
934.2287 82.004799 932.68005 84.322571 931.6347 86.850136 c
930.58661 89.376549 930.04279 92.110542 930.04431 94.845741 c
930.04279 97.580933 930.58661 100.31493 931.6347 102.84134 c
932.68005 105.36891 934.2287 107.68668 936.16388 109.61969 c
938.09686 111.55483 940.41467 113.10352 942.9422 114.14883 c
945.46863 115.19694 948.20264 115.74077 950.93781 115.73926 c
953.67303 115.74077 956.40698 115.19694 958.93341 114.14883 c
961.461 113.10352 963.77875 111.55483 965.71179 109.61969 c
967.64691 107.68668 969.19562 105.36891 970.24091 102.84134 c
971.289 100.31493 971.83282 97.580933 971.83136 94.845741 c
h
971.83136 94.845741 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
937.74017 103.34574 m
(*+)[ 13.347656 0.000000 ] xS
0.60000002 i
819.50568 165.05984 m
819.5072 162.32465 818.96338 159.59065 817.91522 157.06424 c
816.86993 154.53667 815.32123 152.2189 813.38611 150.2859 c
811.45312 148.35075 809.13531 146.80206 806.60779 145.75676 c
804.08136 144.70865 801.34735 144.16481 798.61218 144.16634 c
795.87695 144.16481 793.14294 144.70865 790.61658 145.75676 c
788.08899 146.80206 785.77124 148.35075 783.8382 150.2859 c
781.90308 152.2189 780.35437 154.53667 779.30908 157.06424 c
778.26099 159.59065 777.7171 162.32465 777.71863 165.05984 c
777.7171 167.79504 778.26099 170.52904 779.30908 173.05545 c
780.35437 175.58301 781.90308 177.90079 783.8382 179.83379 c
785.77124 181.76894 788.08899 183.31761 790.61658 184.36293 c
793.14294 185.41104 795.87695 185.95486 798.61218 185.95335 c
801.34735 185.95486 804.08136 185.41104 806.60779 184.36293 c
809.13531 183.31761 811.45312 181.76894 813.38611 179.83379 c
815.32123 177.90079 816.86993 175.58301 817.91522 173.05545 c
818.96338 170.52904 819.5072 167.79504 819.50568 165.05984 c
h
819.50568 165.05984 m
S
0 i
785.41449 173.55984 m
(*,)[ 13.347656 0.000000 ] xS
0.60000002 i
1 1 1 sc
CM
838.57043 160.86046 m
838.57196 163.59564 838.02814 166.32965 836.98004 168.85606 c
835.93475 171.38362 834.38605 173.7014 832.45087 175.6344 c
830.51788 177.56955 828.20013 179.11823 825.67255 180.16354 c
823.14612 181.21165 820.41217 181.75548 817.67694 181.75397 c
814.94177 181.75548 812.20776 181.21165 809.68134 180.16354 c
807.15381 179.11823 804.836 177.56955 802.90302 175.6344 c
800.96783 173.7014 799.41919 171.38362 798.37384 168.85606 c
797.32574 166.32965 796.78192 163.59564 796.78345 160.86046 c
796.78192 158.12526 797.32574 155.39127 798.37384 152.86485 c
799.41919 150.33728 800.96783 148.01952 802.90302 146.0865 c
804.836 144.15137 807.15381 142.60268 809.68134 141.55736 c
812.20776 140.50925 814.94177 139.96542 817.67694 139.96693 c
820.41217 139.96542 823.14612 140.50925 825.67255 141.55736 c
828.20013 142.60268 830.51788 144.15137 832.45087 146.0865 c
834.38605 148.01952 835.93475 150.33728 836.98004 152.86485 c
838.02814 155.39127 838.57196 158.12526 838.57043 160.86046 c
h
838.57043 160.86046 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1131.2543 165.05984 m
1131.2559 162.32465 1130.712 159.59065 1129.6638 157.06424 c
1128.6185 154.53667 1127.0698 152.2189 1125.1348 150.2859 c
1123.2017 148.35075 1120.8839 146.80206 1118.3563 145.75676 c
1115.83 144.70865 1113.0959 144.16481 1110.3608 144.16634 c
1107.6256 144.16481 1104.8916 144.70865 1102.3652 145.75676 c
1099.8376 146.80206 1097.5199 148.35075 1095.5868 150.2859 c
1093.6517 152.2189 1092.103 154.53667 1091.0577 157.06424 c
1090.0095 159.59065 1089.4657 162.32465 1089.4673 165.05984 c
1089.4657 167.79504 1090.0095 170.52904 1091.0577 173.05545 c
1092.103 175.58301 1093.6517 177.90079 1095.5868 179.83379 c
1097.5199 181.76894 1099.8376 183.31761 1102.3652 184.36293 c
1104.8916 185.41104 1107.6256 185.95486 1110.3608 185.95335 c
1113.0959 185.95486 1115.83 185.41104 1118.3563 184.36293 c
1120.8839 183.31761 1123.2017 181.76894 1125.1348 179.83379 c
1127.0698 177.90079 1128.6185 175.58301 1129.6638 173.05545 c
1130.712 170.52904 1131.2559 167.79504 1131.2543 165.05984 c
h
1131.2543 165.05984 m
S
0 i
1097.1631 173.55984 m
(*-)[ 13.347656 0.000000 ] xS
0.60000002 i
1 1 1 sc
CM
481.83383 74.083549 m
481.83536 76.818741 481.29153 79.552734 480.24341 82.079147 c
479.19809 84.60672 477.64941 86.924484 475.71426 88.857491 c
473.78128 90.792633 471.4635 92.341324 468.93591 93.386635 c
466.40952 94.434746 463.67551 94.978577 460.94034 94.977058 c
458.20514 94.978577 455.47113 94.434746 452.94473 93.386635 c
450.41714 92.341324 448.0994 90.792633 446.16638 88.857491 c
444.23123 86.924484 442.68256 84.60672 441.63724 82.079147 c
440.58911 79.552734 440.04529 76.818741 440.04681 74.083549 c
440.04529 71.348351 440.58911 68.614357 441.63724 66.087944 c
442.68256 63.560375 444.23123 61.242607 446.16638 59.309601 c
448.0994 57.374458 450.41714 55.825771 452.94473 54.780457 c
455.47113 53.732346 458.20514 53.188519 460.94034 53.190033 c
463.67551 53.188519 466.40952 53.732346 468.93591 54.780457 c
471.4635 55.825771 473.78128 57.374458 475.71426 59.309601 c
477.64941 61.242607 479.19809 63.560375 480.24341 66.087944 c
481.29153 68.614357 481.83536 71.348351 481.83383 74.083549 c
h
481.83383 74.083549 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
774.5177 251.83675 m
774.51917 249.10156 773.97534 246.36757 772.92725 243.84116 c
771.88196 241.31358 770.33325 238.99582 768.39813 237.06281 c
766.46509 235.12767 764.14734 233.57898 761.61975 232.53366 c
759.09332 231.48555 756.35938 230.94173 753.62415 230.94324 c
750.88898 230.94173 748.15497 231.48555 745.62854 232.53366 c
743.10101 233.57898 740.7832 235.12767 738.85022 237.06281 c
736.91504 238.99582 735.36639 241.31358 734.32104 243.84116 c
733.27295 246.36757 732.72913 249.10156 732.73065 251.83675 c
732.72913 254.57195 733.27295 257.30594 734.32104 259.83237 c
735.36639 262.35992 736.91504 264.6777 738.85022 266.61069 c
740.7832 268.54584 743.10101 270.09451 745.62854 271.13983 c
748.15497 272.18796 750.88898 272.73178 753.62415 272.73026 c
756.35938 272.73178 759.09332 272.18796 761.61975 271.13983 c
764.14734 270.09451 766.46509 268.54584 768.39813 266.61069 c
770.33325 264.6777 771.88196 262.35992 772.92725 259.83237 c
773.97534 257.30594 774.51917 254.57195 774.5177 251.83675 c
h
774.5177 251.83675 m
S
0 i
740.42651 260.33676 m
(*$)[ 13.347656 0.000000 ] xS
0.60000002 i
1 1 1 sc
CM
571.80988 74.083549 m
571.81134 76.818741 571.26752 79.552734 570.21942 82.079147 c
569.17413 84.60672 567.62543 86.924484 565.69031 88.857491 c
563.75726 90.792633 561.43951 92.341324 558.91193 93.386635 c
556.3855 94.434746 553.65155 94.978577 550.91632 94.977058 c
548.18115 94.978577 545.44714 94.434746 542.92072 93.386635 c
540.39319 92.341324 538.07538 90.792633 536.1424 88.857491 c
534.20721 86.924484 532.65857 84.60672 531.61322 82.079147 c
530.56512 79.552734 530.0213 76.818741 530.02283 74.083549 c
530.0213 71.348351 530.56512 68.614357 531.61322 66.087944 c
532.65857 63.560375 534.20721 61.242607 536.1424 59.309601 c
538.07538 57.374458 540.39319 55.825771 542.92072 54.780457 c
545.44714 53.732346 548.18115 53.188519 550.91632 53.190033 c
553.65155 53.188519 556.3855 53.732346 558.91193 54.780457 c
561.43951 55.825771 563.75726 57.374458 565.69031 59.309601 c
567.62543 61.242607 569.17413 63.560375 570.21942 66.087944 c
571.26752 68.614357 571.81134 71.348351 571.80988 74.083549 c
h
571.80988 74.083549 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
864.49365 251.83675 m
864.49518 249.10156 863.95135 246.36757 862.90326 243.84116 c
861.85791 241.31358 860.30927 238.99582 858.37408 237.06281 c
856.4411 235.12767 854.12335 233.57898 851.59576 232.53366 c
849.06934 231.48555 846.33533 230.94173 843.60016 230.94324 c
840.86499 230.94173 838.13098 231.48555 835.60455 232.53366 c
833.07697 233.57898 830.75922 235.12767 828.82623 237.06281 c
826.89105 238.99582 825.34241 241.31358 824.29706 243.84116 c
823.24896 246.36757 822.70514 249.10156 822.70667 251.83675 c
822.70514 254.57195 823.24896 257.30594 824.29706 259.83237 c
825.34241 262.35992 826.89105 264.6777 828.82623 266.61069 c
830.75922 268.54584 833.07697 270.09451 835.60455 271.13983 c
838.13098 272.18796 840.86499 272.73178 843.60016 272.73026 c
846.33533 272.73178 849.06934 272.18796 851.59576 271.13983 c
854.12335 270.09451 856.4411 268.54584 858.37408 266.61069 c
860.30927 264.6777 861.85791 262.35992 862.90326 259.83237 c
863.95135 257.30594 864.49518 254.57195 864.49365 251.83675 c
h
864.49365 251.83675 m
S
0 i
830.40253 260.33676 m
(*#)[ 13.347656 0.000000 ] xS
0.60000002 i
1086.2662 251.83675 m
1086.2678 249.10156 1085.724 246.36757 1084.6759 243.84116 c
1083.6305 241.31358 1082.0819 238.99582 1080.1467 237.06281 c
1078.2137 235.12767 1075.896 233.57898 1073.3684 232.53366 c
1070.8419 231.48555 1068.1079 230.94173 1065.3728 230.94324 c
1062.6376 230.94173 1059.9036 231.48555 1057.3772 232.53366 c
1054.8496 233.57898 1052.5319 235.12767 1050.5989 237.06281 c
1048.6637 238.99582 1047.115 241.31358 1046.0697 243.84116 c
1045.0216 246.36757 1044.4778 249.10156 1044.4792 251.83675 c
1044.4778 254.57195 1045.0216 257.30594 1046.0697 259.83237 c
1047.115 262.35992 1048.6637 264.6777 1050.5989 266.61069 c
1052.5319 268.54584 1054.8496 270.09451 1057.3772 271.13983 c
1059.9036 272.18796 1062.6376 272.73178 1065.3728 272.73026 c
1068.1079 272.73178 1070.8419 272.18796 1073.3684 271.13983 c
1075.896 270.09451 1078.2137 268.54584 1080.1467 266.61069 c
1082.0819 264.6777 1083.6305 262.35992 1084.6759 259.83237 c
1085.724 257.30594 1086.2678 254.57195 1086.2662 251.83675 c
h
1086.2662 251.83675 m
S
0 i
1052.1752 260.33676 m
(*")[ 13.347656 0.000000 ] xS
0.60000002 i
1176.2423 251.83675 m
1176.2438 249.10156 1175.7 246.36757 1174.6519 243.84116 c
1173.6066 241.31358 1172.0579 238.99582 1170.1227 237.06281 c
1168.1897 235.12767 1165.8719 233.57898 1163.3444 232.53366 c
1160.818 231.48555 1158.084 230.94173 1155.3488 230.94324 c
1152.6136 230.94173 1149.8796 231.48555 1147.3531 232.53366 c
1144.8256 233.57898 1142.5078 235.12767 1140.5748 237.06281 c
1138.6396 238.99582 1137.0911 241.31358 1136.0457 243.84116 c
1134.9976 246.36757 1134.4537 249.10156 1134.4553 251.83675 c
1134.4537 254.57195 1134.9976 257.30594 1136.0457 259.83237 c
1137.0911 262.35992 1138.6396 264.6777 1140.5748 266.61069 c
1142.5078 268.54584 1144.8256 270.09451 1147.3531 271.13983 c
1149.8796 272.18796 1152.6136 272.73178 1155.3488 272.73026 c
1158.084 272.73178 1160.818 272.18796 1163.3444 271.13983 c
1165.8719 270.09451 1168.1897 268.54584 1170.1227 266.61069 c
1172.0579 264.6777 1173.6066 262.35992 1174.6519 259.83237 c
1175.7 257.30594 1176.2438 254.57195 1176.2423 251.83675 c
h
1176.2423 251.83675 m
S
0 i
1142.1511 260.33676 m
(*.)[ 13.347656 0.000000 ] xS
0.60000002 i
783.80591 185.16769 m
767.00916 222.47827 l
S
CM
468.6312 90.793602 m
470.0853 110.42281 l
469.52435 103.90195 477.70837 100.21762 482.36252 104.89577 c
h
468.6312 90.793602 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
761.315 235.12669 m
762.7691 215.49748 l
762.20819 222.01836 770.39221 225.70268 775.04633 221.02452 c
h
761.315 235.12669 m
S
2.8346457 w
1097.5381 185.11 m
1078.4945 220.42146 l
S
CM
779.22644 93.29007 m
782.08075 112.76501 l
781.02191 106.29533 788.92145 102.0351 793.93121 106.37402 c
h
779.22644 93.29007 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
1071.9103 232.63023 m
1074.7645 213.15529 l
1073.7058 219.62497 1081.6052 223.88521 1086.615 219.54628 c
h
1071.9103 232.63023 m
S
2.8346457 w
930.37238 103.29757 m
827.39648 142.57585 l
S
CM
521.75238 178.40099 m
536.6347 191.28265 l
531.59149 187.00266 534.7901 178.6169 541.43304 178.70276 c
h
521.75238 178.40099 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
814.43622 147.51932 m
829.31854 134.63765 l
824.27533 138.91763 827.47394 147.30341 834.11688 147.21754 c
h
814.43622 147.51932 m
S
2.8346457 w
974.48334 99.272118 m
1083.0283 141.55125 l
S
CM
803.26971 179.33459 m
783.59161 179.77472 l
790.04272 179.64264 793.30017 188.00571 788.47833 192.32057 c
h
803.26971 179.33459 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
1095.9535 146.58571 m
1076.2755 146.14557 l
1082.7266 146.27765 1085.984 137.9146 1081.1621 133.59972 c
h
1095.9535 146.58571 m
S
2.8346457 w
1124.4015 184.11456 m
1141.5226 216.88237 l
S
CM
855.26239 96.743889 m
840.73035 110.01949 l
845.46057 105.61632 853.41522 109.77263 852.66364 116.25458 c
h
855.26239 96.743889 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
1147.9462 229.17641 m
1133.4142 215.90082 l
1138.1444 220.30399 1146.0991 216.14767 1145.3474 209.66573 c
h
1147.9462 229.17641 m
S
2.8346457 w
811.82843 185.96017 m
827.66321 219.18861 l
S
CM
540.94659 94.209778 m
526.9126 108.01073 l
531.50818 103.43266 539.61029 107.29368 539.06702 113.80283 c
h
540.94659 94.209778 m
f
0.70866144 w
1 0 0 -1 -292.68384 325.92029 cm
833.63043 231.71053 m
819.59644 217.90958 l
824.19202 222.48764 832.29413 218.62662 831.75085 212.11748 c
h
833.63043 231.71053 m
S
0 i
892.7514 314.02771 m
(%/'\()[ 7.992188 13.347656 7.992188 0.000000 ] xS
/F2.1[ 24 0 0 -24 0 0]sf
928.7514 314.02771 m
(%&$)[ 24.000000 24.000000 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
360.70212 91.266525 m
395.06808 91.266525 l
395.06808 56.900566 l
360.70212 56.900566 l
h
360.70212 91.266525 m
f
2.1259842 w
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
653.38593 234.65378 m
687.75189 234.65378 l
687.75189 269.01974 l
653.38593 269.01974 l
h
653.38593 234.65378 m
S
0 i
/F1.1[ 18 0 0 -18 0 0]sf
660.70819 258.83676 m
(*$)[ 10.010742 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
395.81308 91.266525 m
430.17902 91.266525 l
430.17902 56.900566 l
395.81308 56.900566 l
h
395.81308 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
688.49689 234.65378 m
722.86285 234.65378 l
722.86285 269.01974 l
688.49689 269.01974 l
h
688.49689 234.65378 m
S
0.61073029 0.86147112 0.97455579 sc
CM
580.76697 91.266525 m
615.13293 91.266525 l
615.13293 56.900566 l
580.76697 56.900566 l
h
580.76697 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
873.45081 234.65378 m
907.81677 234.65378 l
907.81677 269.01974 l
873.45081 269.01974 l
h
873.45081 234.65378 m
S
0.97411805 0.93741363 0.63905346 sc
CM
615.87793 91.266525 m
650.2439 91.266525 l
650.2439 56.900566 l
615.87793 56.900566 l
h
615.87793 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
908.56177 234.65378 m
942.92773 234.65378 l
942.92773 269.01974 l
908.56177 269.01974 l
h
908.56177 234.65378 m
S
0 i
915.88403 258.83676 m
(*#)[ 10.010742 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
673.68329 91.266525 m
708.04926 91.266525 l
708.04926 56.900566 l
673.68329 56.900566 l
h
673.68329 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
966.36713 234.65378 m
1000.733 234.65378 l
1000.733 269.01974 l
966.36713 269.01974 l
h
966.36713 234.65378 m
S
0 i
973.68933 258.83676 m
(*")[ 10.010742 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
708.79419 91.266525 m
743.16016 91.266525 l
743.16016 56.900566 l
708.79419 56.900566 l
h
708.79419 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1001.478 234.65378 m
1035.844 234.65378 l
1035.844 269.01974 l
1001.478 269.01974 l
h
1001.478 234.65378 m
S
0.61073029 0.86147112 0.97455579 sc
CM
893.74811 91.266525 m
928.11407 91.266525 l
928.11407 56.900566 l
893.74811 56.900566 l
h
893.74811 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1186.432 234.65378 m
1220.798 234.65378 l
1220.798 269.01974 l
1186.432 269.01974 l
h
1186.432 234.65378 m
S
0.97411805 0.93741363 0.63905346 sc
CM
928.85907 91.266525 m
963.22504 91.266525 l
963.22504 56.900566 l
928.85907 56.900566 l
h
928.85907 91.266525 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1221.543 234.65378 m
1255.9088 234.65378 l
1255.9088 269.01974 l
1221.543 269.01974 l
h
1221.543 234.65378 m
S
0 i
1228.8651 258.83676 m
(*.)[ 10.010742 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
404.71509 179.29248 m
439.08105 179.29248 l
439.08105 144.92651 l
404.71509 144.92651 l
h
404.71509 179.29248 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
697.39893 146.62782 m
731.76489 146.62782 l
731.76489 180.99379 l
697.39893 180.99379 l
h
697.39893 146.62782 m
S
0 i
704.72119 170.81081 m
(*$)[ 10.010742 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
439.82605 179.29248 m
474.19199 179.29248 l
474.19199 144.92651 l
439.82605 144.92651 l
h
439.82605 179.29248 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
732.50989 146.62782 m
766.87585 146.62782 l
766.87585 180.99379 l
732.50989 180.99379 l
h
732.50989 146.62782 m
S
0 i
739.83209 170.81081 m
(*#)[ 10.010742 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
849.73517 179.29248 m
884.10114 179.29248 l
884.10114 144.92651 l
849.73517 144.92651 l
h
849.73517 179.29248 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1142.4189 146.62782 m
1176.7849 146.62782 l
1176.7849 180.99379 l
1142.4189 180.99379 l
h
1142.4189 146.62782 m
S
0 i
1149.7412 170.81081 m
(*")[ 10.010742 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
884.84613 179.29248 m
919.2121 179.29248 l
919.2121 144.92651 l
884.84613 144.92651 l
h
884.84613 179.29248 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
1177.5299 146.62782 m
1211.8959 146.62782 l
1211.8959 180.99379 l
1177.5299 180.99379 l
h
1177.5299 146.62782 m
S
0 i
1184.8522 170.81081 m
(*.)[ 10.010742 0.000000 ] xS
0.60000002 i
0.61073029 0.86147112 0.97455579 sc
CM
556.31531 257.53775 m
590.68127 257.53775 l
590.68127 223.1718 l
556.31531 223.1718 l
h
556.31531 257.53775 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
848.99915 68.382538 m
883.36511 68.382538 l
883.36511 102.7485 l
848.99915 102.7485 l
h
848.99915 68.382538 m
S
0 i
856.32141 92.565514 m
(*")[ 10.010742 0.000000 ] xS
0.60000002 i
0.97411805 0.93741363 0.63905346 sc
CM
591.42627 257.53775 m
625.79224 257.53775 l
625.79224 223.1718 l
591.42627 223.1718 l
h
591.42627 257.53775 m
f
0 0 0 sc
1 0 0 -1 -292.68384 325.92029 cm
884.11011 68.382538 m
918.47607 68.382538 l
918.47607 102.7485 l
884.11011 102.7485 l
h
884.11011 68.382538 m
S
0 i
891.43237 92.565514 m
(*#)[ 10.010742 0.000000 ] xS
ep
end
%%Trailer
%%EOF
