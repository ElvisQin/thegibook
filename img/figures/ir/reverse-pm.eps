%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 456 162
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 456 162
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FKGPIV+Helvetica
%!FontType1-1.0: FKGPIV+Helvetica 1.0000.0.0000
14 dict begin/FontName /FKGPIV+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/R 1 def
/u20B8 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0D64BB9C7DEBEE74183589F577AB9C98B2D1930803BEE454A0BDBEC4232104A26BD072BC3C61D3D70D4A33227E6C91D838F5A1BE49F4EE4D8E8DDFDB4D86D7D9CEB8A7A072C35DE27F48D0439AF8780170DA0CC9DD1D88998C97B05243889078325DF93A7775210EF7E99705B79E2F8C762AB3360A0F34D32AE0298625437C7DC431235CF42461A0FA320AA23E010BE7837F18B7214587E9004F260E63239197CDCD5B98A421F51F787E3DF90C679CC083444078E77DA239F0770FC56E651DD02FF3F7D4CB8B270D707EB77E4C137CD16AE70562184CAE795816559AC4A049BF047CBDF7B99596DCF5C10FFB8083EC5F09E722F357369EA3F207F973878F480D96B1884CBCF394AF0AEABF34ABA5F17984C2BE4FA32AE17A7EFDD9C68B6949B6768CF746A7DD2E58DF8791DDAB97EF60B4906EA942E4FB4893B30597F24891E48AB3D0EC0C4026AD2432D06F8EAF74DE4DD92D9D8FB97B4681D457867917CC6FB6F63628B937886B28E4B320CAFED8111566C17BC9C48CD7E04C81B9AE5E653FD817F93A2ED77CAF1D56FCE3C24C79B9BB266FF7EEFFD14E424775D25ACAD757BE51A87D54B22C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FKGPIV+Helvetica cguidfix
/F1.1/FKGPIV+Helvetica renmfont
%RBIBeginFontSubset: OIASDQ+HiraginoSans-W3
%!FontType1-1.0: AAAAAD+HiraKakuProN-W3 001.003%%CreationDate: 10/12/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraKakuProN-W3) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAD+HiraKakuProN-W3 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 0 /uni21D2.15482 putreadonly def/FontBBox {-386 -373 1232 1266} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96886EE4B4169EC3DEEE64932AF4AECA3AAB81853B58042BA51BAD1CF1FE646754A29D2100BBA83E7F6E2F5DFB112F838CA7F659DA7A6373BB1B86BF204DA715F2942AD8690FB1C37539822AE991DF19EAFFBD3E70C395C40FA19CBA66F6F776EC20B6398A64B19208F0E64419A3F9DB393F17B6A206EFAE3B72BBB97405C4CB82801FFF79A60CA475287D576B5FAE301357949AC6E4F6EF1B8E41EC8819429C31C995A8D02C6F93131B3C3FD0563C5B2C561EF5E734C7AC2E2F882889F4D04700D54FF4ABFEB4AC7C99214F399F62A2920477FEA7111FBD7B5EC77864EA25A0388721F3165F5B0867D1C7C29DFA0394F00B032672FD41DA7C59FA55B9E3AF89B81799A0B27F1420BA48F9FA3B4693FDB053C26BACF8A048849E5C5B195ED71C79113DD547B1468FEEC4C124788537CF90C3E1DB8793BD8E61BC72DD310B89670021372EA4C700AD16A855D0917C5F105706F3206540AEBA75926DC784B77FAA8F2459B9A468E2A06318839FA8C08FA7A8241BE54D435D7E1CE8BB877839B32897C38ECC3B2B63BFD6083CBD67A33FDFC81F548A162333DCE29E28232431AF51437794B82CDAA0282850FBBCB8A0A9CAE35CC3991AA9FBE225251C0E9E3F59F39EC952D556BEDE7BA8BA8BCA5546B665B2481E6F4EE3929FE02EFB2402EFDBD1FAC1C72B9CFCFE391E0291A712286845FD31A23988776578437DD63EE0C3ED76EA391B35D2355FED30B1FD068D708EA45C4BE46C0F907CAB826ECAA27734D9723CF21C18BB7B30819E095E25833FB53FA83710AC4E86D305F2EE40138D4BECB08688944C0D68C62E39899104AD6E587EC0F3FC097CE79F16A2C519A3B4ADA4712EFAA7D9C7A17BC5023789142657BA7D164124537929053C2A7A0D2E8E4E63CFA5179983FDCC84769897719FB24472CCA9EA1577B22B8B29703CCC51B7A254194DD86210204BEB444EA4A0D95A73FDBE953C0BDD8ED9074555027E745D457D989412029757A42BCAA87154D3479D568532C656227DECD1A94699177522FB013228446DE961EDC5C6CDBF3CD69FA2B5F7E2137C9DE65C2B6327032847044CCA017F9B2E8177A4A4B6D7DDBAC578CC2E98EB131C49BE0E818CF78C8DD2B562D74A1A9CEEEF49606115A53F15F15D080A3ABB6D990CFEA9C58779C7E388C90BF6C7C1ADCA733C293E821F528A8A25B16CEFF39B103A0000382CE00343EB20473864E5EE271B9F16B48543620B37B95B5C016B6BDF34B868DAE1E3581207508587E0D44760E91C5E8183D629898CD1FD0E1D2798E7DDBF7A2997AD582AB85DCF50C2301E775AC7AD675A059D273D13E77A7EA38DA6F3B16DDF2087940136B83C511845E6A91B8D2B8E3D892958966D1E22B2BC977734ECA36565C4A0FD0DE93F3025640B66827F52733B55B565D4C60B8A3A5AF5EA3F5DDE6901C913366D3952F3FBD1B3FA9E4DE1474E006280D61EF34D830490F88722027E57AD7F3FAA60FF2172B435493B0B726C9BFFB996459F29609633507AF1DA7A9F84094F7C61B0EEBA7670540DA3ABAE2EE2C565DC4B7A061BE2B5375121676FDE5B0C37B9D922C0CEF05056E77E641B66DEEDE17E1C6714DC4A7B16764EA5D4C7331DE2B1472FC3E610FB03B5842F4B7D9D268CF3204EEE860B1B96EB272DF663849EC387B8135065F484863D2C1263604ECBA3F3BF4344916C70485FA8B9E61C9F6A83C70EDBBB3E3F5A63B0C9BBAE3A3B457D94E5669B60812E2B88E0A767E549573484C03CD45364AA230827B160318E25F95D8ADBD664C1DE213CDC3454775A09DA3858AC9622DB94A66012A14588548B12011E64B1CAB38834EEA24AA78C7FDA24690D53CE063EF666119954BD289925D2667AB00834FD41EC048E6ADAFC36FE8971B9A3B776906C22414478E6D4731FD1125256E30E2ECEB7600643ADFB27EED6B7040DEEF0580ABAF22E011D407D171ED48A915140FE722E3DDFE39AFB34043406803C8C0CD5D729243F2450E9F7AE57A85910D0C304A290941ED125758860B66D4CA4E00F1F6BABC431CD4B2E2C0B9C2DADE8EAD2BB86D96EA93D125497F487C77BC15BA284A04A55EE8DA4D52C365D845AD7D66672664B1B6D113376C4136E18A77579176C5BAEF5D063127ACEB217340F93AC314FE151AC07E75980038953DE1ADBFF288C3C0CE5974F5ABCEC9B7780CA3A7949C232DCF7C36331A48DF504C45E69BE408DDD4DFAB2CE40717D026086DCD1097B8D79157EC780F6EE40798794591698E8894B0229F5541131FFC3777DA24ED84FA84EA3C49B49D8B8168764BE94AD9CD73303A9C02C4B30273D995D77E093F9B20716ED7A8D1882A8A3ACE81154B739FDEC7D3E560D8733BFD7A7FC51BDD337587FB4471C0E735DA3A11DE1CE7510EC7000A78EB103DD08B79D3CDC791077780EECA983D71377D598198DF0A02F9315A92A1708B997FE3FE467B06970D58C676D1AE871F2A3AAF6E85BD087A77A92918B0ABD6DC855C54CF7A69CF96D20B74AD321DCC3B7018A7444D4F2A193451672F3A720DA457D38F60B5775C157059CC76938A5E396C70D7FA75E105636F9F2C27F5FAC0A0DE4AC709899A15B85D546B0D6020B509DBADC91624359D5B74575D67408A0B9D67AD007066510B5D0D1B0EC5244C1AEF02E521DA2BF5ED41CACA27127A53415F188264B610C4C837720CF95B8E78D7B36D0C3E86CC7CEC6ACF71575B9D28BC7155C67B45CEC4DCB47D8474A1ABFC1CD4A284109F175FABC93B3020C61D0E31C976A6D252B773FB84F044052F027ACCE86453F830BA312657154C8C25AF0D965497C02E9CD04B3BC66E08E942AC451D0ABC63A739E527D5ACDBFC52C6357FC7A5FD91740DB7584C3C12B1F5BEF9A0A44B5DB530603FF7F1696ADE051026005919B9E0923BA37B60C7611E7EF96DEAA7552F8B28AD9DD5C3A2A45D37BC3026CBFFC6429C69CB444D4C460BF6F7B15EE6523F1768568E1357DBF96488F4CDF3D9633C8CC2B3732B05A338622C30DAD2966CFF5B3EFCE688EFE2A0AE6040ADD3567E90A16026A42A2EF287CF3D8ABA5A6E6E251938B96BC6D38EE53F70163447DFB2EFB45D5E609E135AFB66185BB12CE5950CEBFF13E5DB2848616FB0D5277EC40B2C41FA40D086E8164884A49BFB03BAE3E66B099DF735697986BBAEEA88562B9730476EE58E06138502D055A88DDE2CE4E944771E1B9D34A739A87A2EA404CFEC8FF65824E74D954EF758DFB4AEBB875810571F2A6A6F75608E7B52682225EEEF094340B12E03718CACA3E6D5FAE9BBBFCA7FFD14DCFF08A057F4E379D622A338012DE2C834A83767864DB7C9823DC75AAA381B068E57A6A4FF9773C2183470F1FB20122DBEE76D826337E5D01DDB295036CE9D5852B3BE4E0CADC66E42B16305CB7368EF293F42E80AEDB791C6E9BD45933A9A2F17FD60E551E1548C1AEF6B36A262D82C1ABA3C7F6C51DB913E16D8795640B2FC7ADBE003B48B62E096011398F387E77585064C481BDFCA7C47B9CA1A3B755CEC4A0596120A4E75119FC14B8A6C13E93694D2C319653A413B8E4CBB1A55E7BC555911F2D31678D4A5DF568DC4218AD6573BA07D46160134286FCB4C1F803E07723552D7C854CFBC3597DE9BF1B9930B6997AB2E9D384934BD1730BACB9586D46B81022DF89010B65E3DFBF7178C543A46BFE5CF6B6E3D2A5C74ADFEF13F131FA05AE05251FCF217F9276926F6E5FBEA94F40F1F9910DC865321A0495A8CBB5487BB2E96CD075E3CD99EF552ECF67C331CDC1CAECA526DBBB3314B6C8FCFE65278A70C484356867A41DA7D0C0CFCCFBC09DDE65C81D980190E539A67D8D4F02DCC8D9936CBCB796D84C8ED7A0F35F4E73D5210A625ACB7860AD39B09F4609C1D9FDF1056D9CBA5BBB371A674045316DC6D97B4E3EBA6732EE42A5ECBDD20F8C7DC6B8EAD36AD7931D33445B38B78BF4714466CB9EFDF75F9E88622610759ABDCD6DDF314B21D5ADB663BF02B232EC7BE6AAFBF0E60A734037477B8E6F7FFC1290E89E251FBB5F91EF78AC3B71DBE01A7E8F0F8BCB6E62F50E3A4158803FD7CCD69F45F274EBD2843E77369A66750D7E5C82F42AEE451D6F81E3BF18D2EF5D4A8F7BBC43D5DA3FC1EC142E88EFC114D9FD3E758A217D3088B31417DCC3E6658C97BBAF1C35327F1FAAD78512CEE74AE6B4E1863DBB552CCA429AA2CA39563E8FB771E2493F6340014AA43972720FB7449D1569C8EF84EA788CB9FF7B106DFA7C57A4918534F8ABE0DA6865225D8524B0D74FD65C5981AD546696209E82579650251CA16599FC06D15C79EEC51B71E35D070C5069319943C92B6E25A96C50995E3D26548716BDF002B6BE74EC140AC12454D62419B00F312C979E0879AB5966CDFD1A4FBFCB7C1057C4D2C01A6B78DDEF4C368F9DE27AAD7CE33C3DB1BE034122F8E4C7BA559A394E19E1DCA4E55CADA86B0820D2F49AA88C81F0E23194CF929CF4F3ADC4C89E3FD4900E5D694B0E81A4174F9F8E279FC45B790119811992A209263BE9BEB655592DE9E81326E7D45345377E356A7BA1BDF524257EAB9E61752B685890BC824AFA834605712AFE431180E9C87F09A87A1F490A9C64A7EF8232E3685EA6DE55F4586202D727D15B0AD4ECF9337802641B344E45635D344E82AAB61E083B8DF276C80E82E9960E00EADE00DA94EF49F30327FD659B8A60318720E9A0BAB66DF457A0191D864A080C99D75BADF49DFC668094A600E561ECF3FE3B0BC981831D569CDBDCE3E7819FC4A706848C2B52097988C0EEF4B0C1CA1B58CF82D3BE14349C5CC7E934B1E0BBA3B8D0C93C9C14E11101DEE66576FA53F7B910EBEB05C26C6BB539FEA91E9FC72B2B25E3BF532A709A4AF8E4609752F495FDAB446FE4D04629BFCD1C961A52C913E1EAA315C7C4FB8A6C692A16FE0D08B2959FA9B31D3270701B9D050D8B2E98350D7416F89404CA56AAF343F1E037873E86B71E6ED894A14A9C8C70A41D6ACAB8236CD51362340C02EDC49996A953065999DB2E09F06376F27791E4DA56AE2AE9152B606301BE973621C0F358E3100E07C3ADD21A8EDE860477BFA33A4DB6D45E8A1D657109D6074FDBB986F3D7CD9F61A0C313A424AFE26359E69848876E1C69D9A76D11A4D20289C2D788B469FF2850FB4CF98FB96B14347FE1E9C195AC54203021A7E8803AE91C6AA6E4946010582040D6ED65E940D3B8BA5F4FF2BF2CF35EC93026AD01B6D1C9C3BD77FE4284D1825A0DBD180AFF5BD78AFB25690AD1977D5956D1923802A37A5948FB006AB1488CBCF39CDC48CFB047794CBCBBD955CA179C92806F60A51C04CD5AF79979284D49C2B8350784E8A77B8ABBDEA6395CB006DE254798D9DECF3C9FBC7E826F4E445230EEFD7E0FE335F63EEB793AC66C5079A232528504A8729F428CB8AA722C6B1587E3A385777CA694F072915D24415BA6C7A0014252BDDDA51FB7E8D2EAB6DCE526EB520E289AC9B878C3A79EE36A16D0F7B221F7A1B533FC07302411987C8B473482F8105D7987EB492F60952B9F53AE45E8CFEAB3E621040CD0E9F0847523EDC72070DBDC97BE62602ED1EBE39D065A751A4D4B7E3B7ECB986D9D6ADC861F79C06FD992E99119ACAD8ECBC6972E0C611266C5E2DF852D48F20BA787820E9797295DD624FDE043E2F8E732F2D40A7056566192C23128595C04B9D57792BED1110C0698351B733A2950A53BE8E4591747EA5622906D577456D5AFCAA5468D804FCF69D3D331377E99B706E851F604AF7A5BADC977CBF4C3B6EBF0055ED81D9AAD07634B7343CFFEE27F54082BC46EA444C3D45DE9BFCC0569EFACFB45E99723D2DA81DCB5A9B61D114C5304C266553816928E3F69816C54B17D249EFC73D73BF7209CDF08116BB080EA8EDCA478543CB90080BCC142A6BA4629D397CCD33F523F418450B30E53C9961202A56E8F1DC2B26CEB569989AF68BB2C7E22BDCB0D48EB53DB93B0F6C56ACE62DD1BC52F368DCCF019CCC499AFC89BE8D75B876F58B7554FB1EADC26C1A15F2D9DA5AA23061F8CB2CAA187F3BA480B0F3E88453E868E94DD6FC2ACA3BBE5CA690837914603DD8BF52D9B82E345B9418CC69F91C106439FF0E34ADD15A95204BFE952FAAB3FD46A6FF972D3E5C01AB858B9076CD1D0056BC203BBC2B6B5BDD7FD3163673CC5E9385C021ABB8F9BB41C915E0B70A0EB7B375EAD870C2AA26FC330D7B837224915EA521CABD0B05DB0516000EB5441DDDC715F977C4CD8CA71AB98BA5C8C09CF3D9CBBC91989BFC648E9FE64E30AEB9472D8A55A85A2E2AD545802E1FB5DB0ED06B3B3E1114767604572EE2ECD482790FC20D9C31C2EADF34DEE0591091BF70725DB3C08DB4829C212B387DB403AEB671435233F888DB23D61A517A69BC729ACA0DC54DB830AA7A4075252818FD12DA5995826945DA3A02162B87888D04331575BF739CBF4938643C7E7AC857D1F48D3401EEC9D5EF79F88A9DE5B0A1524CB2054C744F67890295C274BB3DA00754902B56D0C7378CEB0B4B9691ED0780B2088481764119BF566CE707F88129383883971DC823DB1CC291AB831BD1A9439B31E936F7541F59C86DB1D6644AD6394DBFDDA6A34BF8D6CE874979743DA3E086278AB6759773E2A895862CD6BC283068F6CD341D733D2F25F2ED98AC5FD38746F8E5062203689B2EBB03671ADBFD82E74327481D8E432C461A9EA1DA2538E2379E1F735152CC244F73E7E61F83540367965AB032BF6FEC717B1DC5268EE16CEA459087212E2DDF2FB95B75195B34CAC09D63AAB2E9EFA8E091A8FEC9305D43B8D25698DD38AE3144AC6C7536D643C24557BB57F4E7EBA56757AE565CD8E2EBCDC38221F61D3057E4355F6E9BE1F8D01094ECBC0CE0707E7E97C7D728C52D31C8A7F657126AB268318BAE4314B982024C7E1865723C492A604052869EB906B36B47959B6F0E1B106BCD9DA911B3F80E83C31E6BF969406297E02261CFA837C8D6D417FA28CA00BB365B5929F5BF79FA67DF5C07E8C78D7AFAF485258EDEA48F95721EF0B7A60641364F069565A442FF7C0D47C96E60E03EDDF952A7AA446E62B3B811679AEFAD99DFC2AA8557431A97A61A1CA8FBECD0C8E371A47E6F3337DCDF8D44B89E343FD527774A47B7EED62A2C42CAEDC6530F93B01D7BBDE0B64FE479DD20288260E6CADC651B15918CA53FA06D5AE37FEB6A39CA039FE8093B9316E7ACDB7DE4192456F6B87923795F364402850D24EB7B86EF1DBA07C2B5766FD717F84483690C81B2292635A47389310C9D526BD7DB1954261A39A2FFF662AE7C34C7A539CE4ECB5AF35E5051591DA9414547542516AD530E95647321034441CEFE4C5097BAB5FEDF74D1C78DA517D304CB0865E91FC4BD6B9BE210EDE1A246EE8EA6B89685AD1FE94F7BD87F4F23EE64789BB62814BFD39467349768BCD0895ACAF4429ECEC180417BAE4FBEF9162C42464519DC4553DA98E4A3A410EACF491FA3A91AFD5F499A82A8496618108A2BAE1FCA3F40454602EA4A2E064396D118947A1E8598CB9DF9ABAC08B3580C52060EF5F3B5F40DBF82D4EA7D9BB075F7D7D552A717312642E28D1D8DD763C048B33A0A58E9498169ACC4C9E8BD6B4758F8E6A181FE956C2C21B77C4EAF880CBA35004626AE78410CE513F48B923CF078140C6254A5E6325D2198D244B14BF25335E6DEE22AEB2EF84D8D8F39B41DF5DF85E56F9E52F76751B33A2518E045B4C075BFC88630D19430F05FE1A7CA8D08C6699954352CE3AEF7CD33355EC1FDC5DBBBDC5FA8A7E63C9B0BBECC0BD36ED093378B6BC8F64644AF567945DAA219C41EF808746E9BAFE2F4C2D1EC9FB758A45AAF0FE38F656D39CCB11A8ED3E3000695590CFBD7570E6AB5CC9A8233189995777FD7D3BC58D9AD6770A67E7B99F3B1D7C27F7E781713D5DEBEF969714EFA224531443DC19A5A24A2FF30348287C9C3FA0B60EBA57F1D020852B5AFA1C37066BB8045A2D75631964EA9A34813F0D42CA3610CFC9052F207742D31C0B69D58353D733ABA1BE112A5A75185C138CF29A874B1310EA9F7D7AA800069519198CF3762F9DDF6BBFE9894E98A45451587A0F2A611FFB73A088280BDAEFFB7130A2536AE538232C139667CDDAE99612166DE4E37CBFB1ECA9F5BDAD2F3B03BB391034ADE0B84BC134B5CF66869530C3FA2D54E9081AE735EEEB61420AB9D08F856252569A789E4B94B8A87E827012A4FA8C15EB5F07968B68AB938C5FAD581B6F2CEF87A0E1E96D571D45531A991B9879516AAF044AB17C78093C359905990AB0E0E797DBDB99A64188AE12BD30CFD0ECA81990CC369CD1D746BF85DE8767900436BA57F9256E691BBA74FFA2F121BE405D8039B4045FE792A4EC34A5D7EAE59D3E8AFB9C36031F5179672C1EF4F482F348E081D6D161E6C818786F1972FCA90B925B6A81237ECD65CB73889A8161EE9EDA657F51CA93CB0AB4845E3B6B6C0C67159055A1992DFC8F37FD3CDE84157E5963DC6062A4A8B89F4FCC5CE777EB10DDCE0B1B90A7013437B0AC8BF0390AF43E118D1FEB081E0686F11209DE46B84A37DEF9AC8999C8B782F85F50A461060B864F7DC4EE548AFFC067661F46947B69E82B07061E01FFED1926DCE9456EC1FCC74D3EFDC6C8E2204A9F6F853DB50B63549FC242A099D9FDA727915B321E7FF586497280D217CB931C2ED58ACC14053754CDD79CCB7E70F1AE21627FA54C22D16CF7C3DC14B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType1-1.0: AAAAAE+HiraKakuProN-W3 001.003%%CreationDate: 10/12/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraKakuProN-W3) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAE+HiraKakuProN-W3 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} forreadonly def/FontBBox {-386 -373 1232 1266} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96886EE4B4169EC3DEEE64932AF4AECA3AAB81853B58042BA51BAD1CF1FE646754A29D2100BBA83E7F6E2F5DFB112F838CA7F659DA7A6373BB1B86BF204DA715F2942AD8690FB1C37539822AE991DF19EAFFBD3E70C395C40FA19CBA66F6F776EC20B6398A64B19208F0E64419A3F9DB393F17B6A206EFAE3B72BBB97405C4CB82801FFF79A60CA475287D576B5FAE301357949AC6E4F6EF1B8E41EC8819429C31C995A8D02C6F93131B3C3FD0563C5B2C561EF5E734C7AC2E2F882889F4D04700D54FF4ABFEB4AC7C99214F399F62A2920477FEA7111FBD7B5EC77864EA25A0388721F3165F5B0867D1C7C29DFA0394F00B032672FD41DA7C59FA55B9E3AF89B81799A0B27F1420BA48F9FA3B4693FDB053C26BACF8A048849E5C5B195ED71C79113DD547B1468FEEC4C124788537CF90C3E1DB8793BD8E61BC72DD310B89670021372EA4C700AD16A855D0917C5F105706F3206540AEBA75926DC784B77FAA8F2459B9A468E2A06318839FA8C08FA7A8241BE54D435D7E1CE8BB877839B32897C38ECC3B2B63BFD6083CBD67A33FDFC81F548A162333DCE29E28232431AF51437794B82CDAA0282850FBBCB8A0A9CAE35CC3991AA9FBE225251C0E9E3F59F39EC952D556BEDE7BA8BA8BCA5546B665B2481E6F4EE3929FE02EFB2402EFDBD1FAC1C72B9CFCFE391E0291A712286845FD31A23988776578437DD63EE0C3ED76EA391B35D2355FED30B1FD068D708EA45C4BE46C0F907CAB826ECAA27734D9723CF21C18BB7B30819E095E25833FB53FA83710AC4E86D305F2EE40138D4BECB08688944C0D68C62E39899104AD6E587EC0F3FC097CE79F16A2C519A3B4ADA4712EFAA7D9C7A17BC5023789142657BA7D164124537929053C2A7A0D2E8E4E63CFA5179983FDCC84769897719FB24472CCA9EA1577B22B8B29703CCC51B7A254194DD86210204BEB444EA4A0D95A73FDBE953C0BDD8ED9074555027E745D457D989412029757A42BCAA87154D3479D568532C656227DECD1A94699177522FB013228446DE961EDC5C6CDBF3CD69FA2B5F7E2137C9DE65C2B6327032847044CCA017F9B2E8177A4A4B6D7DDBAC578CC2E98EB131C49BE0E818CF78C8DD2B562D74A1A9CEEEF49606115A53F15F15D080A3ABB6D990CFEA9C58779C7E388C90BF6C7C1ADCA733C293E821F528A8A25B16CEFF39B103A0000382CE00343EB20473864E5EE271B9F16B48543620B37B95B5C016B6BDF34B868DAE1E3581207508587E0D44760E91C5E8183D629898CD1FD0E1D2798E7DDBF7A2997AD582AB85DCF50C2301E775AC7AD675A059D273D13E77A7EA38DA6F3B16DDF2087940136B83C511845E6A91B8D2B8E3D892958966D1E22B2BC977734ECA36565C4A0FD0DE93F3025640B66827F52733B55B565D4C60B8A3A5AF5EA3F5DDE6901C913366D3952F3FBD1B3FA9E4DE1474E006280D61EF34D830490F88722027E57AD7F3FAA60FF2172B435493B0B726C9BFFB996459F29609633507AF1DA7A9F84094F7C61B0EEBA7670540DA3ABAE2EE2C565DC4B7A061BE2B5375121676FDE5B0C37B9D922C0CEF05056E77E641B66DEEDE17E1C6714DC4A7B16764EA5D4C7331DE2B1472FC3E610FB03B5842F4B7D9D268CF3204EEE860B1B96EB272DF663849EC387B8135065F484863D2C1263604ECBA3F3BF4344916C70485FA8B9E61C9F6A83C70EDBBB3E3F5A63B0C9BBAE3A3B457D94E5669B60812E2B88E0A767E549573484C03CD45364AA230827B160318E25F95D8ADBD664C1DE213CDC3454775A09DA3858AC9622DB94A66012A14588548B12011E64B1CAB38834EEA24AA78C7FDA24690D53CE063EF666119954BD289925D2667AB00834FD41EC048E6ADAFC36FE8971B9A3B776906C22414478E6D4731FD1125256E30E2ECEB7600643ADFB27EED6B7040DEEF0580ABAF22E011D407D171ED48A915140FE722E3DDFE39AFB34043406803C8C0CD5D729243F2450E9F7AE57A85910D0C304A290941ED125758860B66D4CA4E00F1F6BABC431CD4B2E2C0B9C2DADE8EAD2BB86D96EA93D125497F487C77BC15BA284A04A55EE8DA4D52C365D845AD7D66672664B1B6D113376C4136E18A77579176C5BAEF5D063127ACEB217340F93AC314FE151AC07E75980038953DE1ADBFF288C3C0CE5974F5ABCEC9B7780CA3A7949C232DCF7C36331A48DF504C45E69BE408DDD4DFAB2CE40717D026086DCD1097B8D79157EC780F6EE40798794591698E8894B0229F5541131FFC3777DA24ED84FA84EA3C49B49D8B8168764BE94AD9CD73303A9C02C4B30273D995D77E093F9B20716ED7A8D1882A8A3ACE81154B739FDEC7D3E560D8733BFD7A7FC51BDD337587FB4471C0E735DA3A11DE1CE7510EC7000A78EB103DD08B79D3CDC791077780EECA983D71377D598198DF0A02F9315A92A1708B997FE3FE467B06970D58C676D1AE871F2A3AAF6E85BD087A77A92918B0ABD6DC855C54CF7A69CF96D20B74AD321DCC3B7018A7444D4F2A193451672F3A720DA457D38F60B5775C157059CC76938A5E396C70D7FA75E105636F9F2C27F5FAC0A0DE4AC709899A15B85D546B0D6020B509DBADC91624359D5B74575D67408A0B9D67AD007066510B5D0D1B0EC5244C1AEF02E521DA2BF5ED41CACA27127A53415F188264B610C4C837720CF95B8E78D7B36D0C3E86CC7CEC6ACF71575B9D28BC7155C67B45CEC4DCB47D8474A1ABFC1CD4A284109F175FABC93B3020C61D0E31C976A6D252B773FB84F044052F027ACCE86453F830BA312657154C8C25AF0D965497C02E9CD04B3BC66E08E942AC451D0ABC63A739E527D5ACDBFC52C6357FC7A5FD91740DB7584C3C12B1F5BEF9A0A44B5DB530603FF7F1696ADE051026005919B9E0923BA37B60C7611E7EF96DEAA7552F8B28AD9DD5C3A2A45D37BC3026CBFFC6429C69CB444D4C460BF6F7B15EE6523F1768568E1357DBF96488F4CDF3D9633C8CC2B3732B05A338622C30DAD2966CFF5B3EFCE688EFE2A0AE6040ADD3567E90A16026A42A2EF287CF3D8ABA5A6E6E251938B96BC6D38EE53F70163447DFB2EFB45D5E609E135AFB66185BB12CE5950CEBFF13E5DB2848616FB0D5277EC40B2C41FA40D086E8164884A49BFB03BAE3E66B099DF735697986BBAEEA88562B9730476EE58E06138502D055A88DDE2CE4E944771E1B9D34A739A87A2EA404CFEC8FF65824E74D954EF758DFB4AEBB875810571F2A6A6F75608E7B52682225EEEF094340B12E03718CACA3E6D5FAE9BBBFCA7FFD14DCFF08A057F4E379D622A338012DE2C834A83767864DB7C9823DC75AAA381B068E57A6A4FF9773C2183470F1FB20122DBEE76D826337E5D01DDB295036CE9D5852B3BE4E0CADC66E42B16305CB7368EF293F42E80AEDB791C6E9BD45933A9A2F17FD60E551E1548C1AEF6B36A262D82C1ABA3C7F6C51DB913E16D8795640B2FC7ADBE003B48B62E096011398F387E77585064C481BDFCA7C47B9CA1A3B755CEC4A0596120A4E75119FC14B8A6C13E93694D2C319653A413B8E4CBB1A55E7BC555911F2D31678D4A5DF568DC4218AD6573BA07D46160134286FCB4C1F803E07723552D7C854CFBC3597DE9BF1B9930B6997AB2E9D384934BD1730BACB9586D46B81022DF89010B65E3DFBF7178C543A46BFE5CF6B6E3D2A5C74ADFEF13F131FA05AE05251FCF217F9276926F6E5FBEA94F40F1F9910DC865321A0495A8CBB5487BB2E96CD075E3CD99EF552ECF67C331CDC1CAECA526DBBB3314B6C8FCFE65278A70C484356867A41DA7D0C0CFCCFBC09DDE65C81D980190E539A67D8D4F02DCC8D9936CBCB796D84C8ED7A0F35F4E73D5210A625ACB7860AD39B09F4609C1D9FDF1056D9CBA5BBB371A674045316DC6D97B4E3EBA6732EE42A5ECBDD20F8C7DC6B8EAD36AD7931D33445B38B78BF4714466CB9EFDF75F9E88622610759ABDCD6DDF314B21D5ADB663BF02B232EC7BE6AAFBF0E60A734037477B8E6F7FFC1290E89E251FBB5F91EF78AC3B71DBE01A7E8F0F8BCB6E62F50E3A4158803FD7CCD69F45F274EBD2843E77369A66750D7E5C82F42AEE451D6F81E3BF18D2EF5D4A8F7BBC43D5DA3FC1EC142E88EFC114D9FD3E758A217D3088B31417DCC3E6658C97BBAF1C35327F1FAAD78512CEE74AE6B4E1863DBB552CCA429AA2CA39563E8FB771E2493F6340014AA43972720FB7449D1569C8EF84EA788CB9FF7B106DFA7C57A4918534F8ABE0DA6865225D8524B0D74FD65C5981AD546696209E82579650251CA16599FC06D15C79EEC51B71E35D070C5069319943C92B6E25A96C50995E3D26548716BDF002B6BE74EC140AC12454D62419B00F312C979E0879AB5966CDFD1A4FBFCB7C1057C4D2C01A6B78DDEF4C368F9DE27AAD7CE33C3DB1BE034122F8E4C7BA559A394E19E1DCA4E55CADA86B0820D2F49AA88C81F0E23194CF929CF4F3ADC4C89E3FD4900E5D694B0E81A4174F9F8E279FC45B790119811992A209263BE9BEB655592DE9E81326E7D45345377E356A7BA1BDF524257EAB9E61752B685890BC824AFA834605712AFE431180E9C87F09A87A1F490A9C64A7EF8232E3685EA6DE55F4586202D727D15B0AD4ECF9337802641B344E45635D344E82AAB61E083B8DF276C80E82E9960E00EADE00DA94EF49F30327FD659B8A60318720E9A0BAB66DF457A0191D864A080C99D75BADF49DFC668094A600E561ECF3FE3B0BC981831D569CDBDCE3E7819FC4A706848C2B52097988C0EEF4B0C1CA1B58CF82D3BE14349C5CC7E934B1E0BBA3B8D0C93C9C14E11101DEE66576FA53F7B910EBEB05C26C6BB539FEA91E9FC72B2B25E3BF532A709A4AF8E4609752F495FDAB446FE4D04629BFCD1C961A52C913E1EAA315C7C4FB8A6C692A16FE0D08B2959FA9B31D3270701B9D050D8B2E98350D7416F89404CA56AAF343F1E037873E86B71E6ED894A14A9C8C70A41D6ACAB8236CD51362340C02EDC49996A953065999DB2E09F06376F27791E4DA56AE2AE9152B606301BE973621C0F358E3100E07C3ADD21A8EDE860477BFA33A4DB6D45E8A1D657109D6074FDBB986F3D7CD9F61A0C313A424AFE26359E69848876E1C69D9A76D11A4D20289C2D788B469FF2850FB4CF98FB96B14347FE1E9C195AC54203021A7E8803AE91C6AA6E4946010582040D6ED65E940D3B8BA5F4FF2BF2CF35EC93026AD01B6D1C9C3BD77FE4284D1825A0DBD180AFF5BD78AFB25690AD1977D5956D1923802A37A5948FB006AB1488CBCF39CDC48CFB047794CBCBBD955CA179C92806F60A51C04CD5AF79979284D49C2B8350784E8A77B8ABBDEA6395CB006DE254798D9DECF3C9FBC7E826F4E445230EEFD7E0FE335F63EEB793AC66C5079A232528504A8729F428CB8AA722C6B1587E3A385777CA694F072915D24415BA6C7A0014252BDDDA51FB7E8D2EAB6DCE526EB520E289AC9B878C3A79EE36A16D0F7B221F7A1B533FC07302411987C8B473482F8105D7987EB492F60952B9F53AE45E8CFEAB3E621040CD0E9F0847523EDC72070DBDC97BE62602ED1EBE39D065A751A4D4B7E3B7ECB986D9D6ADC861F79C06FD992E99119ACAD8ECBC6972E0C611266C5E2DF852D48F20BA787820E9797295DD624FDE043E2F8E732F2D40A7056566192C23128595C04B9D57792BED1110C0698351B733A2950A53BE8E4591747EA5622906D577456D5AFCAA5468D804FCF69D3D331377E99B706E851F604AF7A5BADC977CBF4C3B6EBF0055ED81D9AAD07634B7343CFFEE27F54082BC46EA444C3D45DE9BFCC0569EFACFB45E99723D2DA81DCB5A9B61D114C5304C266553816928E3F69816C54B17D249EFC73D73BF7209CDF08116BB080EA8EDCA478543CB90080BCC142A6BA4629D397CCD33F523F418450B30E53C9961202A56E8F1DC2B26CEB569989AF68BB2C7E22BDCB0D48EB53DB93B0F6C56ACE62DD1BC52F368DCCF019CCC499AFC89BE8D75B876F58B7554FB1EADC26C1A15F2D9DA5AA23061F8CB2CAA187F3BA480B0F3E88453E868E94DD6FC2ACA3BBE5CA690837914603DD8BF52D9B82E345B9418CC69F91C106439FF0E34ADD15A95204BFE952FAAB3FD46A6FF972D3E5C01AB858B9076CD1D0056BC203BBC2B6B5BDD7FD3163673CC5E9385C021ABB8F9BB41C915E0B70A0EB7B375EAD870C2AA26FC330D7B837224915EA521CABD0B05DB0516000EB5441DDDC715F977C4CD8CA71AB98BA5C8C09CF3D9CBBC91989BFC648E9FE64E30AEB9472D8A55A85A2E2AD545802E1FB5DB0ED06B3B3E1114767604572EE2ECD482790FC20D9C31C2EADF34DEE0591091BF70725DB3C08DB4829C212B387DB403AEB671435233F888DB23D61A517A69BC729ACA0DC54DB830AA7A4075252818FD12DA5995826945DA3A02162B87888D04331575BF739CBF4938643C7E7AC857D1F48D3401EEC9D5EF79F88A9DE5B0A1524CB2054C744F67890295C274BB3DA00754902B56D0C7378CEB0B4B9691ED0780B2088481764119BF566CE707F88129383883971DC823DB1CC291AB831BD1A9439B31E936F7541F59C86DB1D6644AD6394DBFDDA6A34BF8D6CE874979743DA3E086278AB6759773E2A895862CD6BC283068F6CD341D733D2F25F2ED98AC5FD38746F8E5062203689B2EBB03671ADBFD82E74327481D8E432C461A9EA1DA2538E2379E1F735152CC244F73E7E61F83540367965AB032BF6FEC717B1DC5268EE16CEA459087212E2DDF2FB95B75195B34CAC09D63AAB2E9EFA8E091A8FEC9305D43B8D25698DD38AE3144AC6C7536D643C24557BB57F4E7EBA56757AE565CD8E2EBCDC38221F61D3057E4355F6E9BE1F8D01094ECBC0CE0707E7E97C7D728C52D31C8A7F657126AB268318BAE4314B982024C7E1865723C492A604052869EB906B36B47959B6F0E1B106BCD9DA911B3F80E83C31E6BF969406297E02261CFA837C8D6D417FA28CA00BB365B5929F5BF79FA67DF5C07E8C78D7AFAF485258EDEA48F95721EF0B7A60641364F069565A442FF7C0D47C96E60E03EDDF952A7AA446E62B3B811679AEFAD99DFC2AA8557431A97A61A1CA8FBECD0C8E371A47E6F3337DCDF8D44B89E343FD527774A47B7EED62A2C42CAEDC6530F93B01D7BBDE0B64FE479DD20288260E6CADC651B15918CA53FA06D5AE37FEB6A39CA039FE8093B9316E7ACDB7DE4192456F6B87923795F364402850D24EB7B86EF1DBA07C2B5766FD717F84483690C81B2292635A47389310C9D526BD7DB1954261A39A2FFF662AE7C34C7A539CE4ECB5AF35E5051591DA9414547542516AD530E95647321034441CEFE4C5097BAB5FEDF74D1C78DA517D304CB0865E91FC4BD6B9BE210EDE1A246EE8EA6B89685AD1FE94F7BD87F4F23EE64789BB62814BFD39467349768BCD0895ACAF4429ECEC180417BAE4FBEF9162C42464519DC4553DA98E4A3A410EACF491FA3A91AFD5F499A82A8496618108A2BAE1FCA3F40454602EA4A2E064396D118947A1E8598CB9DF9ABAC08B3580C52060EF5F3B5F40DBF82D4EA7D9BB075F7D7D552A717312642E28D1D8DD763C048B33A0A58E9498169ACC4C9E8BD6B4758F8E6A181FE956C2C21B77C4EAF880CBA35004626AE78410CE513F48B923CF078140C6254A5E6325D2198D244B14BF25335E6DEE22AEB2EF84D8D8F39B41DF5DF85E56F9E52F76751B33A2518E045B4C075BFC88630D19430F05FE1A7CA8D08C6699954352CE3AEF7CD33355EC1FDC5DBBBDC5FA8A7E63C9B0BBECC0BD36ED093378B6BC8F64644AF567945DAA219C41EF808746E9BAFE2F4C2D1EC9FB758A45AAF0FE38F656D39CCB11A8ED3E3000695590CFBD7570E6AB5CC9A8233189995777FD7D3BC58D9AD6770A67E7B99F3B1D7C27F7E781713D5DEBEF969714EFA224531443DC19A5A24A2FF30348287C9C3FA0B60EBA57F1D020852B5AFA1C37066BB8045A2D75631964EA9A34813F0D42CA3610CFC9052F207742D31C0B69D58353D733ABA1BE112A5A75185C138CF29A874B1310EA9F7D7AA800069519198CF3762F9DDF6BBFE9894E98A45451587A0F2A611FFB73A088280BDAEFFB7130A2536AE538232C139667CDDAE99612166DE4E37CBFB1ECA9F5BDAD2F3B03BB391034ADE0B84BC134B5CF66869530C3FA2D54E9081AE735EEEB61420AB9D08F856252569A789E4B94B8A87E827012A4FA8C15EB5F07968B68AB938C5FAD581B6F2CEF87A0E1E96D571D45531A991B9879516AAF044AB17C78093C359905990AB0E0E797DBDB99A64188AE12BD30CFD0ECA81990CC369CD1D746BF85DE8767900436BA57F9256E691BBA74FFA2F121BE405D8039B4045FE792A4EC34A5D7EAE59D3E8AFB9C36031F5179672C1EF4F482F348E081D6D161E6CCBF051B080A225D62FB0344E238635ADBFC239596B219F56100E14BE80B4EEAB7DA57ECB4E790FD76B9F1840AAA7C2551038304F079A04AA1B65D9835E5527F7E9768F5C3ACEAF824805B580B4920707A305EED377A0BC64F28696ABA5872573ACBCA800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: OIASDQ+HiraginoSans-W319 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Japan1/) def/Supplement 6 defend readonly def/FontName /OIASDQ+HiraginoSans-W3 def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uni21D2.15482 putreadonly def/$SubFontArray [/AAAAAD+HiraKakuProN-W3 findfont /AAAAAE+HiraKakuProN-W3 findfont ] def/CharProcs 3 dictdup /uniFFFD.0 {(\000) 1 $SP} 2 index /.notdef 2 index put putdup /uni21D2.15482 {(\000) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/OIASDQ+HiraginoSans-W3 cguidfix
/F2.1/OIASDQ+HiraginoSans-W3 renmfont
%RBIBeginFontSubset: LMRZHF+PingFangSC-Regular
%!FontType1-1.0: AAAAAF+PingFangHK-Regular 001.003%%CreationDate: 10/12/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAF+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1420 putdup 2 /gid1591 putdup 3 /gid2556 putdup 4 /gid4457 putdup 5 /gid6535 putdup 6 /gid7598 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA66220E183507C2670BFFEE9B10FE56DD319F768A004B17A59025002D9D95F7E82180B7E78244889EE81177017741CF63E954EC0AAC8B981AE8B7CAFDB1C89BFFACDD7B4760D51197398068A3F5A0CC45B962A67731C7EAD59111AD8CA4C0E0581F83591AB3AA7C009BEC2A203BE0F9181250C08F9DD1C78716437EE0C83FBC80A62A28E2220B38A7B746DC070B5BB721B45BA950703A31C6B5AA448DE68BD31830B118FA9F77707AE6259742136004D0200FF14D2856329EBB51FB73E76E0114BE7E6618D1E9537ED1BBE09A09DD83F8B9342C78D98D5EEC00BBCF11C1281DD9D7C4460380EA3BA4600462D232F1E9D1F826BFA44E0FE43F97FA253A3E238B569BF454A941C24E060B01A29BCBAA4EE734018EC7E8C8090987EC7DE44D85C7B78834E5FA72BE05F33740DD203176D135D922762CC1DD018EBA76F03E69B9339C9FA68B156B273EC26A760501115089045A69AB69ADCC4B4A90B0652495C640B45F59674516E59FCABDFA81E85C343DB9DF86138EA5CBB9A6620DF73E7EF03E14DBF1C59D489137349C5EB97BBFAECA00980E465F91B9F8D819A12A3A0BF20704152972925D845008410CA6680BC86EAB1DF73EEC1E0A6E36F6CEDD1AA45AB56680405E52712654EDA5B87E3704D78DF8087240858DFCB020C10E44163D9A4B71A97BC380C44C4A1113EB0F163DC626EBDC96CD564E2E4F76DB3C66B48CFFE0CB657C255E5C604A2D311AAD119669DC76173D0ADC94B26388C1AAF2173FEC7D13F274E299358AB4507AE815FCDF2B772A06A38F76F2FB3D8BFB0193EC701E3C9A8D579860868BC6764033D32CD5474D93724D6E7374D6401D77FAECFEB0BD7F6CAEF414CD041E02781BF7296E849B00133828D4B922E879C9BF9D09029E3BF978D3020B863B4C460B66C2C4A2B9A07588A4B025D51281B86BE441A4B9873CF044893B9BFC9268837C48BADF0DB4800221BD20CC88146B7BB3F8FD8F62C100864745C1FD54F365082FB38117E0A0AF738530D9B8BE553C90B4F7FB949D50B402E0BB25AE8CAA2A379B54417DF68402553684E003112488958FE9CAEAE9C4F2093EC29769A33C12EC4CDB8A8F6879AA35684DF30A26B630E26C264681673C3028DA4A93F9DFFAB4E40B63138F0A32E7355FA7AD759FF86EEAB91BB5CA6420C343DB0094C2B52A4DFEE752246C2595CC1BBCA50CA02FE48066824BBEDD54E5825B3E45F85184B78E26188B732D76AD8E09E2BF4E4D352767AD1ABB4D758C71C4BD513482B0E793EEC0242F3CF9A33E4EC1F7E87EFCB32C7D001E32D9A5C67874EDF9FE998D470577E2D74BDAF1872CF9125D784F7D32655E0526D311E7B6C0CAF582B7E38B0BF5B2258E0E9662E9F9E914168473113C769865260A970CEBA4C5B9CB4A6E942D3232772F76D579FE85893D8943786B4F343C24F58727398BA76FE5185EFAD7A24F0F1409222418C61C237BEB407FCD7E5790C77874FD251DA31F40D734FB6FE20CC255FE4F8092B624CDF8333A579D280F663EB0537B094B30AAC538E1315C840189AFA703DC7D77DC1A968CEE3AF8F04BF5A96F9F1F67C635B4C9A585FCA96DC11EB2E45E79380FF9E2ABA48E2E0B444C3073B12E89F60DE69F4395B13AD10FD90A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: LMRZHF+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /LMRZHF+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid1420 putdup 34 /gid6535 putdup 35 /gid7598 putdup 36 /gid4457 putdup 37 /gid1591 putdup 38 /gid2556 putreadonly def/$SubFontArray [/AAAAAF+PingFangHK-Regular findfont ] def/CharProcs 8 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1420 {(\001) 0 $SP} putdup /gid1591 {(\002) 0 $SP} putdup /gid2556 {(\003) 0 $SP} putdup /gid4457 {(\004) 0 $SP} putdup /gid6535 {(\005) 0 $SP} putdup /gid7598 {(\006) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/LMRZHF+PingFangSC-Regular cguidfix
/F3.1/LMRZHF+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 455.94662 161.26062 rc
1 0 0 -1 -105.23919 283.66156 cm
341.88428 235.89749 m
312.28931 261.14615 l
S
CM
199.32944 15.928567 m
204.65273 25.325516 l
209.44756 19.705305 l
h
199.32944 15.928567 m
f
0.25 w
1 0 0 -1 -105.23919 283.66156 cm
304.56863 267.733 m
309.89191 258.33603 l
314.68674 263.95627 l
h
304.56863 267.733 m
S
1 w
510.49167 199.58641 m
480.89673 224.83507 l
S
CM
367.93686 52.239655 m
373.26013 61.6366 l
378.05496 56.016392 l
h
367.93686 52.239655 m
f
0.25 w
1 0 0 -1 -105.23919 283.66156 cm
473.17603 231.42191 m
478.49933 222.02496 l
483.29416 227.64517 l
h
473.17603 231.42191 m
S
1 w
205.35501 197.71912 m
205.35861 191.1987 204.06219 184.68114 201.56361 178.65845 c
199.07169 172.633 195.37979 167.10768 190.76662 162.4996 c
186.15854 157.88641 180.63322 154.19452 174.60776 151.70259 c
168.58507 149.20401 162.06752 147.90759 155.5471 147.91119 c
149.02669 147.90759 142.50914 149.20401 136.48643 151.70259 c
130.46098 154.19452 124.93567 157.88641 120.32759 162.4996 c
115.71441 167.10768 112.02251 172.633 109.53059 178.65845 c
107.03201 184.68114 105.73558 191.1987 105.73919 197.71912 c
105.73558 204.23952 107.03201 210.75708 109.53059 216.77977 c
112.02251 222.80522 115.71441 228.33055 120.32759 232.93863 c
124.93567 237.5518 130.46098 241.2437 136.48643 243.73563 c
142.50914 246.23421 149.02669 247.53062 155.5471 247.52702 c
162.06752 247.53062 168.58507 246.23421 174.60776 243.73563 c
180.63322 241.2437 186.15854 237.5518 190.76662 232.93863 c
195.37979 228.33055 199.07169 222.80522 201.56361 216.77977 c
204.06219 210.75708 205.35861 204.23952 205.35501 197.71912 c
h
205.35501 197.71912 m
S
0.9995597 0 0 sc
CM
31.892216 110.95271 m
31.892565 111.58596 31.766659 112.21893 31.524002 112.80385 c
31.28199 113.38902 30.923439 113.92564 30.475416 114.37316 c
30.027887 114.82119 29.49128 115.17974 28.906097 115.42175 c
28.321184 115.66441 27.688211 115.79031 27.05496 115.78996 c
26.421711 115.79031 25.788736 115.66441 25.203823 115.42175 c
24.618643 115.17974 24.082033 114.82119 23.634504 114.37316 c
23.186481 113.92564 22.82793 113.38902 22.58592 112.80385 c
22.343262 112.21893 22.217356 111.58596 22.217707 110.95271 c
22.217356 110.31946 22.343262 109.68649 22.58592 109.10157 c
22.82793 108.51639 23.186481 107.97978 23.634504 107.53225 c
24.082033 107.08423 24.618643 106.72568 25.203823 106.48367 c
25.788736 106.24101 26.421711 106.1151 27.05496 106.11546 c
27.688211 106.1151 28.321184 106.24101 28.906097 106.48367 c
29.49128 106.72568 30.027887 107.08423 30.475416 107.53225 c
30.923439 107.97978 31.28199 108.51639 31.524002 109.10157 c
31.766659 109.68649 31.892565 110.31946 31.892216 110.95271 c
h
31.892216 110.95271 m
f
0 0 0 sc
55.145168 85.942451 m
55.145519 86.575699 55.019611 87.208672 54.776955 87.793587 c
54.534943 88.378769 54.176392 88.915375 53.728371 89.362907 c
53.280842 89.810928 52.744232 90.169479 52.15905 90.411491 c
51.574139 90.654144 50.941162 90.780052 50.307915 90.779701 c
49.674664 90.780052 49.041691 90.654144 48.456776 90.411491 c
47.871593 90.169479 47.334988 89.810928 46.887459 89.362907 c
46.439434 88.915375 46.080883 88.378769 45.838871 87.793587 c
45.596214 87.208672 45.47031 86.575699 45.470657 85.942451 c
45.47031 85.309196 45.596214 84.676224 45.838871 84.091309 c
46.080883 83.506134 46.439434 82.969521 46.887459 82.521996 c
47.334988 82.073967 47.871593 81.715424 48.456776 81.473412 c
49.041691 81.230751 49.674664 81.104843 50.307915 81.105194 c
50.941162 81.104843 51.574139 81.230751 52.15905 81.473412 c
52.744232 81.715424 53.280842 82.073967 53.728371 82.521996 c
54.176392 82.969521 54.534943 83.506134 54.776955 84.091309 c
55.019611 84.676224 55.145519 85.309196 55.145168 85.942451 c
h
55.145168 85.942451 m
f
0.9995597 0 0 sc
91.076363 100.68421 m
91.076706 101.31747 90.950806 101.95044 90.708145 102.53535 c
90.466133 103.12053 90.107582 103.65714 89.659561 104.10467 c
89.212029 104.5527 88.675423 104.91125 88.09024 105.15325 c
87.505325 105.39591 86.872353 105.52182 86.239105 105.52147 c
85.605858 105.52182 84.972878 105.39591 84.38797 105.15325 c
83.802788 104.91125 83.266174 104.5527 82.818649 104.10467 c
82.370628 103.65714 82.012077 103.12053 81.770065 102.53535 c
81.527405 101.95044 81.401497 101.31747 81.401848 100.68421 c
81.401497 100.05096 81.527405 99.417992 81.770065 98.833076 c
82.012077 98.247894 82.370628 97.711288 82.818649 97.263756 c
83.266174 96.815735 83.802788 96.457184 84.38797 96.215172 c
84.972878 95.972519 85.605858 95.846611 86.239105 95.846962 c
86.872353 95.846611 87.505325 95.972519 88.09024 96.215172 c
88.675423 96.457184 89.212029 96.815735 89.659561 97.263756 c
90.107582 97.711288 90.466133 98.247894 90.708145 98.833076 c
90.950806 99.417992 91.076706 100.05096 91.076363 100.68421 c
h
91.076363 100.68421 m
f
72.172607 50.307915 m
72.172958 50.941162 72.04705 51.574139 71.804398 52.15905 c
71.562386 52.744232 71.203835 53.280842 70.755806 53.728371 c
70.308281 54.176392 69.771675 54.534943 69.186493 54.776955 c
68.601578 55.019611 67.968605 55.145519 67.33535 55.145168 c
66.702103 55.145519 66.06913 55.019611 65.484215 54.776955 c
64.899033 54.534943 64.362427 54.176392 63.914898 53.728371 c
63.466873 53.280842 63.108326 52.744232 62.866314 52.15905 c
62.623653 51.574139 62.497749 50.941162 62.4981 50.307915 c
62.497749 49.674664 62.623653 49.041691 62.866314 48.456776 c
63.108326 47.871593 63.466873 47.334988 63.914898 46.887459 c
64.362427 46.439434 64.899033 46.080883 65.484215 45.838871 c
66.06913 45.596214 66.702103 45.47031 67.33535 45.470657 c
67.968605 45.47031 68.601578 45.596214 69.186493 45.838871 c
69.771675 46.080883 70.308281 46.439434 70.755806 46.887459 c
71.203835 47.334988 71.562386 47.871593 71.804398 48.456776 c
72.04705 49.041691 72.172958 49.674664 72.172607 50.307915 c
h
72.172607 50.307915 m
f
0 0 0 sc
1 0 0 -1 -105.23919 283.66156 cm
155.40259 197.74644 m
125.80764 222.9951 l
S
CM
12.847753 54.079609 m
18.171038 63.476559 l
22.965866 57.85635 l
h
12.847753 54.079609 m
f
0.25 w
1 0 0 -1 -105.23919 283.66156 cm
118.08694 229.58195 m
123.41022 220.185 l
128.20505 225.80521 l
h
118.08694 229.58195 m
S
0 i
/F1.1[ 18 0 0 -18 0 0]sf
133.49188 235.90776 m
(!)s
1 w
[
4
4
] 0 d
0.60000002 i
1 0.14939362 0 sc
352.91772 172.70885 m
352.92133 166.18845 351.62491 159.67088 349.12634 153.64819 c
346.6344 147.62274 342.9425 142.09741 338.32935 137.48933 c
333.72125 132.87616 328.19592 129.18427 322.17047 126.69234 c
316.1478 124.19376 309.63022 122.89733 303.10983 122.90094 c
296.58942 122.89733 290.07184 124.19376 284.04916 126.69234 c
278.02371 129.18427 272.49838 132.87616 267.89032 137.48933 c
263.27713 142.09741 259.58524 147.62274 257.09329 153.64819 c
254.59473 159.67088 253.29831 166.18845 253.30191 172.70885 c
253.29831 179.22926 254.59473 185.74683 257.09329 191.76952 c
259.58524 197.79497 263.27713 203.32028 267.89032 207.92836 c
272.49838 212.54153 278.02371 216.23344 284.04916 218.72536 c
290.07184 221.22395 296.58942 222.52037 303.10983 222.51677 c
309.63022 222.52037 316.1478 221.22395 322.17047 218.72536 c
328.19592 216.23344 333.72125 212.54153 338.32935 207.92836 c
342.9425 203.32028 346.6344 197.79497 349.12634 191.76952 c
351.62491 185.74683 352.92133 179.22926 352.91772 172.70885 c
h
352.91772 172.70885 m
S
0.9995597 0 0 sc
CM
202.70789 110.95271 m
202.70824 111.58596 202.58234 112.21893 202.33968 112.80385 c
202.09766 113.38902 201.73911 113.92564 201.29109 114.37316 c
200.84355 114.82119 200.30695 115.17974 199.72177 115.42175 c
199.13686 115.66441 198.50388 115.79031 197.87064 115.78996 c
197.23738 115.79031 196.6044 115.66441 196.0195 115.42175 c
195.43431 115.17974 194.89771 114.82119 194.45018 114.37316 c
194.00215 113.92564 193.6436 113.38902 193.4016 112.80385 c
193.15894 112.21893 193.03302 111.58596 193.03337 110.95271 c
193.03302 110.31946 193.15894 109.68649 193.4016 109.10157 c
193.6436 108.51639 194.00215 107.97978 194.45018 107.53225 c
194.89771 107.08423 195.43431 106.72568 196.0195 106.48367 c
196.6044 106.24101 197.23738 106.1151 197.87064 106.11546 c
198.50388 106.1151 199.13686 106.24101 199.72177 106.48367 c
200.30695 106.72568 200.84355 107.08423 201.29109 107.53225 c
201.73911 107.97978 202.09766 108.51639 202.33968 109.10157 c
202.58234 109.68649 202.70824 110.31946 202.70789 110.95271 c
h
202.70789 110.95271 m
f
0 0 0 sc
225.96085 85.942451 m
225.96118 86.575699 225.83528 87.208672 225.59262 87.793587 c
225.35062 88.378769 224.99207 88.915375 224.54404 89.362907 c
224.09651 89.810928 223.55991 90.169479 222.97472 90.411491 c
222.3898 90.654144 221.75684 90.780052 221.12358 90.779701 c
220.49033 90.780052 219.85736 90.654144 219.27245 90.411491 c
218.68727 90.169479 218.15065 89.810928 217.70312 89.362907 c
217.25511 88.915375 216.89656 88.378769 216.65454 87.793587 c
216.41188 87.208672 216.28598 86.575699 216.28633 85.942451 c
216.28598 85.309196 216.41188 84.676224 216.65454 84.091309 c
216.89656 83.506134 217.25511 82.969521 217.70312 82.521996 c
218.15065 82.073967 218.68727 81.715424 219.27245 81.473412 c
219.85736 81.230751 220.49033 81.104843 221.12358 81.105194 c
221.75684 81.104843 222.3898 81.230751 222.97472 81.473412 c
223.55991 81.715424 224.09651 82.073967 224.54404 82.521996 c
224.99207 82.969521 225.35062 83.506134 225.59262 84.091309 c
225.83528 84.676224 225.96118 85.309196 225.96085 85.942451 c
h
225.96085 85.942451 m
f
0.9995597 0 0 sc
261.89203 100.68421 m
261.8924 101.31747 261.76648 101.95044 261.5238 102.53535 c
261.2818 103.12053 260.92325 103.65714 260.47522 104.10467 c
260.02771 104.5527 259.49109 104.91125 258.90591 105.15325 c
258.32101 105.39591 257.68802 105.52182 257.05478 105.52147 c
256.42154 105.52182 255.78856 105.39591 255.20364 105.15325 c
254.61845 104.91125 254.08185 104.5527 253.63432 104.10467 c
253.18629 103.65714 252.82774 103.12053 252.58574 102.53535 c
252.34308 101.95044 252.21718 101.31747 252.21751 100.68421 c
252.21718 100.05096 252.34308 99.417992 252.58574 98.833076 c
252.82774 98.247894 253.18629 97.711288 253.63432 97.263756 c
254.08185 96.815735 254.61845 96.457184 255.20364 96.215172 c
255.78856 95.972519 256.42154 95.846611 257.05478 95.846962 c
257.68802 95.846611 258.32101 95.972519 258.90591 96.215172 c
259.49109 96.457184 260.02771 96.815735 260.47522 97.263756 c
260.92325 97.711288 261.2818 98.247894 261.5238 98.833076 c
261.76648 99.417992 261.8924 100.05096 261.89203 100.68421 c
h
261.89203 100.68421 m
f
242.98828 50.307915 m
242.98863 50.941162 242.86272 51.574139 242.62007 52.15905 c
242.37805 52.744232 242.0195 53.280842 241.57149 53.728371 c
241.12395 54.176392 240.58734 54.534943 240.00217 54.776955 c
239.41725 55.019611 238.78427 55.145519 238.15103 55.145168 c
237.51778 55.145519 236.8848 55.019611 236.29988 54.776955 c
235.71471 54.534943 235.1781 54.176392 234.73058 53.728371 c
234.28255 53.280842 233.924 52.744232 233.68198 52.15905 c
233.43933 51.574139 233.31342 50.941162 233.31377 50.307915 c
233.31342 49.674664 233.43933 49.041691 233.68198 48.456776 c
233.924 47.871593 234.28255 47.334988 234.73058 46.887459 c
235.1781 46.439434 235.71471 46.080883 236.29988 45.838871 c
236.8848 45.596214 237.51778 45.47031 238.15103 45.470657 c
238.78427 45.47031 239.41725 45.596214 240.00217 45.838871 c
240.58734 46.080883 241.12395 46.439434 241.57149 46.887459 c
242.0195 47.334988 242.37805 47.871593 242.62007 48.456776 c
242.86272 49.041691 242.98863 49.674664 242.98828 50.307915 c
h
242.98828 50.307915 m
f
0 0 0 sc
0 i
1 0 0 -1 -105.23919 283.66156 cm
330.75348 265.80212 m
(!)s
0.60000002 i
1 0.14939362 0 sc
412.10187 182.97734 m
412.10547 176.45694 410.80905 169.93938 408.31049 163.91669 c
405.81854 157.89122 402.12665 152.36591 397.51349 147.75783 c
392.9054 143.14465 387.38007 139.45276 381.35461 136.96083 c
375.33194 134.46225 368.81436 133.16583 362.29398 133.16943 c
355.77356 133.16583 349.25598 134.46225 343.23331 136.96083 c
337.20786 139.45276 331.68253 143.14465 327.07446 147.75783 c
322.46127 152.36591 318.76938 157.89122 316.27747 163.91669 c
313.77887 169.93938 312.48245 176.45694 312.48605 182.97734 c
312.48245 189.49776 313.77887 196.01532 316.27747 202.03801 c
318.76938 208.06346 322.46127 213.58878 327.07446 218.19685 c
331.68253 222.81003 337.20786 226.50194 343.23331 228.99385 c
349.25598 231.49243 355.77356 232.78886 362.29398 232.78526 c
368.81436 232.78886 375.33194 231.49243 381.35461 228.99385 c
387.38007 226.50194 392.9054 222.81003 397.51349 218.19685 c
402.12665 213.58878 405.81854 208.06346 408.31049 202.03801 c
410.80905 196.01532 412.10547 189.49776 412.10187 182.97734 c
h
412.10187 182.97734 m
S
393.19812 233.35365 m
393.20172 226.83324 391.9053 220.31567 389.40674 214.29298 c
386.91479 208.26753 383.2229 202.74222 378.60971 198.13412 c
374.00165 193.52095 368.47632 189.82906 362.45087 187.33713 c
356.42819 184.83855 349.91061 183.54213 343.3902 183.54573 c
336.86981 183.54213 330.35223 184.83855 324.32956 187.33713 c
318.30411 189.82906 312.77878 193.52095 308.17068 198.13412 c
303.55753 202.74222 299.86563 208.26753 297.37369 214.29298 c
294.87512 220.31567 293.5787 226.83324 293.58231 233.35365 c
293.5787 239.87405 294.87512 246.39162 297.37369 252.41431 c
299.86563 258.43976 303.55753 263.96509 308.17068 268.57315 c
312.77878 273.18634 318.30411 276.87823 324.32956 279.37015 c
330.35223 281.86874 336.86981 283.16516 343.3902 283.16156 c
349.91061 283.16516 356.42819 281.86874 362.45087 279.37015 c
368.47632 276.87823 374.00165 273.18634 378.60971 268.57315 c
383.2229 263.96509 386.91479 258.43976 389.40674 252.41431 c
391.9053 246.39162 393.20172 239.87405 393.19812 233.35365 c
h
393.19812 233.35365 m
S
0 0 0 sc
0 i
/F2.1[ 36 0 0 -36 0 0]sf
212.77766 207.42712 m
(!)s
420.80328 207.31386 m
(!)s
0.60000002 i
0.9995597 0 0 sc
CM
410.47595 85.942451 m
410.47632 86.575699 410.3504 87.208672 410.10776 87.793587 c
409.86572 88.378769 409.50717 88.915375 409.05917 89.362907 c
408.61163 89.810928 408.07501 90.169479 407.48984 90.411491 c
406.90494 90.654144 406.27194 90.780052 405.6387 90.779701 c
405.00546 90.780052 404.3725 90.654144 403.78757 90.411491 c
403.20239 90.169479 402.66577 89.810928 402.21826 89.362907 c
401.77023 88.915375 401.41168 88.378769 401.16968 87.793587 c
400.927 87.208672 400.80112 86.575699 400.80145 85.942451 c
400.80112 85.309196 400.927 84.676224 401.16968 84.091309 c
401.41168 83.506134 401.77023 82.969521 402.21826 82.521996 c
402.66577 82.073967 403.20239 81.715424 403.78757 81.473412 c
404.3725 81.230751 405.00546 81.104843 405.6387 81.105194 c
406.27194 81.104843 406.90494 81.230751 407.48984 81.473412 c
408.07501 81.715424 408.61163 82.073967 409.05917 82.521996 c
409.50717 82.969521 409.86572 83.506134 410.10776 84.091309 c
410.3504 84.676224 410.47632 85.309196 410.47595 85.942451 c
h
410.47595 85.942451 m
f
[] 0 d
1 0.14939362 0 sc
1 0 0 -1 -105.23919 283.66156 cm
560.68579 197.71912 m
560.68939 191.1987 559.39301 184.68114 556.89441 178.65845 c
554.40247 172.633 550.71057 167.10768 546.09741 162.4996 c
541.48932 157.88641 535.96399 154.19452 529.93854 151.70259 c
523.91583 149.20401 517.39832 147.90759 510.8779 147.91119 c
504.35748 147.90759 497.83994 149.20401 491.81723 151.70259 c
485.79178 154.19452 480.26645 157.88641 475.65839 162.4996 c
471.0452 167.10768 467.3533 172.633 464.86139 178.65845 c
462.36279 184.68114 461.06638 191.1987 461.06998 197.71912 c
461.06638 204.23952 462.36279 210.75708 464.86139 216.77977 c
467.3533 222.80522 471.0452 228.33055 475.65839 232.93863 c
480.26645 237.5518 485.79178 241.2437 491.81723 243.73563 c
497.83994 246.23421 504.35748 247.53062 510.8779 247.52702 c
517.39832 247.53062 523.91583 246.23421 529.93854 243.73563 c
535.96399 241.2437 541.48932 237.5518 546.09741 232.93863 c
550.71057 228.33055 554.40247 222.80522 556.89441 216.77977 c
559.39301 210.75708 560.68939 204.23952 560.68579 197.71912 c
h
560.68579 197.71912 m
S
0 0 0 sc
CM
397.5835 111.91901 m
397.58386 112.55226 397.45795 113.18523 397.21527 113.77015 c
396.97327 114.35532 396.61472 114.89194 396.16669 115.33946 c
395.71918 115.78749 395.18256 116.14604 394.59738 116.38805 c
394.01248 116.63071 393.37949 116.75661 392.74625 116.75626 c
392.11301 116.75661 391.48001 116.63071 390.89511 116.38805 c
390.30994 116.14604 389.77332 115.78749 389.32578 115.33946 c
388.87778 114.89194 388.51923 114.35532 388.27719 113.77015 c
388.03455 113.18523 387.90863 112.55226 387.909 111.91901 c
387.90863 111.28576 388.03455 110.65279 388.27719 110.06787 c
388.51923 109.48269 388.87778 108.94608 389.32578 108.49855 c
389.77332 108.05053 390.30994 107.69198 390.89511 107.44997 c
391.48001 107.20731 392.11301 107.08141 392.74625 107.08176 c
393.37949 107.08141 394.01248 107.20731 394.59738 107.44997 c
395.18256 107.69198 395.71918 108.05053 396.16669 108.49855 c
396.61472 108.94608 396.97327 109.48269 397.21527 110.06787 c
397.45795 110.65279 397.58386 111.28576 397.5835 111.91901 c
h
397.5835 111.91901 m
f
376.72687 84.125565 m
376.7272 84.758812 376.60132 85.391785 376.35864 85.9767 c
376.11664 86.561882 375.75809 87.098488 375.31006 87.546021 c
374.86255 87.994041 374.32593 88.352592 373.74075 88.594604 c
373.15582 88.837265 372.52286 88.963165 371.88962 88.962822 c
371.25635 88.963165 370.62338 88.837265 370.03848 88.594604 c
369.45331 88.352592 368.91669 87.994041 368.46915 87.546021 c
368.02115 87.098488 367.6626 86.561882 367.42056 85.9767 c
367.17792 85.391785 367.052 84.758812 367.05237 84.125565 c
367.052 83.49231 367.17792 82.859337 367.42056 82.274429 c
367.6626 81.689247 368.02115 81.152634 368.46915 80.705109 c
368.91669 80.257088 369.45331 79.898537 370.03848 79.656525 c
370.62338 79.413864 371.25635 79.287956 371.88962 79.288307 c
372.52286 79.287956 373.15582 79.413864 373.74075 79.656525 c
374.32593 79.898537 374.86255 80.257088 375.31006 80.705109 c
375.75809 81.152634 376.11664 81.689247 376.35864 82.274429 c
376.60132 82.859337 376.7272 83.49231 376.72687 84.125565 c
h
376.72687 84.125565 m
f
429.1228 64.686447 m
429.12314 65.319695 428.99725 65.952667 428.75458 66.537582 c
428.51257 67.122765 428.15402 67.65937 427.70599 68.106903 c
427.25848 68.554924 426.72186 68.913475 426.13669 69.155487 c
425.55176 69.398148 424.91879 69.524048 424.28555 69.523705 c
423.65228 69.524048 423.01932 69.398148 422.43442 69.155487 c
421.84921 68.913475 421.31262 68.554924 420.86508 68.106903 c
420.41705 67.65937 420.0585 67.122765 419.8165 66.537582 c
419.57385 65.952667 419.44794 65.319695 419.4483 64.686447 c
419.44794 64.0532 419.57385 63.420223 419.8165 62.835308 c
420.0585 62.25013 420.41705 61.71352 420.86508 61.265991 c
421.31262 60.817966 421.84921 60.459419 422.43442 60.217407 c
423.01932 59.974747 423.65228 59.848843 424.28555 59.849194 c
424.91879 59.848843 425.55176 59.974747 426.13669 60.217407 c
426.72186 60.459419 427.25848 60.817966 427.70599 61.265991 c
428.15402 61.71352 428.51257 62.25013 428.75458 62.835308 c
428.99725 63.420223 429.12314 64.0532 429.1228 64.686447 c
h
429.1228 64.686447 m
f
437.35629 98.96656 m
437.35663 99.599815 437.23071 100.23279 436.98807 100.8177 c
436.74606 101.40288 436.38751 101.93949 435.93948 102.38702 c
435.49194 102.83504 434.95535 103.19359 434.37015 103.4356 c
433.78525 103.67826 433.15228 103.80417 432.51901 103.80382 c
431.88577 103.80417 431.25281 103.67826 430.66788 103.4356 c
430.0827 103.19359 429.54611 102.83504 429.09857 102.38702 c
428.65054 101.93949 428.29199 101.40288 428.04999 100.8177 c
427.80731 100.23279 427.68143 99.599815 427.68176 98.96656 c
427.68143 98.333313 427.80731 97.70034 428.04999 97.115425 c
428.29199 96.530243 428.65054 95.993637 429.09857 95.546104 c
429.54611 95.098083 430.0827 94.739532 430.66788 94.49752 c
431.25281 94.25486 431.88577 94.12896 432.51901 94.129303 c
433.15228 94.12896 433.78525 94.25486 434.37015 94.49752 c
434.95535 94.739532 435.49194 95.098083 435.93948 95.546104 c
436.38751 95.993637 436.74606 96.530243 436.98807 97.115425 c
437.23071 97.70034 437.35663 98.333313 437.35629 98.96656 c
h
437.35629 98.96656 m
f
0 i
1 0 0 -1 -105.23919 283.66156 cm
/F1.1[ 18 0 0 -18 0 0]sf
495.75977 233.32254 m
(!)s
0.60000002 i
CM
15.639634 14.041813 m
15.639984 14.675064 15.514078 15.308037 15.27142 15.89295 c
15.029408 16.478132 14.670858 17.01474 14.222835 17.462269 c
13.775307 17.910292 13.238698 18.268843 12.653517 18.510853 c
12.068604 18.753511 11.43563 18.879417 10.80238 18.879068 c
10.169128 18.879417 9.5361557 18.753511 8.9512424 18.510853 c
8.3660612 18.268843 7.829452 17.910292 7.3819237 17.462269 c
6.9339004 17.01474 6.5753498 16.478132 6.3333387 15.89295 c
6.0906811 15.308037 5.9647746 14.675064 5.9651246 14.041813 c
5.9647746 13.408563 6.0906811 12.775589 6.3333387 12.190676 c
6.5753498 11.605494 6.9339004 11.068886 7.3819237 10.621358 c
7.829452 10.173334 8.3660612 9.814784 8.9512424 9.572773 c
9.5361557 9.3301144 10.169128 9.2042084 10.80238 9.2045584 c
11.43563 9.2042084 12.068604 9.3301144 12.653517 9.572773 c
13.238698 9.814784 13.775307 10.173334 14.222835 10.621358 c
14.670858 11.068886 15.029408 11.605494 15.27142 12.190676 c
15.514078 12.775589 15.639984 13.408563 15.639634 14.041813 c
h
15.639634 14.041813 m
f
0 i
1 0 0 -1 -105.23919 283.66156 cm
/F3.1[ 14 0 0 -14 0 0]sf
126.47234 274.28448 m
(!"#$)[ 14.000000 14.000000 14.000000 0.000000 ] xS
0.60000002 i
0.9995597 0 0 sc
CM
114.23776 14.041813 m
114.23811 14.675064 114.11221 15.308037 113.86954 15.89295 c
113.62753 16.478132 113.26898 17.01474 112.82096 17.462269 c
112.37344 17.910292 111.83682 18.268843 111.25164 18.510853 c
110.66673 18.753511 110.03375 18.879417 109.40051 18.879068 c
108.76726 18.879417 108.13428 18.753511 107.54937 18.510853 c
106.96419 18.268843 106.42757 17.910292 105.98005 17.462269 c
105.53203 17.01474 105.17348 16.478132 104.93147 15.89295 c
104.6888 15.308037 104.5629 14.675064 104.56325 14.041813 c
104.5629 13.408563 104.6888 12.775589 104.93147 12.190676 c
105.17348 11.605494 105.53203 11.068886 105.98005 10.621358 c
106.42757 10.173334 106.96419 9.814784 107.54937 9.572773 c
108.13428 9.3301144 108.76726 9.2042084 109.40051 9.2045584 c
110.03375 9.2042084 110.66673 9.3301144 111.25164 9.572773 c
111.83682 9.814784 112.37344 10.173334 112.82096 10.621358 c
113.26898 11.068886 113.62753 11.605494 113.86954 12.190676 c
114.11221 12.775589 114.23811 13.408563 114.23776 14.041813 c
h
114.23776 14.041813 m
f
0 0 0 sc
0 i
1 0 0 -1 -105.23919 283.66156 cm
225.33179 274.19177 m
(%&)[ 14.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
