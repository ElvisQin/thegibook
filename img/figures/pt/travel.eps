%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 375 138
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 375 138
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PILSMC+Times-Roman
%!FontType1-1.0: PILSMC+Times-Roman 1.0000.0.0000
14 dict begin/FontName /PILSMC+Times-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /delta put
dup 34 /theta put
dup 35 /x put
dup 36 /space put
dup 37 /plus put
dup 38 /d put
dup 39 /t put
dup 40 /a put
dup 41 /n put
dup 42 /parenleft put
dup 43 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -416 1 index div -877 2 index div 3482 3 index div 2604 5 -1 roll div]cvx def
/sfnts [<



079909190C4D52182B4E10F44DF43CFD3CF44E456544E6003F4DF43CFD3CE4313001331121152111231121352101FD8C01BEFE428CFE4001C0040BFE408CFE4101BF8C000003004BFFF1038903B4000B00400041010C4066EA26FB260207274606020C239A0A9A39A90AA90BA80DBC09CA09CB2FCB30DC09DC30DA31EC09ED300F57082C312A171C1F141F00330F0F010F49322E3639312C0F0A00061408143325072E3E360B083E3D0B4107413927100B2F412A403179292F2AAF2A022AB80200400A4318271B442242044440B80201B143422FCCF4EDF4FDE410F65D3CE6111239FD3CE42F003F3FED3FED3FED11121739111239762F5D18EDCC111239390111123931304379403B3E3F23280C17010702250D2606261226010E042600073E041E001524171E0016171326101E012728030C00260101000E0F053F081E001127141E01002B2B103C103C2B01103C2B103C2B2B2B2B2B2B2B81818181005D01715D010607061514171633323635243736253534272623220706151416151407062322263534363332171615111417163332363715060706232226270607062322263501024B734B903C27304279FE00915C011314226B332E2E0A25151D2D30ADA7C24525080D29171E252025383A443D034C365B52567E017D022A262E59715B2B1C4A396B613C67556628431A1B2F0C390838160D3B2446997E4584FE6F3A16270E1B34271926583D422036795D02ED00000000020031FFED03ED0576002D003A00DB406D9828A928CB28C92CE32CF42C06006D2E7C2E8B2E9B2EAB2BAC2EBA2BBB2ECD2BCC2EC638DC2BDB2ED5380E032B4C290223080BDA04500A1C0B90111E2017501D1C1E92213231302F0417042227322F23170305343A04122D110134332D073A3E2727210B22042F122740170117B80200B63C37449E2A012AB80201B13C3B2FCCF45DED10F65DF4FD3C003F3C10ED3FED3F12393911121739123901111217390010F5EDFC01F50010F5EDFC01F53130437940183539282C352C3726003928372600362B34260138293A2600002B2B012B2B818100715D01715D001716171134262322060735373E0137363717070E01150314163332363715060F0127350607062322023534123312363511342623220615141633022E3D28251B330C121F522D5A221025060201020220450B160B068B9D0738294960AAD3FDB773608B427E8C959403B1201525013E3D2E020321150C1A0C050E026939793BFCCF413401022102303B097B3D1A2D0107ADD90137FCA85C2901AD826BDFA3A1FC00020021000003E303AE0033003400B74059191A4D1A02960EA60E021A081F2110321F332F213F2105253F1C2120220343001C3320241C3A1C2020232E3A1C3220230C20043A0B1C0C900F2E2D251C1304030733120F293E17270F0733322120




636820B003266165B09B236544B081234420B15B9C4565234520B003266062636820B003266165B09C236544B05B2344B1009C455458B19C406544B25B405B4523614459B3868D7145456523456023456560234560B089766818B080622020B1718D4565234520B003266062636820B003266165B08D236544B071234420B186454565234520B003266062636820B003266165B045236544B0862344B10045455458B145406544B286408645236144592B2B2B2B4569534273737373737373737373737373737373737373737475755E73735E00
00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/a 5 def
/d 6 def
/n 7 def
/t 8 def
/x 9 def
/macron 10 def
/dcroat 11 def
/delta 12 def
/theta 13 def
/dong 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-416 -877 3482 2604}def
/UniqueID 4416489 def
currentdict currentfile eexec

71213A9E15C7390D39796CA0974C7819562A8BE655C753C453207EE168F38FC191F72DF1BEC6619B5CE3B541C2EF468DD5CAC019304FF1035326710845748CAE83E4490060401E0CA461444D6B24C03D0F8A4B6C3A260778E4CD98484C282349AD7BF48BAFAFFAA2BED3F8C732E1490BD2A49FA28DD8E89DBE3C6A2382CD4B55D9A6EFDF491285AAA2F5036B3DAF750341D6BDD5ACBB2246340947B01C29D4D29FE6A3C3A69518F64C8381A952BCF8200581ECEBFD4EB7C4D30A978D6C774915A66B494EE16741398656D986284A13B380DB2A0336E681770F9ABCBBA8CFE2AA4CFDFDAFF2226C2569428F59B48E7189B09F30A3CC5D08FB76E3AA94E124CFBE6470F2C21D9EC488A3810C7F3387FDD73B51C09BC873030CBFC4DCBC6249603EC01C282F7F8DECD9C9592336642EF3C53D58C84A7E6671176AD4E13742170B3D1A5E26BA7EA45B0EB4BD807E2484EC96596A32B492155F584EB6F3789DF0423BDE7FA19F26CE10097AE2FB78189694C1E038EEEC75165D5648221BF925ABB779500891BE1BBCBDE781BFACA8AA849894A4F657D5D8A8F80EDEA7268060F925373DC491A860B8708D222B371E4FB0AFD91F26AF1A581FB08C4A95763503B712D6C6CF78568CCD2DFEB047811B0E554FE71FC0B0709AC5FCA34BF1C646231C7AF5CFDC1F18644FB73BECF8093DBC9755B64469A05546A1FFE5A4BB891730214D613A1B4C0FB3104DC769DB41B2197D1FCE9F5847FF2F9D6A22508121ED6D1304BEEE4D6F6C691B3B9E2A599264FA8926E40B20956E1FE93F010E89085DB63E398A40B4706A018EC7135F8492C788D2020DCCB23F850464A5097FAC9ABBC10C0113C2978690AA0F46A303186195A034EC6E10156D3D7E202873BC1276130F49757A92C724F2BB9D6851213ACA4A6607C625B531F02FA2199CCF2D2E267AD689FCDC6E9888A0BC04FEEB13D52093B0E8FB88FABF991C5B86F52200AD452B51389768DBEF6F79172F08C54385E3EED9725ECEF74AC5CCB7429E9352712EE28413F88BA9267D0BCD0D792C63C354BA2E22D9571CC92C173198E3FBED14D10114D0C835A8479740D26F34448FD5435FE0B6697702C9A49F312751EB56D0103FB6DA115F4289DBA35016C078141DE4C77BFC20D833D3EE09A01521435D8E124B71A47B0467A7B6EA48AD9D12C765C803792EA65D05DB4E72864F7F4E460823DFE39C91462E785BD40139EC753E790F3758E709B6F92D67A7C1AFC524B3476396C7BEE4D2CFAA56B90430D375F55A0E100BC738C1F00F188A3713359C3D55ED929AFA123B8836280640BE9B1B42DBCDCBD7D187973BF3314F3585110BBFF70FD74650EC91A7A64E096D7C9D6ACECD91BB7F5756761468A2B45CC993B30FD0DD76BFB0FBA2ADC65A40D8EFE0349EEC82EF19FB90CEF1D18FF9B9E00F5B98E6124AC299A9FA

59544DB227B0606A75E8A39AEDD12604947D07BD74DD7A63E79614654BF5B0A6AD82493740BDB1CB5825F6A94321A0DEE84AF285BECCF0E7BA9535C03DAA41D8D92D60780AD1B9992DF5CEE04C3741C6DF362CC67932E88C0FED70FDD14932A5D434A70E32769D9FCD8DE6C8DBA2C88A7AE651DE1B7975C22DEA6519880A3EE79A77B69A87BEE0CECF09ABD93EF92378877364896ECD24F03E6B6EEBE5E862922308F7AAB6F9E14DFBE796712EAFCE4F4F00
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/PILSMC+Times-Roman cguidfix
/F1.1/PILSMC+Times-Roman renmfont
%RBIBeginFontSubset: BYSHMV+STSongti-SC-Regular
%!FontType1-1.0: BYSHMV+STSongti-SC-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /BYSHMV+STSongti-SC-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid1029 put
dup 34 /gid1050 put
dup 35 /gid1479 put
dup 36 /gid1782 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -132 1 index div -787 2 index div 1015 3 index div 936 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/gid1029 1 def
/gid1050 2 def
/gid1479 3 def
/gid1782 4 def
/gid42949 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-132 -787 1015 936}def
/UniqueID 4208099 def
currentdict currentfile eexec

A5857878E4C1626CD5D08E1DFC2A93F9F50F2C1CB3B9CCFA15BB11F15B7BB129458111A4A58444A9AEDA78FF9EF1346DCC00E64771D5E5D170AF21DBCFF93C3024AB9ABC3F8A46C3518AA986672D8892F523AC3C60B80A5F2C7BA481B14A6CB9B0EBE939FB748F92C882B1BB4374BDCC8CA81AEC5EE81348A8D5E15BAC7566AAC92695EE892ABBBE7387F814EC24AA80A18DB22727448024A582F8C2D6BE8AE9FA72A0FEC4AA4FE6A4AF0E8476ECF55CB2D76A224B4B7CBED7866DDD1F820D7DDC850C5269A6F7EA532AA8EEC1F76069F0CF07ED50B609B314B0BD7526B046DB98B765AB20C48F4718CFA10132AA088AC066D52CDA12981767D068876533882EC36B81E97491E3D45B7716A1A217AEE0DB24BC5EEA326EE03EF0D30A05F5760937ECA969733A96CA23312B6737AA4E0B3923E2CC0CA29D4D390809BB31DB381C730568FE00EBFED3194970BCB325E89817B181EFD57211974209905DCEEF44BF04AECE75C10C4B118B27E95A7DBE38773FF59DF19808CF84A9CC7AD301614BF3371B8513BA92E5364D708A19D10101C61B390978A1B889950E7A5FAD223F842D57ECEE7B44824E9AB4FB2B0982848B7DFF7847C92D28DEB5796C2A874DF8012F12769CD18E411534BDF234B065931CE9356BF0917F9B08E69F84B512883FB7233264C4CA152EFC2A573B8DC55118D1FA9B59E5D45447D5DD5C27F270C7D0C62E37526C9AB63D5935ECBCDEBA8C75D45C9BF151D480742A6CB333F75E0F68181E2C0B7D70C088DA8ADF9F993A187B1EB5B187EDF1C29C50F74CCB20F5DFFB8DB31C52C07F1B84058870E2A89BCEBD1FC9A4FB307782195E290F038D545E00A55CA292E0027A67D8B3257D2D979E61308210D4F9D5A96BA5B33BCA348CDD3CF2BAE4147CBE31AFD196E63DDE557241B9C38E67F8579DE2667CD3D3C750311AC5479FF6495595C0DC5505FF7A4FA97B72206417C5BD206CA2B436065C75624C5286B0E0FE03CB19315A039247C6AC5661FB72ECDE052560AE7A3F40069544A0B3AC84F7E6ECB7A9102869400A98E62F26EB963FDADCA0D3FC0C03F9B49173FBAA37C39CE4DE7105C828D8E2B17B5097037C44B692496728A75580FCD3E36F9A8B2B08B41C1B0B3B8C02E26121784E3B0758CA4A05753871DEB032E20A2BFF64F62B0FE7EA61D5D1196D56E05C5A1CE87619E59641F79E2F9CA43F3415363A9464CF6030C1D03F7CD31F64B95FAA76757E67866B5F41C747E4EF16F93C5BC1FD3FA09ED8FEBE4325CC0BCE4FC2E64DA454D3493A4797549F38703625C0968F6C2ECDD243F3167824BD0DA6E8D7B7CC1F6ED59EE0EC1592D18CAE65934BE8193815CFA4B84399A6E9BD4FDFB3B7FFB3A44E5240F278D51C3E60006303F64F5B3DD982F5EEDDDF57D88BEFBDAECD05005DF78CF4316190D564489D716CCA5EB98D14CD
42A2E501EFB79F1C3E033C14BFA2F3CC95FBE1B4F80EF2555EC3383518D80BBAA113FBB40BDD73F3361DD288CBB03DAF747BA1D2229028A94351345A2FF26CA2BDF6B9DB028AEFB751241687A1905F4C1BC2576B48CDBDC83F76F2EA9BCC9B723955015CC17B325209C007EAD58BEFF871CC7446D0944500FD7CCE3C87E892361E1F746ED531C87A9D92F5DC955CCCDADE419C02E6F00A86FA92217DD6D3C663D70E9AC3924A4310F30CA8EC7CE11AD18FCCB77695552BF0CD1BF91A9145CDD49894C61133ED8627DDA8EF2D9ABF480C1A2ADB8E09B59DC0168DC4187410E9297F23A58A407EFD0308E30FCB08F2715FC5A2F189A79AAD371538C7C35197D9CD5AFF451939B584331D7AE44297AA529EF2E39A5C675A6D35FE5092BFC942509F7280E025D423A3D1675F939ABEB7F335A1BEC0CD04FF9222D23E55451BEEF1472A4A1A51F7FB5ED665D729914A6CADE500B9FCD86AB34FFAE354E6E8CF62EB02B23450FC8D9CB22F45CC7B9AAFE2E6E853B3D276EE1557DE53DD423B5630D8C26289542A3B45D061FA301424F077014FF0781C09730916CED4C61CE5720D1EC87258530EE378A372FBE942EB5D894A501EB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/BYSHMV+STSongti-SC-Regular cguidfix
/F2.1/BYSHMV+STSongti-SC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
q
0 0 374.32416 137.47871 rc
1 0 0 -1 -67.299469 181.96463 cm
/F1.1[ 14 0 0 -14 0 0]sf
376.50024 68.37159 m
(!")[ 7.786133 0.000000 ] xS
2 J
0.60000002 i
100.36802 126.10159 m
398.6098 51.510418 l
S
CM
338.60324 132.27818 m
331.97421 127.7998 l
330.64645 133.10861 l
h
338.60324 132.27818 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
405.90271 49.68644 m
399.27368 54.164822 l
397.94592 48.856018 l
h
405.90271 49.68644 m
S
1 w
99.959663 154.70674 m
409.87769 154.70674 l
S
CM
350.09576 27.257883 m
342.57825 24.521723 l
342.57825 29.994043 l
h
350.09576 27.257883 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
417.39523 154.70674 m
409.87769 157.4429 l
409.87769 151.97058 l
h
417.39523 154.70674 m
S
1 w
99.577316 56.561569 m
99.577316 161.89522 l
S
CM
32.277851 132.92059 m
35.014011 125.40306 l
29.541689 125.40306 l
h
32.277851 132.92059 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
99.577316 49.044029 m
102.31348 56.561569 l
96.841156 56.561569 l
h
99.577316 49.044029 m
S
1 w
317.64056 53.559174 m
317.64056 161.89522 l
S
CM
250.34108 135.92299 m
253.07726 128.40546 l
247.60492 128.40546 l
h
250.34108 135.92299 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
317.64056 46.041634 m
320.37671 53.559174 l
314.90439 53.559174 l
h
317.64056 46.041634 m
S
1 w
107.78112 159.41031 m
307.98544 159.41031 l
S
CM
32.964115 22.554316 m
40.481655 25.290476 l
40.481655 19.818153 l
h
248.20352 22.554316 m
240.68597 19.818153 l
240.68597 25.290476 l
h
248.20352 22.554316 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
100.26358 159.41031 m
107.78112 156.67415 l
107.78112 162.14647 l
h
315.50299 159.41031 m
307.98544 162.14647 l
307.98544 156.67415 l
h
315.50299 159.41031 m
S
1 w
93.406548 135.00966 m
93.406548 144.91017 l
S
CM
26.10708 54.472515 m
28.843243 46.954971 l
23.37092 46.954971 l
h
26.10708 29.536917 m
23.37092 37.054459 l
28.843243 37.054459 l
h
26.10708 29.536917 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
93.406548 127.49211 m
96.142708 135.00966 l
90.670387 135.00966 l
h
93.406548 152.4277 m
90.670387 144.91017 l
96.142708 144.91017 l
h
93.406548 152.4277 m
S
1 w
320.76926 80.333855 m
320.76926 144.52908 l
S
CM
253.46979 109.14832 m
256.20596 101.63078 l
250.73363 101.63078 l
h
253.46979 29.917999 m
250.73363 37.435539 l
256.20596 37.435539 l
h
253.46979 29.917999 m
f
0.25 w
1 0 0 -1 -67.299469 181.96463 cm
320.76926 72.816315 m
323.5054 80.333855 l
318.03308 80.333855 l
h
320.76926 152.04663 m
318.03308 144.52908 l
323.5054 144.52908 l
h
320.76926 152.04663 m
S
1 w
[
4
4
] 0 d
100.06014 127.49426 m
180.91145 127.49426 l
S
176.51306 108.1582 m
180.76335 124.5379 180.22182 128.54128 179.43279 128.50664 c
S
318.73993 73.30854 m
399.59125 73.30854 l
S
395.10608 52.841442 m
399.35638 69.221146 398.81482 73.22451 398.02579 73.18988 c
S
0 i
184.886 124.17184 m
(!")[ 7.786133 0.000000 ] xS
72.299469 144.72871 m
(!#)[ 7.786133 0.000000 ] xS
323.34204 119.4874 m
(!#$%$&$'\(\)*!"+)[ 7.786133 7.000000 3.500000 7.895508 3.500000 7.000000 3.500000 3.889648 6.213867 7.000000 4.662109 7.786133 7.786133 0.000000 ] xS
199.17224 177.74522 m
(&)s
/F2.1[ 14 0 0 -14 0 0]sf
338.46304 171.6021 m
(!"#$)[ 14.000000 14.000000 14.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
