%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 980 269
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 980 269
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MWKLUM+TimesNewRomanPS-BoldMT
%!FontType1-1.0: MWKLUM+TimesNewRomanPS-BoldMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /MWKLUM+TimesNewRomanPS-BoldMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /parenleft put
dup 34 /a put
dup 35 /parenright put
dup 36 /b put
dup 37 /c put
dup 38 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -628 2 index div 4096 3 index div 2101 5 -1 roll div]cvx def
/sfnts [<

0127012C013F015701580177018A019301A401C601E101E401FC0200020C02220222022A0236024A025C028202EC02FC030A032303410378039703D203FA04790532053205AB05B505F006E4072508CCFC9BFDDEFE00FE69FE96FE9BFF3500030006000E00130019003400420048004A0057006400710071007200760077007A007A0083009C00AF00AF00B200BB00C800CC00CF00CF00DB00DC00DF00E400E400E400E900EB00F400FD00FE01020105010501080108011B01220123013001370143015B016001650178017801780178017B0182018901980198019B019E01A101A601D101D201D301DF01E301F502000200022D02410247024A0250025B025D025D025F02630281028B02B402B402CE02D602DB02E202FA03100311031F0327034503670388038A03B003B403D403D5042604410448046B04C704D1053205480549055F0563058B05A105A305C205CA05E405FF069306A206B806E8070A073607500754078907A907BB07DC07FF08270120014D011B0129000000000000000000000093015B042F029001FF02B800DB00BE027403CB029401AB000000000000000000000000058A038A0364005F02B803BD029D7C9003E203AC02820000044400000000003D010A00CC00BC00CC05D3041505E800C7021A00EE00000194036102BE029902180136033B048504CC0050007905A305A302DF020702AF000001EB0064005F0055011900F2045600EF00C800CF058A0143014602DE01AB02C6024A005D00D800A402BB009900A0006501370274036400B500FA009101B9032001B60025007F00D000EC00E000000000000000000000042FFD42023F06180276063A013701B90151FFC70229FFEB023F02E1018500DB03FA01900156014E012F00A600E300BB00D50134011F04FE041B00D100E4011E009B00CD00E700B300E200CA042400B800F500B90334005A04E00123012FFDC9FE440574038301F602410002001700500015004F001700A80051009800520049006E000E00AF017B017B019C006A008300EB00CD0122000005D306DA009A008F00BA0315002503A5028002FF03C80420009200E0034C009B007D00F8011C013400A8006D006900000420FFE6FEA4006A006A003800380162015A0044006D0048001EFF6D00A600A600400040FF5CFF990559052B00CE014C011500BF0140011800C800960509FEED004800B4009500DB0048018B00B3FE6400C000EA01180125013203B003ED0576059005AA05B405BE05CD063100780084009B00CC00E200F4010A0120016300D100EA00F7010801420019002C00340041003800480058006C025903BD0043011A007000D30028003700420050005A0064007300780082008C009C00A500BD00CE00F00110015C00BE00D801020117012C016300EA01080041004B0055005F007300A60109
018301B300410064001E002A00EB00FA010E01380274002C00400082009600B600C000CC00DC00E600F000FF010A0120012C013B01440156016300F70057006401100136005001B10000FFB60039004E004403CC00E5002401100042012201A400F0006000E0000E001D003905E30102002CFE4EFF38026903BD011600FF000E00A00054001B003D01710041000F005000FD0015014F0035FE47003900AB0080005005A50016002B00AC0115021504570555007300DA005C00CE0072FF58019A0744000040425554403F3E3D3C3B3A3938373534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B10B0A432343650A2D2C00B10A0B4323430B2D2C00B0172370B101173E01B0172370B10217453AB10200080D2D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2CB00143632362B0002342B00F2B2D2C2045B0004360442D2C01B00643B00743650A2D2C2069B04061B0008B20B12CC08A8CB8100062602B0C642364615C58B00361592D2C45B0112BB0172344B0177AE4182D2C45B0112BB01723442D2CB01243588745B0112BB0172344B0177AE41B038A45186920B01723448A8A8720B0A05158B0112BB0172344B0177AE41B21B0177AE45959182D2C2D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019234445B01A23444565234520B00325606A20B009234223688A6A606120B01A8AB000527921B21A1A40B9FFE0001A45208A54582321B03F1B235961441CB114008A5279B31940201945208A54582321B03F1B235961442D2CB110114323430B2D2CB10E0F4323430B2D2CB10C0D4323430B2D2CB10C0D432343650B2D2CB10E0F432343650B2D2CB11011432343650B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C4BB06451584569B00943608A103A1B212121592D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2CB02B2B
B02A2A2D2C00B00743B006430B2D2C3EB02A2A2D2C352D2C76B8029F23701020B8029F4520B0005058B00161593A2F182D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2CB4000100000015B00826B00826B00826B008260F10161345683AB001162D2CB4000100000015B00826B00826B00826B008260F1016134568653AB001162D2C4B53234B515A5820458A60441B2121592D2C4B545820458A60441B2121592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2CB0134358031B02592D2CB0134358021B03592D2C4B54B012435C5A58381B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B01060482046B0106048590A21211B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B8FFF060482046B8FFF06048590A21211B2121592D2C4B53234B515A58B03A2B1B2121592D2C4B53234B515A58B03B2B1B2121592D2C4B53234B515AB012435C5A58381B2121592D2C0C8A034B54B00426024B545A8A8A0AB012435C5A58381B2121592D2C462346608A8A462320468A608A61B8FF8062232010238AB9032703278A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2CB1020042B123018851B1400188535A58B910000020885458B202010243604259592D2CB0024354584B53234B515A58381B2121591B21212121592D00000002011C0000051C0500000300070042B40201C30607B803084013000504C303000A0704C3010019080605C30203BC014100090125015600182B10F63CFD3C4E10F43C4DFD3C003F3CFD3C10FC3CFD3C31302111211125211121011C0400FC2003C0FC400500FB002004C00000010052FE660292056B001200504028870EB70F02370498029409A802A5090501C200030CC20D130D0C0C00000130140F071F072F070307B8029540094010011056136F96182B10F65DED5D10F63C103C103C003FED3FED3130005D015D0115060706070611101217161715260011100002926831442630574B345DF1FEB1014E056B2E44415A8DAFFEC6FED8FEB8654635325101F30144014001ED00010019FE660259056B00120052402236048705880FB80F0496029909A602A9090401C200130CC20D030007100720070307B8029540114F10011056140001010C0C0D30135289182B10F43C103C103C10F65DED5D003FED3FED3130005D015D13353637363736111002272627351600111000196831432730574B345DF1014FFEB1FE662E45415A8CB0013A012801476546353251FE0DFEBCFEC1FE13000002005CFFF303DE03C30031003C







00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/a 4 def
/b 5 def
/c 6 def
/i 7 def
/acute 8 def
/glyph3379 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1143 -628 4096 2101}def
/UniqueID 4113473 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CA5C666975ED693ABDB2796D943B8FDBA594B8024D566595D6BA188D281B282EC345843E2EA2614CF8C67C370ADA0C13609ECB7ADC2F330FDBDF7FA5500584B2F868974A11D96F058CCF64E08825D34B2D770A5C8BDFB357403AE11E6D4B8B4164EFF743DA0B482220BFA181F35FF2131F73ED27887206029C70F310ECC41A82CA4CE3E3A3CFD6CD657382DAE8CD68704E21B98FCAABFC08AB11EC611383F2FE0C712FF94ADBAF3E930F48528CFE219CA3E7AAF23605D8C449DF30D1A18229502AB133B389161092982DEB94A43F65006174F57D1D4CED7F47DB2E9866DAF29FCC67F9CB5A2917EBB6C4DC7A276FFBEEC964E385942D77963C59147451D89E3A8382B594601B25156E0B203CB1CA08820B56F29C6052D2F43DD49266BA5756C2AA0F4F522EEAA17939F1DEC44AE201D6F64B852A32AC6DBEE9CAC1602661E6ED7264994219FEFE4BFD94813F9AE42D842BD58EC6582D37A9411B680B90DD7CA3D378E5275B3C433F1B366E4C626CFB9E6FA71C87A0FA407AAF3357F8F7E8FB1D27555B686C510792134A630010EAF7189FE6CE54CA3D8B725611F3012D13DE0B3FB32F8136ADC7CA638697F8F6A02E673040FC646FFA1DB2CEEBEE93EE2537AAF871CAD16EC2520B1B4FA9BE1BCE56893DBF9CBBFEB20B03AFD8E18EE3A758CF7C1FC396177D853C1C14AFC42EEE8EB99B5780ED0A7FCEA458C1B66CF5B57E041966162C487A4E84F16239AC10D5BF2E2C2762B708ADE3E1BEE0E3BEE66F0E16A0E5B5B05C547ED0FFF957DEDCA6507EC75CB86

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MWKLUM+TimesNewRomanPS-BoldMT cguidfix
/F1.1/MWKLUM+TimesNewRomanPS-BoldMT renmfont
%RBIBeginFontSubset: MQJEFL+STSong
%!FontType1-1.0: MQJEFL+STSong 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /MQJEFL+STSong def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid3 put
dup 34 /gid1177 put
dup 35 /gid1076 put
dup 36 /gid5593 put
dup 37 /gid2843 put
dup 38 /gid1029 put
dup 39 /gid2061 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -95 1 index div -200 2 index div 1004 3 index div 936 5 -1 roll div]cvx def
/sfnts [<

060706222F013635113427173637171614222726220607061417333707262706071513161514062322272E01270145091C0F311F250806170202280309020145490C9D4C02BF070AFEF216B5260F071209162E945A0CCFA909B3130407042D220440F487320407030C2857360105A22CF9060352727877150A170402261F02D406070B0F733C1003060512FE5D47253A120E174C2E37019982570801020106FE630609FEB954C503517C170C176BCEA7FE9D7E0DA628090531162A020A434F31303D3C0406010415082A9057383875931011E7FE9E3538121E2A113B1C0000000007001EFF5703C5030600080043004C005600600068008B0000011E0114062227262705161423211716140E010737363717161407060706073726273716151406222E012707060706222F013637070E01222F01363721220727163321371716140E0107273637051E01151406222E0127051E02140622272627050E02222F0137011614232115141F011406223537363D01212207271633213534271716140F0115213701AD5727171B05193501F4060BFE502D071A5A3FB2390939080E1C1A6376F61825068215100C0909AF4E10040704224E7B6828190A04234956FEE4271C1C3019028F2E1007203A620C4A39FD4B346317160C3A2802603F461112160A1653FE796F3B1108032FEA02860609FE4D0101280D0202FEA3271C1C30190173034B07061A01422E03061C2B261710432783070717040404423D0745102505080308175A5E10291D0C393811220E2213190A0F030631118F0C050D052B15880B250441A2040603244B0B4C491010451C101D31481BA1162B2023191D3F37184A2E1B032776FEF70606AE1C0C160A120A261813AD0B25042725312103060517373F000000000A0026FF5403C203020009001A0022002E003A006A007500A700B100BD000013161514062226353427050716100E0207273E0135340317161437161514062226270516142B01220727163B01370516142321220727163B01371316142B010E0107273E013723220727163B01362723220727163B013637171614060F0133371716142B011614073337031E0115140623222E01270516142B011533371716142B0115141F011406232234363D0123220727163B013523220727163B0136371716140E0107333725161514062226353427071614062235343736353427A95A13150A3101A919010D36786F07A06705440D5767141D073301030C10FA271C1C3019C320FE230C13FEF2271C1C3019DB202F0C10980B5B670B594A0848271C1C30196004024D271C1C3019832A123B0A1E08483121230A13740202491FFC2040110B16021B1703500C13B045232F0C10930202290409032E271C1C30194432271C1C301973221A350C12104B5922FEF955111B062BC2121B2B091F0103

00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/gid3 1 def
/gid1029 2 def
/gid1076 3 def
/gid1177 4 def
/gid2061 5 def
/gid2843 6 def
/gid5593 7 def
/gid42949 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-95 -200 1004 936}def
/UniqueID 4448078 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C99D7B912F94734180BCB0A2B426ACDB993C61FD2485EFF51D552B7983EECF235595D121D9852CB2B0D1288F1D5B5F94A28494177882DE84A114412BF147F8DF54C855D94325E30C8136ACAF3864DFC739132481BEAB528AFF3CCCCC3F54BF16843AC49DDE8BF18B14DFD2D9A57CC31705D99A55B0DE85E682A689BE6416E9620B31BAE5F45429EACC46C248DBDEEB258084FB46AF09F8D1D88C2664D07AA9145FB3451B64E91AB2095445DA0CC5D2A7FEB5E24283D98E4425FBC69EFCAF01AD9C65A1258B803331A2B7E151CC904339B6BFAFBBF29A313731E33E01D778480E6112B34961305F68DCCCB4C73CD5BE4F02A2D7570B71A860DF2EC102064744DAEE225634ADAF47A0E5B0979EE25D5400B9B4603FDC52AE5505B1FFB671A194349BD63F06C3DE3FE7FB080480C44E86997673AF57F9420A7F395E28EDD8E5420392D5D8E178344F51147B9BE80B2C17099F5F17C4AF1828C44F324B07A840C1BE6A3027D39E695628443F52C81325BF63A46889EBCE4D6031D475DB855083EED0D9096FC8C3013A9B7270AAC5041E7EA947BA17C46AA135F2B1C707125963CB41C3CE626DFA8A9EB13B3F0EA0EF79D9DDCAD1B18640DAFA8BC176B5B6B820654CC601D10DF4F77EC05DF3D3A72612D4D12536FB27439F09FCF0CCC49C80D8BB34A1766020F961FB4CA437A2A7E1C71E3073973FD11C765FC04F9A4C7BD8DB72720C154D046F185BF0B484C35F8A2AA012DD7DE458A7B1CE18CC2B10CA7FC7C4C7854
235DC912AEA7B30414A80555FD59448E16975AAB716ACE692853F16B6FE0C09DD5A99A19ACBBD5E02ADFD868F1B1F8604C05391DE0C6194875C0C9EF888605106D1A501E09F6949F2BC1CC47773E52AFB009BE8B978A77E7DCA9A0CD0406FE1B27E55686147CCF86A3630303CF452146E41B9FB02B4455A805C3396E42B41C2779A727616E28626782380C5D8B0D802E5B87BD40BABA7E3EB7BC9CCBCBB032C0025DB569DBB62828B32DC560151823A581617CD8F641032DD7248AC77186C5601F4949A68C773371D573EC0409D793A3B0339CAD6F769698B2D89E8CFA49F8AA98076E96950E099CF788657DC4431E31113FB1C3AF8AF0376A661A139990C6F3F2BE1D6525D542CCA5157D2D4403670958F21A2ABD3FB114DA41FF35C054C0746FE55EB06E6784D341D4B9B72DB99AB2130294896633F904C6A8D5EB75BE6F100CB2348226C543162ECE7B807616FD2DA54BCB0B2CAC2A8AF3710D0F84E46157C5E58E37070A6C974D6E6E4A871118D939B48C249756E291ABF302F1DFE81D8FDFAA56AE50CEA85C8996F4B1CCA48043FAC9ABF07B837345EBCCE2176F196426FB1542493DF86A7CBA96133DA03087E8A46BA038A6105F5627170535FA76EEE9A4C796D6DD6A0266EE2350A6E35C7F07612E0DE35B3BCC24D74FAF831AEB88144B557246086FB98201D13838143BB700CE644001DD49B4B9777832582D40E4CEBFA28E4601BB369C0DB2AB3B94EA6A551C1858DBDF16DBFFE7D6A5AF0189E8E2742DD37B349975A0B50BC15EA61DF5EC306D97D2F302EDC8C866805674E5D482A0A01477A3F2AC991DB9DAB46F9AE93075CCDDD1B6E0F61BE81C34BF418B86FE6B40A5F14EA92962A93517E43E7E0052A766CABDF457480E649A73E9F8125DF6BACDE12C396083FF5654E2B63D65AAEB006A92A209379293FC206964D7C06F5C71C44B930249DB206CA10C5742C921FC5E381461B1C88EA34E496ABFB44F933AAA2A859DEC3FB4A997DAC25D01917AAA0B55A7E50515B8720A60BDFBFDE9F26D9BB3F756A82ACBDCF189FA44379770AFEA45B069E786273F4399E4CFA1D51FE43797CABA6F28FDD3293220ABC903AC875E0C92F22E8CBB543B2B1F135EB06813494614CBB23D60117E198A7C5CBB7DAC4D785597E682BB88C9C41569AE435049B56150456B750B9D6807B81919C49A82E4188E604CC919D8EDAEC80AA3D3E6A290C3A863D714F22F264FAE29A1FECB5BF4E814E9C9DF2130F40CE324E6E86540968A1F6D6714D9A2BA1E83A73CE1D6BF7ACC744C826B762E2DB152393AB8D859611CAFFDE978145E4179F52EEA54B557A4BF8D42242280D3EA6A6F978A89FF54317AEAFB7F67A3B4C825EA2BA5BEA32C7BFC9BA85B24E0A27E97455CEEF40406217AA09F95603433E28FC745FDD2CC78FB29EBF0798BC5F12B8857F371AA62EE


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MQJEFL+STSong cguidfix
/F2.1/MQJEFL+STSong renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 979.15533 268.46802 rc
0.40087944 268.06714 m
315.90768 268.06714 l
315.90768 48.025116 l
0.40087944 48.025116 l
h
0.40087944 268.06714 m
f
0.56692916 w
2 J
0 0 0 sc
1 0 0 -1 -37.738216 382.55301 cm
38.139095 114.48586 m
353.6459 114.48586 l
353.6459 334.52789 l
38.139095 334.52789 l
h
38.139095 114.48586 m
S
1 w
38.419155 250.40819 m
46.773312 250.40819 l
S
1 1 1 sc
CM
331.30002 268.06714 m
646.80682 268.06714 l
646.80682 48.025116 l
331.30002 48.025116 l
h
331.30002 268.06714 m
f
0.56692916 w
0 0 0 sc
1 0 0 -1 -37.738216 382.55301 cm
369.03824 114.48586 m
684.54504 114.48586 l
684.54504 334.52789 l
369.03824 334.52789 l
h
369.03824 114.48586 m
S
1 w
46.773312 258.43866 m
55.127468 258.43866 l
S
55.127468 266.46909 m
63.481625 266.46909 l
S
63.481625 273.40359 m
71.835777 273.40359 l
S
71.835777 279.24216 m
80.189934 279.24216 l
S
80.189934 283.33499 m
88.54409 283.33499 l
S
88.54409 285.08722 m
96.898247 285.08722 l
S
96.898247 285.08722 m
105.2524 285.08722 l
S
113.60657 278.88333 m
121.96072 278.88333 l
S
130.31488 268.29568 m
138.66904 268.29568 l
S
155.37735 253.83827 m
163.73151 253.83827 l
S
172.08566 327.50574 m
180.43982 327.50574 l
S
205.50229 217.84671 m
213.85645 217.84671 l
S
238.91891 205.21588 m
247.27307 205.21588 l
S
105.2524 283.26065 m
113.60657 283.26065 l
S
121.96072 273.55234 m
130.31488 273.55234 l
S
138.66904 263.69531 m
147.02319 263.69531 l
S
188.79398 174.47449 m
197.14813 174.47449 l
S
222.2106 214.63322 m
230.56476 214.63322 l
S
255.62723 196.08948 m
263.98138 196.08948 l
S
272.33554 188.05902 m
280.6897 188.05902 l
S
147.02319 258.80396 m
155.37735 258.80396 l
S
180.43982 277.12463 m
188.79398 277.12463 l
S
197.14813 147.8324 m
205.50229 147.8324 l
S
230.56476 209.81625 m
238.91891 209.81625 l
S
263.98138 191.92877 m
272.33554 191.92877 l
S
163.73151 267.13187 m
172.08566 267.13187 l
S
213.85645 218.21202 m
222.2106 218.21202 l
S
247.27307 200.32454 m
255.62723 200.32454 l
S
280.6897 185.57617 m
289.04385 185.57617 l
S
289.04385 185.28522 m
297.39801 185.28522 l
S
297.39801 196.74574 m
305.75217 196.74574 l
S
314.10632 204.04556 m
322.46048 204.04556 l
S
330.81464 157.46635 m
339.16879 157.46635 l
S
322.46048 159.50952 m
330.81464 159.50952 l
S
305.75217 250.40819 m
314.10632 250.40819 l
S
339.16879 184.40587 m
347.52295 184.40587 l
S
347.52295 211.30275 m
353.68118 211.30275 l
S
46.815514 250.56146 m
46.815514 258.49805 l
S
55.180138 258.46854 m
55.180138 266.40509 l
S
63.516792 266.37558 m
63.516792 273.55173 l
S
71.869133 273.94101 m
71.869133 279.40091 l
S
80.191399 279.27429 m
80.191399 283.37277 l
S
88.645531 283.69208 m
88.645531 284.979 l
S
105.25983 283.5545 m
105.25983 285.15231 l
S
113.67042 279.36224 m
113.67042 282.24274 l
S
121.96831 273.56079 m
121.96831 278.02328 l
S
130.23503 268.46985 m
130.23503 273.32474 l
S
138.65999 263.6546 m
138.65999 268.21619 l
S
147.03453 259.23792 m
147.03453 263.37955 l
S
155.32043 254.02269 m
155.32043 258.16434 l
S
163.61554 254.37981 m
163.61554 267.27377 l
S
172.10472 267.55432 m
172.10472 327.26166 l
S
180.40965 277.45303 m
180.40965 327.5914 l
S
188.66745 174.75496 m
188.66745 276.84561 l
S
196.99126 148.03172 m
196.99126 174.57347 l
S
205.54425 148.32857 m
205.54425 217.95105 l
S
222.23465 218.09259 m
222.23465 214.49805 l
S
230.63687 213.99719 m
230.63687 210.40263 l
S
238.9985 209.56519 m
238.9985 205.97064 l
S
247.33195 204.86537 m
247.33195 201.27083 l
S
255.6701 200.09381 m
255.6701 196.49925 l
S
264.04498 196.06375 m
264.04498 192.46919 l
S
272.33701 191.85429 m
272.33701 188.25974 l
S
280.76913 188.19029 m
280.76913 185.48033 l
S
297.38434 196.70784 m
297.38434 185.46153 l
S
305.80365 250.43497 m
305.80365 196.76146 l
S
314.04227 250.48706 m
314.04227 204.00058 l
S
322.41287 204.07251 m
322.41287 159.82979 l
S
339.25021 184.21059 m
339.25021 157.46429 l
S
330.98465 159.26186 m
330.98465 158.02042 l
S
347.49225 211.45558 m
347.49225 184.70929 l
S
1 1 1 sc
CM
663.29773 268.06714 m
978.80457 268.06714 l
978.80457 48.025116 l
663.29773 48.025116 l
h
663.29773 268.06714 m
f
0.56692916 w
0 0 0 sc
1 0 0 -1 -37.738216 382.55301 cm
701.03595 114.48586 m
1016.5428 114.48586 l
1016.5428 334.52789 l
701.03595 334.52789 l
h
701.03595 114.48586 m
S
1 w
369.93814 257.97675 m
393.66055 257.97675 l
S
393.66055 277.53955 m
417.38293 277.53955 l
S
417.38293 286.23413 m
441.10535 286.23413 l
S
441.10535 276.5061 m
464.82773 276.5061 l
S
464.82773 262.32404 m
488.55014 262.32404 l
S
488.55014 294.92871 m
512.27252 294.92871 l
S
512.27252 168.85732 m
535.99493 168.85732 l
S
535.99493 218.85115 m
559.71735 218.85115 l
S
559.71735 206.94948 m
583.4397 206.94948 l
S
583.4397 193.80086 m
607.16211 193.80086 l
S
607.16211 184.07283 m
630.88452 184.07283 l
S
630.88452 244.93489 m
654.60693 244.93489 l
S
654.60693 157.98909 m
678.32928 157.98909 l
S
678.51703 221.11853 m
684.17078 221.11853 l
S
702.24353 267.14929 m
752.23364 267.14929 l
S
752.23364 280.19116 m
802.22382 280.19116 l
S
802.22382 271.49658 m
852.21399 271.49658 l
S
852.21399 219.32912 m
902.2041 219.32912 l
S
902.2041 193.24538 m
952.19427 193.24538 l
S
952.19427 212.80818 m
1002.1844 212.80818 l
S
1002.1844 221.5619 m
1016.3936 221.5619 l
S
393.47879 277.30942 m
393.47879 257.76556 l
S
417.67877 286.53906 m
417.67877 277.64398 l
S
441.07593 285.74921 m
441.07593 276.85413 l
S
464.9776 276.02399 m
464.9776 262.60742 l
S
488.7244 294.42297 m
488.7244 262.44196 l
S
512.3913 294.54117 m
512.3913 169.5162 l
S
536.19519 218.87321 m
536.19519 169.04834 l
S
559.58093 218.51131 m
559.58093 207.44312 l
S
583.60077 206.49884 m
583.60077 194.30087 l
S
607.19025 193.74623 m
607.19025 184.06863 l
S
630.9126 245.00284 m
630.9126 184.27322 l
S
654.51599 245.10637 m
654.51599 158.53 l
S
678.60834 221.33328 m
678.60834 157.90154 l
S
752.20245 280.01071 m
752.20245 267.5094 l
S
802.33722 279.97144 m
802.33722 272.29584 l
S
852.0979 271.47601 m
852.0979 219.5424 l
S
902.23883 219.13586 m
902.23883 193.68762 l
S
952.12628 213.06252 m
952.12628 193.33337 l
S
1001.7871 221.70139 m
1001.7871 213.10165 l
S
0 i
/F1.1[ 18 0 0 -18 0 0]sf
144.02463 374.36652 m
(!"#)[ 5.994141 9.000000 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
165.01291 374.36652 m
(!"#$%)[ 4.500000 18.000000 18.000000 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
472.14075 374.36652 m
(!$#)[ 5.994141 10.010742 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
494.13977 374.36652 m
(!&#$%)[ 4.500000 18.000000 18.000000 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
806.47156 374.36652 m
(!%#&)[ 5.994141 7.989258 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
830.9491 374.36652 m
('#$%)[ 18.000000 18.000000 18.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
