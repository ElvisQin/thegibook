%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.2 (Build 17C88) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 984 249
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 984 249
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: DCOYYN+Helvetica-Bold
%!FontType1-1.0: DCOYYN+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /DCOYYN+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /three put
dup 34 /four put
dup 35 /eight put
dup 36 /seven put
dup 37 /p put
dup 38 /quotesingle put
dup 39 /one put
dup 40 /two put
dup 41 /six put
dup 42 /five put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<




3F3CFD3C3F3CFD3C313033112111271121119A04A3B8FCCD05C2FA3EB80452FBAE000000000100630361017405C20003002C401702BC03000517171A00230194022303190405CD219089182B2B4EF44DF4FDF44E456544E6003F4DED313001032303017432AD3205C2FD9F02610000000001008E0000030705AA000D0032401E29053905020D01CC09040C0C0BB3000938200C300C600CB00C040C0F470E1076C418D45DE4CCED003F3FF4CD3130005D13353637363736373635331121118E8736563625130BEDFEDC03E8C2060C133927412713FA5603E8000100400000042105B1002100884061071401041B071C6F1203041D19011618660160046206671A97019502981AA6010B001910193419351C041C190402041E0F0A4013051EA1210C1E1C04030E07B316731F01020E630F7C1FA7102101702180219021A021B021D021F02107212347224E1076C418D45D71E44DF4ED393910F4ED111739003FFD3FEDDD111739015D31305D71007136373637363736353426232207060721363736213204151407060F010E0107211521443F3DE3C53A59665F822F1B05FEEB073C720123E60110603F90726B4F1B0279FC1F9C8191A28D3D5F715C7A61387AB972D9FFD2A17D5366514C442DFB00000000010036FFDC042105B100300076B609200198220130B80108403C2C171E25250BF66F0CDF0C020C0C2C13401E0504402C0D252507106F210783290C8C1663177C006329A71030303002A030B030D030F03004303247314E1076C418D45D71E44DEDF4FDE610EDD4ED12392F003FED3FED12392F5DFD393D2F1810CD10ED3130005D0171011417163332363534272623353637363534262322061721363736373E0133321615140706073217161514022320272627014E1C3489547D74428E8B375F6158655F02FEF60421234B389A70D0FF4C303427496DFFFAFECC783F0701BD573969736C8F301BCC02192A805368806B6C6155483336D7B5805837144365AFB8FEE9C96BAD00000200360000042F05A1000A000D008F40450E0C480C480D8F0CDC0C051F0C0158077A0789079907A80705050D460D830DD60D04110D01040500030C090D0A01080B0D0A030C0C0D0DF512060607060C07040A0DF70005B8014C4009030C0D07050C03B30ABB013A0001000901A9B3060F470E4E1076C4184DD4F43CE4FD3C113939003FF43CFD3C3F393901872E2B047D10C50F0F0F31300172715D0072710123112111213501211133211101042FA4FEE9FDC202150140A4FE45FE950138FEC80138F90370FC760272FD8E00010036FFDA042105970020005E40160E0F0FA1121212130D0EC213094017171D12A10F0420B80155401903401D0D113813120D0006831A0FC3006F0E381AA720224721104E76C418D4E44DE4FDED10ED11393939E4003FEDED3FED


484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200
00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/quotesingle 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/five 6 def
/six 7 def
/seven 8 def
/eight 9 def
/p 10 def
/u20B8 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4338650 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B64DFC330C1264D9E86DB21FFDE360EA73793134E310C3576495659FA8612BBF809CE248F446F3707AAB5562CD8AC1C571A6D8D0D09B29355FC893275A99B99CA05C4503BFF7B51F9E928E2FEF91F7952F6FA2AB1215CCA35E50FA8226624062186459B70F2D1E48F45F4AA0E3550F610C6AAC9958D152221E5CBB6BE88BCFA2AC77A53B1C6FFF8BE09BF93F3AF6BD9C0545563DBC0F0F89FE2F87CFB40FE1FA73751D67DDF9235279DBFDF807C10D603DA56646A0E800CC91E425C96C45CE42258C1922939C7EA9911ED4234851D1E067AFD3A4547D00980F13099A78AD0ED1E5EFFD000636410F546F4DAE8E404AA8EBCF26E795F2451DA33F963B03492934FD69128E3303FE0B215E919BE3400FC50E767A346DF2D9623BC41163EA43CEB014D7D83DB9D7BA6D42DF736FFAE59E1F403650CE2E4262FA42E7F012BB374E21D6685B02D8F23291BF09236D428CEEC0E6BE03E0E99A1DF8BB61C6A0388CE5A7C1481C39492F5C367BEA921F6913C504934C9F465B106D26A462E650267C277B3E7D7DABC9ADDCACD6DC70A8225311FDDF2741BB2A5F1F896D6E3276075337DD4FA22FA4E6AC244A0BBB93176BEE058F5BAD962C169A88C2C1536DD7BB2EEC4D70CC618D96AD281E5A1360BF3CB29E28C76983D624AB8BF1D786D2C165375EB90F14A56CF05649EAE8D6C68BE7449F8D2243D7AB5100676F09BD8C909CC9BB0C3C3899315352A2E8FBD1696FABA5A7A2735462465E4A8F25523A1DA52FA3DF60
881CEB255FB4EB83FBE0BADE9D9381BEBCDB66D8BFD926147BB42D3A7D1618A51F89D1F7D8C1D849AB85B984103620F4393536328EB7524241BE6AA8219AE6758FACEB6644DB1DF079752ADDE82798DCCC5AE58B8DC7B8AECDABCB1598EF60136CAF0353AC44FADD8A2C208A4E47375F9452DD8B681A9FD2B20E7F5D27C896E074C8B5DCB1813C3FFA4B5D2A9C6CB869B58E92A5C33E948C515C442215655A4512EFCBABC09A2D94E9DC992537361FE7CE82BEE089D7432F9C9624AB14D6A66B820B6B745DB2DF552011AF8F57C0EC4F17F51B3140B24AB1B2E7F7F58DB09FBE29C0154286AE5C524C7A32C37DB531826DCA1093317584CBA6279DAA70C7C92EDA8A91FB87362BC5C827F03B26EFDDFC4A9AD57CAB8179ED668AA1B8A1349B67D94D2F52B6540DD26326DCC7F3E2948C431DD34585C724DAD93B1EF5AA4F5EEE09B833AB7867BC1DB502C7B35EBC84E781ED789F69C83EF94C2BA856A618026FA68BE59C47DEAB946D5F6592C0CFAF2164D8E1166FB437D8D1C59560E99D39EBD07A05289942CE2D1B6FBB3DEA4D0D9035B54D8A500DD453C91456523F53FC10EDC9ACCD2B3FF175F16153442C37282DE3F5C26A82E7A3FA81F08313E2FAD4B7A050C854619DC8D4FE2B8F352AEB8ABC5707706AF43A9E3B302CA3EDF5E4997D752E28210A3D13325CAF403E06B4CF84AB503BE40F276A2242AC0F8D710CA868D2F8059230F14E892E75843A02944AB6B1B0390E635B40185577F0517627C4534180E29CC394D65F11B7E1F4FF36AD3995FAFC821D27F797A56EEF7EF1D0994C8B2ADBF1B0DBEFB1316E1D6F1B84215FF185A747611903F8D005DB0FB945329897D2E59D0109167DF7FD5BB4B21B20CDA8C5CD1168336EE1869B12DFF6C922B33A22CFF66C8966FFDE78F719D89AB7F41226FAD30FCB21C751CD1ADDC5B6B5B73FD182D2ADB9959F29F2955933B96B6019B4C188BAC50C1333A8EE0BAA08AC2E91349622E182D896057A0099277D494AF7F0284EC580337E12BB200CB00AC6B3435498295C8FE980FA585A61E3D50403EEC5BD7DD1B9F075361F3AF42E84F4A08C91FE040077C030E8BF1B2BF4CEFB0619305485059AA0278D3E0C2805BB66FCB7B52DC22F4E075ABA09747FC7F689B817E8830BE9980C22CFE94957E1FB04FE6CE586905B53CF1817C6B13FE681CD1F5ABEC0AE3DF2399194D6416B74B8F988BFF0D414207259DE96D998FC814A34B29E975A7EB4E2A1BC6B7AF3F28D06561354913D842A1BDA605AF2E2F82596D018DC3C57B673DA025955978B9F545E126F4CD9F0DCC1E17C9AB1884FAB81405BAB5AE7A7BF57AE7F5F5BCDA5814F2F8CC366470D75F4E818429D4AF98A14F722DD86CDE02E8E221281E3FBB692052FA1E0DA9BEB75C7252E4C2441A13B1BA95D4118C6DEB110E058C3FD3F4952EEC379E4
F1252C5C2F1EF74C44D22550FEB8B0DF7E45A77AF7F88816BA5A4B0111BB69CE20339CE4821C66F31D06EB8578834B20326AC1A14338FAC424BA474AF790AC2331A66E8923CF72E3B56AC4FA0AC8CEB7209E82F274B0D47DD399B981969DAB4D2455D7026414698E8456A081B8FCCAB8821F8CF302CC3F23435C6161586FE28FD13E46E35782CADEF515185967B92975787B79360ACE600B914B212EFF15E162FB9A5B165F46BCAAEFE3EECC489F466D2B36C0DFBD5F47D1AD5A966926089B098EF5A0F4C80F128237AE70EE12004D9E25E0879774890185BBE59A5A2DD58C235F778A9F28B4873F5DE2DE9FC736FA7DDBA3072E87011D4A4856D9CBA5F29B816A825B97C9E0847EA9397F6C451D3EF6F3AB40F59A69A9B360184A2928CC08A970CFD75FD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/DCOYYN+Helvetica-Bold cguidfix
/F1.1/DCOYYN+Helvetica-Bold renmfont
%RBIBeginFontSubset: QPNZCM+Helvetica
%!FontType1-1.0: QPNZCM+Helvetica 1.0000.0.0000
14 dict begin/FontName /QPNZCM+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /v put
dup 34 /three put
dup 35 /one put
dup 36 /five put
dup 37 /four put
dup 38 /six put
dup 39 /two put
dup 40 /r put
dup 41 /X put
dup 42 /Y put
dup 43 /Z put
dup 44 /hyphen put
dup 45 /colon put
dup 46 /space put
dup 47 /eight put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/eight 9 def
/colon 10 def
/X 11 def
/Y 12 def
/Z 13 def
/r 14 def
/v 15 def
/u20B8 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec

BD2F4491BED6DA1FC3A6FE42CAC2E2532996CF7362F4B88447839FD4C4FD27D08D9DF1F64E40797048BECF38C807D3FBD1E1A9A83CB25D5EF487ED1DFE71539C20A2A2C355D73C5C58C1DCD412D1CBB106198CA559B1C035249C031CE37BEBFB43094E01F0509B2D8C8A3C015E49BBCCD7079386FCDEE3C653ABB3A6342E7FBAC84200250B6013832BCB9CEB961E1DA802578D144437DC25B3D80524E682F21B3568D5DAE26CA7AB0D7A2A6C2DFD59D6840592B20F9D71B6E7E14F24E905FCE01ACA68DCD264E95B7413916CFFBD4C0778797BE753B3D7850AB83647E87C6E0C9FD6D5570206289D98BCBAE244AF3D90F276D6258FD6102B8CCAC1E0FB6796E869A856435D97433FC0F86635857EA220AAFDCCDA1D8080880A45E96385A6695441CC98C078DAF01757B0B47BF1C23B6FD0435237A45ACF69C8054175D314CF1F9AC4121CE10A33EBD0F351C2796DB0ADC5CAB654C6F0B1AA683C49E148019C7BB679E2A8F548E6BCEA81FBE50F57A5291C28B592BAD68CB291272149857055B8EB5F17CE6790BDB31FACFACCD51308EE4BCC5CD767EBF3F5F3DB40389DF8C85C185873E9EF757BAC03CD22E0684362DB4FB732F3ED19E58325E9BED660863C7F8C389D36A492E8859F2BC36445E4C5DA7DCA73F964F952D83D76DD4875D757A8315D4BE718E72D279303F4D1C82382A82323734158BF4593680572BD03C3D03EC473598309671FC6EC8C974438111A1B77F53FFE892DDAFFEFBB0475343828279D67B4259249AF7D45A0218677E78804F291361AF689117C63A29667B045D8F53317A4CD8B2CC63EF20B07717D30D10E0112C4883E82B8CE87AF9A8E33B0C0C2CFFE1D9D243B0FD2036B46A8871BF6BD5DCC619226758614011691B59C176E20FC13F5389E0290CEEBB4FB0176FB2B0D10653BB5259FB8FBACEDE2B7B23304FAEEB4C4AC2FBF5690B3CB82C6064D6F254AF0FFDD40B6D0CCEE49856BC437CA3FA08CCE627FB17EB8C43ACD11294042FEF2A919DFC125526D8B0C0342A53A7EE9C14F12CC43985D61EEE648414204F6526EBCE4965E26A7255B360A1DD110A631B7DD30C4CFC0E26DA092F45B528AC92227EEBA254D05C6ADF13AA61389311F8F387678EEC5FC2142EFAC582F189305F4F030EE4FB6A78AEA59246DB324BDB8341252C27D9E1FE285306ABD9634E9581E0DBAFF414AD6605AB8FF34F9EB1AEFFBE6E76560F8F3FCCA0BB1AF435B48EDAD73093B6BD68F042AD99B70C6300E58C9F2AA1F3999209B7CE4C9D5702F980B58FE4A4CB7DED68868BB21DAFD7610FD5D3D652B3A2EA663A8415DF1B3529F31D8670CED24521DAB9EA47F9658A8A22135407F4843B15E8767C8FC5E9D26735356596FAA141B44116384369DB47238A4E4BA9EB44B7195DEB1FC040AD52B6BDFD8B9BCE0A5FAD16CC4C289F4ECACFE16DB
CD5A956CE8DEAE4A2F89B483B2284405806BBA8098A1A425654462CBCE241F979A83D2E6AD308F701D87531FC2EB1B205991EE1821BFAE00A9DE52E67E316C946FC6A89D57886D17063F71E3E7EC7105FF8B673BA6BC95F3BD87B7AE255EE90F9ED816EA9F1B2ACB1918CC55FD48BB8AF6D981276C9F6EA553FB52149914386A7D4E5F401CE1E6901BE75FCDF4F7B52FC7AD7DD6F4012BE1476DA6542883308F90B42B23587AE40ED1E7593BB2DF64B807EF085EE0306EF1095619DC7AA3E4C8F3AD035FADAADB241528044818328B1F07370C2EC7149D43B1997EB464A009DCF2B42C5A2808CB0DF0D693EB0E59F16EEA3A35E41489DFDD94EC61CEAB02FE9C7F59865E7AA9DB7E6A3E33212AB8CD654DECA6F693024E1A81859B1A7802017E2A037B7F29280D09784E61648227E16A05B85F59FAA6FE05AF757C6E78FD5FE510EF0D147DEAECCB0B6C38E175A91003E499723B9AC911D0194206F210268E97E2486064EE4A9D0EAD39ADC92B6065BC1D5B3B9A9B44F0A790B463619EAA59C82CFDCA95867D9B654036004555C5281E519AE736D1239DB1D0B022639AF4F3330EA7F49A20153F5E7EA5D8682E0CA13DCC4D6455A2FB38DB66D8D4888DAB8C3D47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/QPNZCM+Helvetica cguidfix
/F2.1/QPNZCM+Helvetica renmfont
%RBIBeginFontSubset: CMZGVG+PingFangSC-Regular
%!FontType1-1.0: AAAAAE+PingFangHK-Regular 001.003%%CreationDate: 1/5/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAE+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1806 putdup 2 /gid3979 putdup 3 /gid4694 putdup 4 /gid6702 putdup 5 /gid7566 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA67F044135A6F077DBF679273886F042AF8316E103C341F52D89FA4DA2DDE3EEB17C167618B0AAC4DDC5F774E8C8628AA6FD2BF1952AEEEAB9A534F47ECD23CBDC9DB82C6E4B2619C4115852E692C504830F03AEA815E51A1C176AD8CB77FE038EA12E09E0A81FB694CE40EF9BE976CE7108378AC85035A0069889C19CB1C55F54A9C35AF6CCD5BF4A46395855119D372E6B042F1817F46C08C475E7B1F058F38545501804A30056EEB3E04FEF9092CA686CB8C374DD94BA52CE1A144762BE7DA6A64E86CD9E3EE26F3E431249CCBF9FBB464D16BCE55CBDEE623FE2041BE9D41C1A8EF137A6B67BCE92F6760B927B8CD7F2FB58B48E07C4428665292B65888FEC6AEF92D6AD250EBE638035F4EB1B0FC9BF00CD076507E591F780DFF3A9290583E62CA42EC06A2DDD2EE312EFE8437C5B3525EBD682B2A587F38C52A9C7CE14627B4169A65BE7E4D30B30D730E0E516A902D776702722A552683394483A04BBAB9A5E089BE28890F199C1F7BEF870AA0BC62CAEEBE357D51BD4EDBA78CC6C534AE5713C06B67DAF718A1927020C446690FEAEDE7950BEBC5BCD990C21E383DD238795B9FEE7B9AE295D79CE065C756E96367FC947D6D85B0A98F1224E9CE590C51F3D5A9A951670371188A45DFA2CE856DF7E0A2AFEB4FFFBECB50056828F79D0CCF5584641ABCD5BD7B95DA616A9B592B1CBAC1AA31A403C9CC2392DDDDEC88488295E3AA57D0F11D84C77697D27ED9D95BDB177292DD1709FCC5483844E6B3963207EE4B4606560D1D0FD2F823A701196532BB6F1FD84F67B77F5A393BA5127D260653A5A96AC2CF1CDCAA40DB03C0DE9765A0DD575B83B576393640CD5E23DCBCC3B61605613FFB93E9E8F4B0BBC4CFB52199299E98CDF6907D048B836B02274C7CDDA31D0640D4FB278A236947F5AAD7C2FF1724E14CA32E915BDA5C3DEE36CAD06A8CADB846A801DA6AD7B1AC0FB19F1F25C3AB07C83D92436424AD4CD48093929AB00B1EDA0AC4C9A2DD96577BB289713DEF09E36F6396C3EE44297C1267E62C787899C1F13CBA47963CFDED82EE98DFFA741474E199A79AE4FDF9359EC233A4BE0CEA3C1E9D6290A5A37C5AD57E9A6B19D8735ACC85D6C58A8607E068BC84972EB6C336332F251F7B09224399BC5DD5E18A8AF63FE297FC4C9AABBF46EF28C89F88F922C5B722F62F85E1ADA8110DFFEC9AF40E23D4CCA27C192374B3948628BF6873CC4374B39D43DCEE7EA489506AE455EA48CADA1F387064984A8A7555E99EDFBD9914372782B66C1F53907099F0A942F6343F307E12BF6D0049FF29F31FBC61A0829A84F82E05871D2A698636837110CFB53BB1005AFA5E681CEE1B8885C461B2CD48ED05502560DDE4513BCCA8634D5BF7CF133CD10DA77C9D4E7910F24231504DADFE6D7479D7761196CDAA3579F159F8F190DCAE943A9AB8DB8F228CC4651C9FB43000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: CMZGVG+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /CMZGVG+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid3979 putdup 34 /gid1806 putdup 35 /gid4694 putdup 36 /gid7566 putdup 37 /gid6702 putreadonly def/$SubFontArray [/AAAAAE+PingFangHK-Regular findfont ] def/CharProcs 7 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1806 {(\001) 0 $SP} putdup /gid3979 {(\002) 0 $SP} putdup /gid4694 {(\003) 0 $SP} putdup /gid6702 {(\004) 0 $SP} putdup /gid7566 {(\005) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/CMZGVG+PingFangSC-Regular cguidfix
/F3.1/CMZGVG+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.87843138 0.87843138 0.87843138 sc
q
0 0 983.00183 248.41403 rc
736.28058 220.69162 m
736.36804 81.566246 l
598.14313 220.325 l
f
0.54982793 0.61825716 0.76542807 sc
735.92944 81.52993 m
596.9541 81.763992 l
666.81012 150.55493 l
f
0.98138243 0.85399425 0.56251663 sc
597.44739 219.35248 m
665.83057 150.97237 l
597.14899 82.006332 l
f
0.60373175 0.7970016 0.58332968 sc
527.46759 151.09137 m
596.72589 82.191383 l
596.36963 219.46439 l
h
527.46759 151.09137 m
f
0.91227412 0.56756037 0.45780075 sc
526.72925 150.87112 m
457.67682 81.791763 l
595.96515 81.97374 l
f
0.87843138 0.87843138 0.87843138 sc
596.88721 220.32458 m
457.36273 82.203735 l
458.01529 220.88574 l
f
236.37531 221.2838 m
428.08145 221.2838 l
428.08145 124.67202 l
236.37531 124.67202 l
h
236.37531 221.2838 m
f
0.98138243 0.85399425 0.56251663 sc
428.56671 124.4574 m
429.10013 28.811527 l
333.30981 29.990038 l
f
0.60373175 0.7970016 0.58332968 sc
333.51367 125.60313 m
333.23306 29.435402 l
429.41287 125.47992 l
h
333.51367 125.60313 m
f
0.91227412 0.56756037 0.45780075 sc
332.85599 125.07356 m
237.28076 125.48899 l
332.7832 29.535263 l
f
0.54982793 0.61825716 0.76542807 sc
332.84689 29.481802 m
237.31314 29.918167 l
237.25063 125.51843 l
f
85.537003 86.249489 m
108.49687 28.85058 l
12.82208 124.78361 l
f
1.4173229 w
2 J
0 0 0 sc
1 0 0 -1 -71.23558 254.41721 cm
156.77258 168.16771 m
179.73245 225.56662 l
84.057663 129.63359 l
S
0.98138243 0.85399425 0.56251663 sc
CM
205.19572 125.32818 m
108.56953 29.203333 l
85.540291 85.671387 l
f
0 0 0 sc
1 0 0 -1 -71.23558 254.41721 cm
276.4313 129.08902 m
179.80511 225.21387 l
156.77586 168.74582 l
S
0.91227412 0.56756037 0.45780075 sc
CM
107.99969 221.65094 m
12.836307 124.97752 l
84.336166 86.769539 l
f
0 0 0 sc
1 0 0 -1 -71.23558 254.41721 cm
179.23528 32.766262 m
84.071892 129.43968 l
155.57175 167.64766 l
S
0.60373175 0.7970016 0.58332968 sc
CM
108.40695 221.31105 m
84.946808 86.585548 l
205.13898 125.77856 l
h
108.40695 221.31105 m
f
0 0 0 sc
1 0 0 -1 -71.23558 254.41721 cm
179.64253 33.106144 m
156.18239 167.83165 l
276.37457 128.63863 l
h
179.64253 33.106144 m
S
1.4173229 w
161.9902 158.70949 m
198.65462 96.504005 l
S
CM
85.601418 86.964699 m
87.572426 97.583321 l
93.936813 93.8321 l
h
132.57224 166.6562 m
130.60123 156.03758 l
124.23683 159.7888 l
h
132.57224 166.6562 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
156.83701 167.4525 m
158.808 156.83388 l
165.17239 160.5851 l
h
203.80782 87.760994 m
201.83681 98.379616 l
195.47241 94.628395 l
h
203.80782 87.760994 m
S
1 w
179.93533 34.235966 m
181.58037 37.882034 l
S
183.22542 41.528103 m
184.87047 45.174171 l
S
186.51552 48.820244 m
188.16057 52.466312 l
S
189.80562 56.112381 m
191.45065 59.75845 l
S
193.0957 63.404518 m
194.74075 67.050583 l
S
196.3858 70.696655 m
198.03085 74.342728 l
S
199.6759 77.988792 m
201.32095 81.634865 l
S
202.96599 85.28093 m
203.49088 86.444275 l
S
1.4173229 w
94.720215 129.16408 m
265.53845 128.72337 l
S
CM
13.335985 125.22694 m
23.475101 128.94693 l
23.494162 121.55931 l
h
204.45151 125.72002 m
194.31239 122.00003 l
194.29333 129.38763 l
h
204.45151 125.72002 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
84.571564 129.19026 m
94.710686 125.47028 l
94.729744 132.85789 l
h
275.6871 128.69719 m
265.54797 132.41718 l
265.52893 125.02956 l
h
275.6871 128.69719 m
S
1.4173229 w
179.99106 214.29419 m
179.34625 42.998058 l
S
CM
108.79368 29.974396 m
105.06168 40.1091 l
112.44926 40.136909 l
h
108.07248 221.56775 m
111.80447 211.43304 l
104.41689 211.40524 l
h
108.07248 221.56775 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
180.02925 224.44281 m
176.29727 214.30811 l
183.68484 214.28029 l
h
179.30806 32.849449 m
183.04005 42.984154 l
175.65247 43.011963 l
h
179.30806 32.849449 m
S
1 w
204.33711 88.861183 m
203.64325 92.800545 l
S
202.94937 96.739906 m
202.25551 100.67926 l
S
201.56165 104.61862 m
200.86777 108.55798 l
S
200.1739 112.49734 m
199.48004 116.4367 l
S
198.78616 120.37605 m
198.0923 124.31541 l
S
197.39844 128.25478 m
196.70456 132.19414 l
S
196.0107 136.13348 m
195.31682 140.07285 l
S
194.62296 144.01221 m
193.92909 147.95157 l
S
193.23521 151.89093 m
192.54135 155.83029 l
S
191.84749 159.76964 m
191.15361 163.709 l
S
190.45975 167.64836 m
189.76588 171.58772 l
S
189.07201 175.52708 m
188.37814 179.46643 l
S
187.68428 183.40579 m
186.9904 187.34515 l
S
186.29654 191.28452 m
185.60268 195.22388 l
S
184.9088 199.16322 m
184.21494 203.10258 l
S
183.52107 207.04195 m
182.82719 210.98131 l
S
182.13333 214.92067 m
181.43947 218.86003 l
S
180.74559 222.79938 m
180.32791 225.17073 l
S
203.87788 88.579391 m
200.10571 89.910103 l
S
196.33356 91.240822 m
192.5614 92.571541 l
S
188.78925 93.90226 m
185.01707 95.232979 l
S
181.24492 96.563698 m
177.47276 97.894417 l
S
173.70061 99.225136 m
169.92844 100.55585 l
S
166.15628 101.88657 m
162.38412 103.21729 l
S
158.61197 104.54801 m
154.8398 105.87873 l
S
151.06764 107.20945 m
147.29549 108.54017 l
S
143.52333 109.87088 m
139.75116 111.2016 l
S
135.979 112.53232 m
132.20685 113.86304 l
S
128.43469 115.19376 m
124.66253 116.52448 l
S
120.89037 117.85519 m
117.11821 119.18591 l
S
113.34605 120.51663 m
109.57389 121.84735 l
S
105.80173 123.17807 m
102.02957 124.50879 l
S
98.257408 125.83951 m
94.485252 127.17023 l
S
90.713089 128.50095 m
86.940933 129.83167 l
S
274.8894 128.8734 m
271.40558 126.90798 l
S
267.92172 124.94257 m
264.43787 122.97717 l
S
260.95404 121.01176 m
257.47018 119.04634 l
S
253.98634 117.08093 m
250.5025 115.11552 l
S
247.01866 113.15012 m
243.53482 111.18471 l
S
240.05098 109.2193 m
236.56714 107.25389 l
S
233.08328 105.28848 m
229.59944 103.32307 l
S
226.1156 101.35766 m
222.63176 99.39225 l
S
219.14792 97.426842 m
215.66406 95.461433 l
S
212.18022 93.496025 m
208.69638 91.530617 l
S
205.21254 89.565208 m
203.69829 88.710945 l
S
0 i
/F1.1[ 34 0 0 -34 0 0]sf
103.48091 82.79641 m
(!)s
236.96494 82.79641 m
(")s
239.8828 207.81483 m
(#)s
108.50604 207.81483 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
76.23558 148.13934 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
85.23558 153.13934 m
(")s
/F2.1[ 18 0 0 -18 0 0]sf
272.12439 119.41604 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
281.12439 124.41604 m
(#)s
/F2.1[ 18 0 0 -18 0 0]sf
176.00406 242.99066 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
185.00406 247.99066 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
141.94917 184.6152 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
150.94917 189.6152 m
(%)s
/F2.1[ 18 0 0 -18 0 0]sf
174.59219 27.64241 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
183.59219 32.64241 m
(&)s
/F2.1[ 18 0 0 -18 0 0]sf
205.72966 85.085785 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
214.72966 90.085785 m
(')s
0.60000002 i
0.94340861 0.91144753 0.13406858 sc
CM
884.32056 165.46725 m
860.37537 125.44868 l
764.89062 124.58666 l
f
0.97672141 0.95514339 0.60962695 sc
860.31671 220.99049 m
884.50128 165.85002 l
765.47076 124.38679 l
f
[
4
4
] 0 d
0 0 0 sc
1 0 0 -1 -71.23558 254.41721 cm
931.55231 33.426708 m
955.73688 88.567184 l
836.7063 130.03041 l
S
1.4173229 w
[] 0 d
908.56561 168.16771 m
931.52551 225.56662 l
835.85071 129.63359 l
S
1028.2244 129.08902 m
931.59814 225.21387 l
908.56891 168.74582 l
S
931.02832 32.766262 m
835.86493 129.43968 l
907.36481 167.64766 l
S
931.43561 33.106144 m
907.9754 167.83165 l
1028.1676 128.63863 l
h
931.43561 33.106144 m
S
913.78326 158.70949 m
950.44763 96.504005 l
S
CM
837.39447 86.964699 m
839.36548 97.583321 l
845.72986 93.8321 l
h
884.3653 166.6562 m
882.39429 156.03758 l
876.02991 159.7888 l
h
884.3653 166.6562 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
908.63007 167.4525 m
910.60107 156.83388 l
916.96545 160.5851 l
h
955.60083 87.760994 m
953.62988 98.379616 l
947.26544 94.628395 l
h
955.60083 87.760994 m
S
1.4173229 w
846.51324 129.16408 m
1017.3315 128.72337 l
S
CM
765.12903 125.22694 m
775.26813 128.94693 l
775.28723 121.55931 l
h
956.24457 125.72002 m
946.10547 122.00003 l
946.08636 129.38763 l
h
956.24457 125.72002 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
836.36462 129.19026 m
846.50372 125.47028 l
846.52277 132.85789 l
h
1027.4801 128.69719 m
1017.341 132.41718 l
1017.322 125.02956 l
h
1027.4801 128.69719 m
S
1.4173229 w
931.78412 214.29419 m
931.13928 42.998058 l
S
CM
860.58673 29.974396 m
856.85474 40.1091 l
864.24231 40.136909 l
h
859.86554 221.56775 m
863.59753 211.43304 l
856.20996 211.40524 l
h
859.86554 221.56775 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
931.82233 224.44281 m
928.09033 214.30811 l
935.47791 214.28029 l
h
931.10107 32.849449 m
934.83307 42.984154 l
927.4455 43.011963 l
h
931.10107 32.849449 m
S
1 w
956.13013 88.861183 m
955.43628 92.800545 l
S
954.74243 96.739906 m
954.04852 100.67926 l
S
953.35468 104.61862 m
952.66083 108.55798 l
S
951.96692 112.49734 m
951.27307 116.4367 l
S
950.57922 120.37605 m
949.88531 124.31541 l
S
949.19147 128.25478 m
948.49762 132.19414 l
S
947.80371 136.13348 m
947.10986 140.07285 l
S
946.41602 144.01221 m
945.72211 147.95157 l
S
945.02826 151.89093 m
944.33441 155.83029 l
S
943.6405 159.76964 m
942.94666 163.709 l
S
942.25281 167.64836 m
941.5589 171.58772 l
S
940.86505 175.52708 m
940.1712 179.46643 l
S
939.47729 183.40579 m
938.78345 187.34515 l
S
938.0896 191.28452 m
937.39569 195.22388 l
S
936.70184 199.16322 m
936.008 203.10258 l
S
935.31409 207.04195 m
934.62024 210.98131 l
S
933.92639 214.92067 m
933.23248 218.86003 l
S
932.53864 222.79938 m
932.12097 225.17073 l
S
1026.6825 128.8734 m
1023.1986 126.90798 l
S
1019.7148 124.94257 m
1016.2309 122.97717 l
S
1012.7471 121.01176 m
1009.2632 119.04634 l
S
1005.7794 117.08093 m
1002.2955 115.11552 l
S
998.81171 113.15012 m
995.32788 111.18471 l
S
991.84399 109.2193 m
988.36017 107.25389 l
S
984.87634 105.28848 m
981.39252 103.32307 l
S
977.90863 101.35766 m
974.4248 99.39225 l
S
970.94098 97.426842 m
967.45709 95.461433 l
S
963.97327 93.496025 m
960.48944 91.530617 l
S
957.00555 89.565208 m
955.49133 88.710945 l
S
0 i
/F2.1[ 18 0 0 -18 0 0]sf
820.00458 136.10327 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
829.00458 141.10327 m
(")s
/F2.1[ 18 0 0 -18 0 0]sf
1031.9414 133.81537 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
1040.9414 138.81537 m
(#)s
/F2.1[ 18 0 0 -18 0 0]sf
927.79712 242.99066 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
936.79712 247.99066 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
893.74219 184.6152 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
902.74219 189.6152 m
(%)s
/F2.1[ 18 0 0 -18 0 0]sf
926.38525 27.64241 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
935.38525 32.64241 m
(&)s
/F2.1[ 18 0 0 -18 0 0]sf
957.52271 85.085785 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
966.52271 90.085785 m
(')s
1.4173229 w
0.60000002 i
0.14117648 0 1 sc
869.32214 44.976166 m
931.36011 129.12801 l
S
CM
798.36646 213.99849 m
799.52356 212.84138 799.52356 210.96533 798.36646 209.80823 c
797.20935 208.65112 795.33331 208.65112 794.17621 209.80823 c
793.0191 210.96533 793.0191 212.84138 794.17621 213.99849 c
795.33331 215.15559 797.20935 215.15559 798.36646 213.99849 c
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
869.60205 40.418713 m
870.75916 41.575821 870.75916 43.451866 869.60205 44.608974 c
868.44495 45.766083 866.56891 45.766083 865.4118 44.608974 c
864.25464 43.451866 864.25464 41.575821 865.4118 40.418713 c
866.56891 39.2616 868.44495 39.2616 869.60205 40.418713 c
S
0.14117648 0 1 sc
0 i
/F1.1[ 18 0 0 -18 0 0]sf
851.17719 50.902374 m
(%)s
880.8288 98.285553 m
(%&)[ 10.995117 0.000000 ] xS
875.69049 129.43741 m
(%&&)[ 10.995117 4.280273 0.000000 ] xS
1.4173229 w
0.60000002 i
0.14117648 0 1 sc
901.34515 91.845886 m
901.48102 116.66692 l
S
CM
832.18799 167.72551 m
833.34509 166.56841 833.34509 164.69237 832.18799 163.53525 c
831.03088 162.37814 829.15485 162.37814 827.99774 163.53525 c
826.84064 164.69237 826.84064 166.56841 827.99774 167.72551 c
829.15485 168.88263 831.03088 168.88263 832.18799 167.72551 c
832.3573 136.78633 m
833.51447 135.62923 833.51447 133.75319 832.3573 132.59607 c
831.2002 131.43896 829.32416 131.43896 828.16705 132.59607 c
827.00995 133.75319 827.00995 135.62923 828.16705 136.78633 c
829.32416 137.94345 831.2002 137.94345 832.3573 136.78633 c
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
903.42358 86.691689 m
904.58069 87.848793 904.58069 89.724838 903.42358 90.88195 c
902.26648 92.039055 900.39044 92.039055 899.23334 90.88195 c
898.07617 89.724838 898.07617 87.848793 899.23334 86.691689 c
900.39044 85.534576 902.26648 85.534576 903.42358 86.691689 c
903.5929 117.63086 m
904.75 118.78797 904.75 120.66402 903.5929 121.82112 c
902.43579 122.97823 900.55975 122.97823 899.40265 121.82112 c
898.24554 120.66402 898.24554 118.78797 899.40265 117.63086 c
900.55975 116.47375 902.43579 116.47375 903.5929 117.63086 c
S
1 w
1 0 0.35294119 sc
932.39429 130.85828 m
932.39429 130.85828 932.39429 130.85828 932.39429 130.85828 c
932.39429 138.58264 940.11865 138.58264 940.11865 138.58264 c
950.18842 138.58264 950.18842 138.58264 970.32788 138.58264 c
970.32788 138.58264 980.15112 138.58264 980.15112 148.40585 c
980.15112 138.58264 989.97437 138.58264 989.97437 138.58264 c
999.84253 138.58264 999.84253 138.58264 1019.5789 138.58264 c
1019.5789 138.58264 1027.3032 138.58264 1027.3032 130.85828 c
1027.3032 130.85828 1027.3032 130.85828 1027.3032 130.85828 c
S
1 0 0.35294119 sc
0 i
/F2.1[ 18 0 0 -18 0 0]sf
976.78229 161.65533 m
(\()s
1.4173229 w
0.60000002 i
0 0 0 sc
993.40442 40.252205 m
993.40442 72.58342 l
1028.933 72.58342 l
S
CM
922.16882 221.68254 m
924.90503 214.16499 l
919.43268 214.16499 l
h
965.2149 181.83379 m
957.69733 179.09763 l
957.69733 184.56995 l
h
965.2149 181.83379 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
993.40442 32.734665 m
996.14056 40.252205 l
990.66827 40.252205 l
h
1036.4504 72.58342 m
1028.933 75.31958 l
1028.933 69.84726 l
h
1036.4504 72.58342 m
S
1.4173229 w
993.77185 72.787315 m
1015.1746 49.487186 l
S
CM
949.02454 210.46635 m
945.9541 203.07904 l
941.92401 206.78099 l
h
949.02454 210.46635 m
f
0.35433072 w
1 0 0 -1 -71.23558 254.41721 cm
1020.2601 43.950848 m
1017.1897 51.338158 l
1013.1596 47.636211 l
h
1020.2601 43.950848 m
S
0 i
/F2.1[ 14 0 0 -14 0 0]sf
1038.4314 77.841507 m
(\))s
988.21985 26.838705 m
(*)s
1023.837 47.544472 m
(+)s
1.4173229 w
0.60000002 i
308.09982 32.684296 m
500.42529 32.684296 l
500.42529 225.00975 l
308.09982 225.00975 l
h
308.09982 32.684296 m
S
308.14554 128.84702 m
500.37958 128.84702 l
S
404.26257 32.730003 m
404.26257 224.96404 l
S
308.31039 129.09567 m
404.22165 224.77832 l
S
1.4173229 w
404.47119 224.66603 m
499.45804 129.88336 l
S
404.67203 33.061691 m
500.58331 128.74434 l
S
308.76489 128.38969 m
403.75174 33.607029 l
S
1.4173229 w
528.52509 33.357304 m
668.19922 33.357304 l
668.19922 173.03142 l
528.52509 173.03142 l
h
528.52509 33.357304 m
S
0 i
/F2.1[ 16 0 0 -16 0 0]sf
526.5954 222.0488 m
(#,%-.)[ 8.898438 5.328125 8.898438 4.445312 0.000000 ] xS
/F3.1[ 16 0 0 -16 0 0]sf
558.61102 222.0488 m
(!"#$)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
650.12067 223.38118 m
($,/-.)[ 8.898438 5.328125 8.898438 4.445312 0.000000 ] xS
/F3.1[ 16 0 0 -16 0 0]sf
682.13629 223.38118 m
(%"#$)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
528.99957 189.52638 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
537.99957 194.52638 m
(")s
/F2.1[ 18 0 0 -18 0 0]sf
666.78033 188.34998 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
675.78033 193.34998 m
(%)s
1.4173229 w
0.60000002 i
529.0033 172.39777 m
667.2879 34.715313 l
S
529.22833 34.298065 m
667.20447 172.30188 l
S
668.04462 33.357304 m
807.71869 33.357304 l
807.71869 173.03142 l
668.04462 173.03142 l
h
668.04462 33.357304 m
S
669.04706 171.85136 m
807.33167 34.168907 l
S
669.08673 34.666286 m
806.39319 172.00043 l
S
0 i
/F2.1[ 18 0 0 -18 0 0]sf
287.87167 145.70282 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
296.87167 150.70282 m
(")s
/F2.1[ 18 0 0 -18 0 0]sf
294.82452 242.99066 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
303.82452 247.99066 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
400.0546 242.99066 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
409.0546 247.99066 m
(%)s
/F2.1[ 18 0 0 -18 0 0]sf
494.46182 242.99066 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
503.46182 247.99066 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
505.70465 133.81537 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
514.70465 138.81537 m
(#)s
/F2.1[ 18 0 0 -18 0 0]sf
406.52045 122.23728 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
415.52045 127.23728 m
(&)s
/F2.1[ 18 0 0 -18 0 0]sf
393.85989 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
402.85989 29.003166 m
(')s
/F2.1[ 18 0 0 -18 0 0]sf
294.82452 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
303.82452 29.003166 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
488.33444 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
497.33444 29.003166 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
527.73718 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
536.73718 29.003166 m
(')s
/F2.1[ 18 0 0 -18 0 0]sf
791.39441 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
800.39441 29.003166 m
(')s
/F2.1[ 18 0 0 -18 0 0]sf
660.67505 24.003166 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
669.67505 29.003166 m
(#)s
/F2.1[ 18 0 0 -18 0 0]sf
588.77783 89.530571 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
597.77783 94.530571 m
(&)s
/F2.1[ 18 0 0 -18 0 0]sf
729.79034 88.083473 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
738.79034 93.083473 m
($)s
/F2.1[ 18 0 0 -18 0 0]sf
799.91339 189.52638 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
808.91339 194.52638 m
(")s
/F1.1[ 34 0 0 -34 0 0]sf
362.40579 168.91551 m
(!)s
324.69489 208.19914 m
($)s
422.97653 173.74542 m
(")s
457.49756 208.19914 m
(#)s
422.97653 109.00098 m
(')s
362.40579 110.43937 m
(\()s
324.69489 72.065056 m
(\))s
457.49756 72.065056 m
(*)s
586.61707 68.794327 m
(')s
545.37451 112.71014 m
(\()s
586.61707 158.35287 m
(!)s
631.36932 112.71014 m
(")s
726.07562 71.5718 m
(*)s
768.73157 112.71014 m
(\))s
725.83649 158.35287 m
($)s
683.72699 112.71014 m
(#)s
ep
end
%%Trailer
%%EOF
