%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.2 (Build 17C88) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 899 250
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 899 250
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: LNNYEG+Helvetica
%!FontType1-1.0: LNNYEG+Helvetica 1.0000.0.0000
14 dict begin/FontName /LNNYEG+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /parenleft put
dup 34 /a put
dup 35 /parenright put
dup 36 /space put
dup 37 /b put
dup 38 /c put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




0B021D350B3C073C3C1C1407292AA8241A3E1B291C4A0F2738193D3EBC0197002100B9019600182B2B4EF44DEDF4ED4E10F64DE4FDC412392F003F3FED3FED3FEDED1239111217395D1112392EED2EED01111239111739313043794028363715220001192501360F2100181E1B21001620142101212200370221001A1D1721011521172101002B2B2B01103C2B2B2B2B818181005D015D2416333237363D010E010F0106070615013637363534262322070607233E01333217161511141633323637150E0123222726270E012322263534363713010E724E5F59962168326D62315301B43E150C837A8D3B210AA805F7A3BD767517250C1E112A2C265D2A160937CE7C95BDBA978ACF5A2C49A691151C060E0D1C2F67016C082C182D5C534C2A53C69B484898FD971C220303850C06422340486AB58895A41301E40000020076FFDE042505C20011001E0070402EA607A71CD71C0322080F1E02050000171D0507110A1E1D0B0B1427081A201A2E102E01290011191F208721BD5D182B2B4EF43C4DFDE4E44E10F64DED003FED3F3FED3F113911393130437940181216060A1606142601120A142601150717260113091E26002B2B012B2B8181005D1333113E01333212111402232227262715232436353426232206151417163376AF3BA460C8F9F6DA7A543239A6026691918D7BB92647C205C2FDEB4D51FEEDFEF4FEFEB03B234D897DE8BEA9DEB6D1975EB100000002003BFFE103D0044E001A001B00A7402FA719019818A808AA18034A08119B14030314061D1A070D1D140B1B071B1B1710271201032702111A1D0A2717191C1DB80107B321727D182B2B4EF44DED4E10F63C4DED3939ED12392F003F3FED3FED12392F10ED313043794034001908250C150A26000E1310260112110F1007190A26000500032101010204030B160D26000F120D2600091806260104010621012B2B2B2B01103C103C2B2B103C103C2B2B2B81005D015D001617232E012322070615141633323637330E01232202351000330702D6E317AF10727EAC4A308892708319AF1EF0BBD2FA0112D41C044EB0D76383A86DA0A1DC8977D5C50133E6011A013A050002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50041303A6A8A8FC5A03A60146A7A700000001000000000000D5411B0D5F0F3CF500110800000000005F4D8F0000000000D5670BEEF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B91000100000000000000000000000000000008051200420239000002AA008E02AA004404730052047300760400003B0473002F000000360036007E00C0018A01F402760290000000010000000800920009006B0007000200100010005D000007E80A1D00040001B800532BB800492B

00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/a 4 def
/b 5 def
/c 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A64BC3AB0F9692F6BC106AE217BF94B71975CBCEAD28FD587E1BFB01FDF6931915C89E8032677890B9B723498510FBFA80C605F161F06E859104BA241B4B3BC00DAF95CF7DB6F7316ADA21CA996CD831EDF61216F207B4E8F682424D65612EFA74D76F215637DEF45C6DBF967FC7B442825501A541AB10EA7DB91A37C792A570D6D8DCAF33B98D72B8E01E6A1CBFAAEEE13AAE98A21CE0087D532C8644991E4AF8DF51347D45A7D2579EA5C96DDD69A3CC6B69FC2D9720FE3DE1FA0F629EC98D769ACBC601DF8222131EDFC624C167ABB97187FC46A4AE31B66EE66AE8BFFB87DA3A67253A4579680B6E15C2F28E77309B1B8115ABD4364300DA038AB3C645144739D537F74BE6D3CD36AF7C53A81ED92F8745AA39F7AF8E96E4B566E96B22CB7C05E3407FC6CB2CE782B9B8112A67AD0F189204D56F08087140D06E161D89376E640171C324C995D40698DC13815644B5A7547EAD33B3B200E5C6B443B872EA851C4E2688D07A5578BCFAC4D3371DDFA4DDB7398B07DDC530925E08E709E6AD4A7670283D25EDECDDE6944A0284F50975A5C48539BD7E4D3C5DE41BA3745640A2975344C93EDCEFAE4F155E0C13AB2D9955AD0457451A7FF947C86517749D4EBC6A5B31AA14E5C609FE30C4A489800C14C3D4AEA80CC2DA21CBA48F4F72081FFF689E9400A8E604AFB068526F844DDF7F4BD15828129E4755A962E3B788A8B3774D9E5FCED5F
7B6860B1258707D3FCEEE0A1CBD95AAD36E4D7E0B939FCF7860F3A9EB293F5536FF896058AC56AE5B0F2A9497A488ACA5B112CC3CD574FE6E584A4995E106282C539330B38521A43BE56FE0E23B269B58C08D050AD7BAC6232B92FBDB48F98D3388FC0E3C97AE259AB2A0D136CFCB6BDF36942F48B11860C0D38B163A9EEC093840426BDD1223100C52A9B4576FD55F1403BA4DA4A8A58AAD29F163F16AA47EFD8BDD810DC8EB8564C31FD0B14895683C8D8B30E4F364CB37B54DAC59F9247ACEDF90EAB568C33ECE9BE64A3E1FE76DA1C8FBFCEE45057E1EC971C6270E236A9DB10B893E89CD776119E4884D7164714BBFF8A534010619E2C683B428AF228B2AB02D25D69E61CB05A0C55B038E28B68F9123B90F4227A16251031EE2E6AA1A14912ED3654B7C89D3C8A1CEB683C95ABC9D8B728318DBDA0F394E505D3F611FD98C677B1E03056478BB1A9B70DD8F85AA9680712237DAF20E34DE2EAD09B3C8724927E055A5ABAE313F953F2C84C224B7ED3405F7EBAC1D27A78EF5A6C2F6DD0EE0DAC0D49115DC510D863AA58306843F73BF1292D3B80BBEBB67076AB3DAFCABD0049A8E98FC37A1BE2D19022C2D0AB4AD647BE8D6174A2DE6CA245D2F4B3018FA920084A862F2A2958C8A4BEE2CD5357F755AC39C1DD9F364B601ACD2695C461164B436AE5E061F6A282AEA9FDC413BA1CD452B8348467CA33B425A411D7344D776E38E740471E9046BF1F54123AD75CF7AC62DB35698F443550ADE3DAFDFB43C07065192D45F6567DFFBB52FCA44360937F58A30255A1D4919EE9038C124731FEEE9847DF4250137CA222C00D25CD935666A79EF95D042F953ECB05DB1359A013835400C334983255609FBF2BB497D79839
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/LNNYEG+Helvetica cguidfix
/F1.1/LNNYEG+Helvetica renmfont
%RBIBeginFontSubset: HLJCKZ+PingFangSC-Regular
%!FontType1-1.0: AAAAAC+PingFangHK-Regular 001.003%%CreationDate: 12/29/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAC+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1424 putdup 2 /gid3273 putdup 3 /gid4694 putdup 4 /gid4696 putdup 5 /gid5230 putdup 6 /gid5462 putdup 7 /gid7413 putdup 8 /gid7566 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E44870E23D8E2B1BD14E397738F1FE2550BD6E68212AAE25B73619A0BFB314E1BCD175907C2B6A653BD8B74D5D11BEE8948585B5B5737FE78378881644CF033E50D117E08E99E5452D7491BD75F102958C6A919FEA02FDDFD3C6BBC039D4CA9CC3BF6F8164591EC43B42B6DC88B7C3F5B12B08FCEBE3E9523D4AF529BCD37625D9430C55D0D89D3C60F77BED453C1751F06BF9917504880A85D06FB98614FA2CF92B68A4F63F980E22174240102D536478C055702CC1F724ECF838B72B6EF102B051C28CC9891AB7CAF85FF43829CF0EB58DFF78D1A54EC29C83D5D830BD601B45317C5775A99D7743A38377A245A11248522BC8C5685E8D4DA4F5F5B5F0EC731B5A54CD4E9D0934D106AA14482F0C7925D10BCF08164DF99EE8A5FCCA6479F72AC0D59B66F0114390041F9B7186F63811CF427EF61C7D383085A3E8187B9D8C5E2C0B4746FFBBB7E88FF7F166FFCF5FB61C9059F4BADC7CDB00EB030151FDDD349B7A3DCAA2B16BA8634233DB1D8BF966609140A3A5EF52C7030B0057424464FF48D7AC458C8E3DDB59670021EE4286A9E5DCF285169B4B736F8E58C49D93B313C9BD2E3737DEE152BBD55534FD0198914B758CDC88599A1EEF28C3A51B014D78C8C739D588D82895F8A428BFD9CE328D8C1E16D90FC9AF2769AD6B61E0D05F9E0E5B394470EA82B13E4A56507FCAC32D9AC4EB44157277FAF08E24C5D0A2023A4920D2FEEEA224B19F910CF2AC1C03E18F021D42208A86F6C70C209C8BA4D64367BAE33CA496FED51D133014ECD9202BB9A1A7F4C43B2407B5B65920B801FD81D58B26D4F7B3E3A09527CD28E639B863359F513DBE67D417D2242D1DBCB1DE479A5886D8A4F8BF7100993F1EE5A906BF65DD3CE79BB1B1801B678A47D12D6CCC440748FB150CF90B326DFA7F329F20A6A0CC32B72E5238CE7D4B321B0BB8935E6354F613F3767BF2AD74116C104C15AA03764106597C6F3BF4A9F055513515787032A1AE73EE0C46341686B2CE6B8B09E92C7DB7132EF7A7CBD8D37F63596652AA056FDBE5671190B98657A3F95E300E1722CB53661D6878BCB45DF438DAF8994086D90C4A97412C5B22D739B92C230C96D0F618BC0FB987F1E2200C0637E1CCF9A34BB0275DA4FE96BD4DC3239524DDB084473721B6A172067BD039BACE66CAC82673F0FBAC8A0C97BF59F4FE48631D8F4E7850433CEC4D7D83DDC3DC961AE840277A31A6719A0B87201298A353BCFBB5922549A1BD75BFF2C7B65B3D62C72280CB5214481FB0FAD95A2BDA0EAA45A30675D05D0D01C032DE0187D9DD0EC5AA6FEC4EEDCC515E2E9C958E0658212B7EA3B5F4A29EA7BC49D607653D858B23CEBAD6A0DC85A86C172B6938FA5994B8A855256F2034ADCA28D3CBFFFCD4B82FF998CF1EB24BB36B048D263DBA3D015F86C785C42D2C746A98114E8477A5B043F4CAF3DEF77D2C3DE9B2482161324318B7E59260A45D6E6F9A707C475BDFBB3114F61ED4DC71E55C537E3389D571D8B06F6223E39289F3FDBC0E8FDE3516FAFF667A4C33B08BEF23727E5D411DE6E809473CDCB72793F16DD68645DA4602AF5A72E5A6DA24AA32B724A305060D7326D96B950BAD031E513612BB992D7BE3F55ABD631509E1F4D01CDBE98E5678C50C064900004310D848F201978FB92A8A32F408C5900FA513D9721E81042A72DFE4B12EEEB0FEC16C8E5E66DAB643C35E57C2EB162EB457302CA651306F74DDE7BD0908670924E736B0513D253AC1B2F03C37004779F25B0142A5664B78A59EEACF4A525D0E45038689F48671DCFD1F17EEACD5F8ED4BE5C78036324BDF52779D63A8E42DEB86F9158624B1640DD5375B43CE137C5EC71F7173241132F39ADBFDA7BFC9B739E187C0325547AC64282D7E57CD1DC51ADD58E36E9408B90C7E82AF1C91CCAABEEBC2896EF78340054B59CEC521F95BC3B214366BEA420972F72FEA19865F0D9A3357C8465F507EB8BC0F106F836E864FA2DC7ADFD0373355319462EF38DAEC0B7A1681DAACD869578507EEC633EBFFE6F8D52DB1F7A9D766465186FCB12B66F4979A1C7BE3804ADC392FBE6205B507D501E7B79F0D9EC00298DE0307C12FAB673D9ED511785C88D80C75CB0EE62C501C5D1127F9E96D62383E58C05E1C0F246A588F116B1FDE074D61D4623635429E5C62B30C408F74AF7B3D1DFA2170970C3EE53B561ABE65274392924174334C4DFF1CF9524D51FA0D97BD389A8F28A067337E10FC91C4EE012CE74C51739F0FF4F450BB25E58848587BC8DE0E8E5A7E9F7F89B3BD508E371329A2D538B2BF859E431D760446326E7FB9BD28C41F6C81D7CC543ED7ED49122C042B872758AB4A847E2197F84C4724201DFBB89445C7ABF98215DF3F85ECF34F87A300558CCAE6BE8179C7F7BAED298C79DD138AD4C91955C8002A51EE666EC4570A2E4691CCD324BDAF222DE7392076A4BB50204ACBA9CEB30342DB57FA3D9483885E117C435E85FD2075E9A638BFE2FF02C9001D751CE1AE68A619F6DE2083419898BC1B1C8B777D84A0425BABBDD8E59D9577596E51A64CD73F1F9038DF20156166284241797D6BB6BEBDBF68F3639E325468DEFEE2332DE5186FBC9D77F52C7A6B71EE67DA7746528505AB219186D1F52BE4F5E7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: HLJCKZ+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /HLJCKZ+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid4694 putdup 34 /gid7566 putdup 35 /gid3273 putdup 36 /gid1424 putdup 37 /gid5462 putdup 38 /gid4696 putdup 39 /gid5230 putdup 40 /gid7413 putreadonly def/$SubFontArray [/AAAAAC+PingFangHK-Regular findfont ] def/CharProcs 10 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1424 {(\001) 0 $SP} putdup /gid3273 {(\002) 0 $SP} putdup /gid4694 {(\003) 0 $SP} putdup /gid4696 {(\004) 0 $SP} putdup /gid5230 {(\005) 0 $SP} putdup /gid5462 {(\006) 0 $SP} putdup /gid7413 {(\007) 0 $SP} putdup /gid7566 {(\010) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/HLJCKZ+PingFangSC-Regular cguidfix
/F2.1/HLJCKZ+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1.4173229 w
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 898.0304 249.89629 rc
1 0 0 -1 -110.60359 474.26529 cm
287.14307 343.96231 m
287.14941 332.45319 284.86111 320.94913 280.4509 310.31854 c
276.05243 299.68307 269.53589 289.93039 261.39325 281.79672 c
253.25957 273.65405 243.5069 267.13754 232.87143 262.73907 c
222.24083 258.32883 210.73677 256.04053 199.22766 256.04691 c
187.71855 256.04053 176.21448 258.32883 165.58389 262.73907 c
154.94843 267.13754 145.19576 273.65405 137.06207 281.79672 c
128.91942 289.93039 122.40289 299.68307 118.00442 310.31854 c
113.59419 320.94913 111.30589 332.45319 111.31226 343.96231 c
111.30589 355.47141 113.59419 366.97549 118.00442 377.60608 c
122.40289 388.24155 128.91942 397.9942 137.06207 406.1279 c
145.19576 414.27054 154.94843 420.78708 165.58389 425.18555 c
176.21448 429.59576 187.71855 431.88406 199.22766 431.87772 c
210.73677 431.88406 222.24083 429.59576 232.87143 425.18555 c
243.5069 420.78708 253.25957 414.27054 261.39325 406.1279 c
269.53589 397.9942 276.05243 388.24155 280.4509 377.60608 c
284.86111 366.97549 287.14941 355.47141 287.14307 343.96231 c
h
287.14307 343.96231 m
S
Q
1.4173229 w
q
176.76056 130.30298 m
176.76694 141.84103 174.47289 153.37404 170.05157 164.03136 c
165.64204 174.69357 159.10913 184.47078 150.94598 192.62491 c
142.79185 200.78804 133.01465 207.32097 122.35245 211.7305 c
111.69511 216.15181 100.16212 218.44586 88.624069 218.43948 c
77.086014 218.44586 65.553017 216.15181 54.895691 211.7305 c
44.233479 207.32097 34.456276 200.78804 26.302151 192.62491 c
18.139008 184.47078 11.606089 174.69357 7.1965599 164.03136 c
2.7752473 153.37404 0.48119128 141.84103 0.48756844 130.30298 c
0.48119128 118.76494 2.7752473 107.23193 7.1965599 96.574608 c
11.606089 85.912399 18.139008 76.135193 26.302151 67.981071 c
34.456276 59.817928 44.233479 53.285007 54.895691 48.875481 c
65.553017 44.454166 77.086014 42.16011 88.624069 42.166489 c
100.16212 42.16011 111.69511 44.454166 122.35245 48.875481 c
133.01465 53.285007 142.79185 59.817928 150.94598 67.981071 c
159.10913 76.135193 165.64204 85.912399 170.05157 96.574608 c
174.47289 107.23193 176.76694 118.76494 176.76056 130.30298 c
h
176.76056 130.30298 m
W
0 0 898.0304 249.89629 rc
1 0 0 -1 -110.60359 474.26529 cm
286.94604 343.96231 m
286.95242 332.42426 284.65836 320.89127 280.23706 310.23392 c
275.82751 299.57172 269.29462 289.79453 261.13147 281.64038 c
252.97734 273.47723 243.20013 266.94434 232.53793 262.53479 c
221.8806 258.11349 210.3476 255.81943 198.80956 255.82581 c
187.2715 255.81943 175.73849 258.11349 165.08118 262.53479 c
154.41896 266.94434 144.64175 273.47723 136.48763 281.64038 c
128.32449 289.79453 121.79157 299.57172 117.38204 310.23392 c
112.96073 320.89127 110.66667 332.42426 110.67305 343.96231 c
110.66667 355.50037 112.96073 367.03336 117.38204 377.69067 c
121.79157 388.35291 128.32449 398.1301 136.48763 406.28421 c
144.64175 414.44736 154.41896 420.98029 165.08118 425.3898 c
175.73849 429.81113 187.2715 432.10519 198.80956 432.09882 c
210.3476 432.10519 221.8806 429.81113 232.53793 425.3898 c
243.20013 420.98029 252.97734 414.44736 261.13147 406.28421 c
269.29462 398.1301 275.82751 388.35291 280.23706 377.69067 c
284.65836 367.03336 286.95242 355.50037 286.94604 343.96231 c
h
286.94604 343.96231 m
S
250.944 257.52789 m
250.94475 254.9565 250.5938 252.38567 249.91164 249.89041 c
249.23076 247.39465 248.21953 244.97537 246.93365 242.69356 c
245.64854 240.41089 244.09006 238.26605 242.33464 236.29709 c
240.57938 234.32724 238.62836 232.53311 236.56207 230.92839 c
234.49548 229.32292 232.31436 227.90639 230.09023 226.67245 c
227.86549 225.43806 225.59804 224.38573 223.34341 223.49617 c
221.08815 222.60638 218.84566 221.87891 216.65422 221.28828 c
214.46222 220.69763 212.32104 220.2435 210.25369 219.89932 c
208.18591 219.55521 206.19168 219.32088 204.28223 219.17169 c
202.37247 219.02264 200.54724 218.95868 198.80956 218.9586 c
197.07185 218.95868 195.24663 219.02264 193.33687 219.17169 c
191.42741 219.32088 189.43318 219.55521 187.3654 219.89932 c
185.29805 220.2435 183.15688 220.69763 180.96487 221.28828 c
178.77344 221.87891 176.53096 222.60638 174.2757 223.49617 c
172.02106 224.38573 169.7536 225.43806 167.52888 226.67245 c
165.30473 227.90639 163.12363 229.32292 161.05702 230.92839 c
158.99074 232.53311 157.03972 234.32724 155.28445 236.29709 c
153.52904 238.26605 151.97055 240.41089 150.68544 242.69356 c
149.39957 244.97537 148.38834 247.39465 147.70746 249.89041 c
147.02531 252.38567 146.67435 254.9565 146.67509 257.52789 c
146.67435 260.0993 147.02531 262.67014 147.70746 265.16537 c
148.38834 267.66113 149.39957 270.08041 150.68544 272.36224 c
151.97055 274.6449 153.52904 276.78973 155.28445 278.7587 c
157.03972 280.72855 158.99074 282.52267 161.05702 284.12741 c
163.12363 285.73288 165.30473 287.14941 167.52888 288.38333 c
169.7536 289.61774 172.02106 290.67007 174.2757 291.55963 c
176.53096 292.4494 178.77344 293.17688 180.96487 293.76749 c
183.15688 294.35815 185.29805 294.81229 187.3654 295.15646 c
189.43318 295.50058 191.42741 295.73492 193.33687 295.88409 c
195.24663 296.03314 197.07185 296.09711 198.80956 296.0972 c
200.54724 296.09711 202.37247 296.03314 204.28223 295.88409 c
206.19168 295.73492 208.18591 295.50058 210.25369 295.15646 c
212.32104 294.81229 214.46222 294.35815 216.65422 293.76749 c
218.84566 293.17688 221.08815 292.4494 223.34341 291.55963 c
225.59804 290.67007 227.86549 289.61774 230.09023 288.38333 c
232.31436 287.14941 234.49548 285.73288 236.56207 284.12741 c
238.62836 282.52267 240.57938 280.72855 242.33464 278.7587 c
244.09006 276.78973 245.64854 274.6449 246.93365 272.36224 c
248.21953 270.08041 249.23076 267.66113 249.91164 265.16537 c
250.5938 262.67014 250.94475 260.0993 250.944 257.52789 c
h
250.944 257.52789 m
S
276.93768 270.71674 m
276.93881 266.65048 276.41287 262.58511 275.39059 258.63925 c
274.37027 254.6926 272.85483 250.8669 270.92783 247.25854 c
269.00198 243.64886 266.66644 240.25714 264.0358 237.14354 c
261.4054 234.02852 258.4816 231.19139 255.3851 228.65376 c
252.28812 226.11497 249.01952 223.87494 245.68643 221.92369 c
242.35249 219.97166 238.9545 218.30757 235.57573 216.90088 c
232.19603 215.4938 228.83546 214.34344 225.55139 213.40945 c
222.26649 212.47542 219.05774 211.75729 215.95963 211.21301 c
212.86087 210.66885 209.87233 210.29829 207.01085 210.06239 c
204.14891 209.82669 201.41365 209.72554 198.80956 209.72542 c
196.20546 209.72554 193.4702 209.82669 190.60825 210.06239 c
187.74677 210.29829 184.75822 210.66885 181.65947 211.21301 c
178.56136 211.75729 175.3526 212.47542 172.0677 213.40945 c
168.78363 214.34344 165.42308 215.4938 162.04337 216.90088 c
158.6646 218.30757 155.2666 219.97166 151.93266 221.92369 c
148.59958 223.87494 145.33098 226.11497 142.23399 228.65376 c
139.13748 231.19139 136.21371 234.02852 133.5833 237.14354 c
130.95265 240.25714 128.61711 243.64886 126.69125 247.25854 c
124.76426 250.8669 123.24883 254.6926 122.22849 258.63925 c
121.20621 262.58511 120.68027 266.65048 120.6814 270.71674 c
120.68027 274.78302 121.20621 278.84839 122.22849 282.79425 c
123.24883 286.74091 124.76426 290.56659 126.69125 294.17496 c
128.61711 297.78464 130.95265 301.17636 133.5833 304.28995 c
136.21371 307.40497 139.13748 310.2421 142.23399 312.77972 c
145.33098 315.31851 148.59958 317.55856 151.93266 319.5098 c
155.2666 321.46182 158.6646 323.12592 162.04337 324.53262 c
165.42308 325.9397 168.78363 327.09006 172.0677 328.02402 c
175.3526 328.95807 178.56136 329.67621 181.65947 330.22049 c
184.75822 330.76465 187.74677 331.13519 190.60825 331.37109 c
193.4702 331.60681 196.20546 331.70795 198.80956 331.70807 c
201.41365 331.70795 204.14891 331.60681 207.01085 331.37109 c
209.87233 331.13519 212.86087 330.76465 215.95963 330.22049 c
219.05774 329.67621 222.26649 328.95807 225.55139 328.02402 c
228.83546 327.09006 232.19603 325.9397 235.57573 324.53262 c
238.9545 323.12592 242.35249 321.46182 245.68643 319.5098 c
249.01952 317.55856 252.28812 315.31851 255.3851 312.77972 c
258.4816 310.2421 261.4054 307.40497 264.0358 304.28995 c
266.66644 301.17636 269.00198 297.78464 270.92783 294.17496 c
272.85483 290.56659 274.37027 286.74091 275.39059 282.79425 c
276.41287 278.84839 276.93881 274.78302 276.93768 270.71674 c
h
276.93768 270.71674 m
S
293.78787 296.32059 m
293.78925 291.63458 293.14987 286.94965 291.9071 282.40244 c
290.66672 277.85428 288.82443 273.44553 286.48184 269.28726 c
284.14066 265.12744 281.30139 261.21881 278.10336 257.63068 c
274.90564 254.04094 271.35129 250.77141 267.58694 247.84705 c
263.82202 244.92133 259.84848 242.3399 255.79654 240.09128 c
251.74355 237.84177 247.6127 235.92404 243.50523 234.30296 c
239.39661 232.68146 235.31125 231.35577 231.31891 230.27945 c
227.32553 229.20305 223.42474 228.37547 219.65845 227.74826 c
215.89136 227.12117 212.25829 226.69414 208.77965 226.42227 c
205.30046 226.15065 201.97528 226.03407 198.80956 226.03395 c
195.64381 226.03407 192.31863 226.15065 188.83945 226.42227 c
185.36082 226.69414 181.72774 227.12117 177.96065 227.74826 c
174.19435 228.37547 170.29356 229.20305 166.30019 230.27945 c
162.30785 231.35577 158.22249 232.68146 154.11386 234.30296 c
150.00639 235.92404 145.87555 237.84177 141.82256 240.09128 c
137.77063 242.3399 133.79707 244.92133 130.03214 247.84705 c
126.2678 250.77141 122.71345 254.04094 119.51572 257.63068 c
116.31771 261.21881 113.47845 265.12744 111.13725 269.28726 c
108.79465 273.44553 106.95238 277.85428 105.71198 282.40244 c
104.46923 286.94965 103.82986 291.63458 103.83122 296.32059 c
103.82986 301.00656 104.46923 305.6915 105.71198 310.23871 c
106.95238 314.78687 108.79465 319.19562 111.13725 323.35388 c
113.47845 327.5137 116.31771 331.42233 119.51572 335.01047 c
122.71345 338.60022 126.2678 341.86975 130.03214 344.7941 c
133.79707 347.71982 137.77063 350.30124 141.82256 352.54987 c
145.87555 354.79938 150.00639 356.7171 154.11386 358.3382 c
158.22249 359.95969 162.30785 361.28537 166.30019 362.36169 c
170.29356 363.43811 174.19435 364.26566 177.96065 364.89288 c
181.72774 365.51999 185.36082 365.94702 188.83945 366.21887 c
192.31863 366.49051 195.64381 366.60706 198.80956 366.60721 c
201.97528 366.60706 205.30046 366.49051 208.77965 366.21887 c
212.25829 365.94702 215.89136 365.51999 219.65845 364.89288 c
223.42474 364.26566 227.32553 363.43811 231.31891 362.36169 c
235.31125 361.28537 239.39661 359.95969 243.50523 358.3382 c
247.6127 356.7171 251.74355 354.79938 255.79654 352.54987 c
259.84848 350.30124 263.82202 347.71982 267.58694 344.7941 c
271.35129 341.86975 274.90564 338.60022 278.10336 335.01047 c
281.30139 331.42233 284.14066 327.5137 286.48184 323.35388 c
288.82443 319.19562 290.66672 314.78687 291.9071 310.23871 c
293.14987 305.6915 293.78925 301.00656 293.78787 296.32059 c
h
293.78787 296.32059 m
S
199.22766 416.71521 m
208.4823 416.7175 217.73491 415.64432 226.71548 413.55841 c
235.69791 411.47641 244.40503 408.38422 252.61748 404.45221 c
260.83295 400.52255 268.55234 395.75693 275.63876 390.38916 c
282.72842 385.02185 289.18561 379.05597 294.96112 372.73761 c
300.73929 366.41827 305.83749 359.74875 310.27847 352.94769 c
314.72119 346.14484 318.50861 339.2113 321.71017 332.31702 c
324.9126 325.42078 327.53079 318.56363 329.65646 311.86258 c
331.78232 305.15979 333.41675 298.6124 334.65549 292.29077 c
335.89398 285.9678 336.73734 279.86978 337.27426 274.03098 c
337.8107 268.19125 338.04092 262.61002 338.04117 257.29642 c
338.04092 251.9828 337.8107 246.40157 337.27426 240.56183 c
336.73734 234.72304 335.89398 228.625 334.65549 222.30203 c
333.41675 215.98041 331.78232 209.43301 329.65646 202.73024 c
327.53079 196.02917 324.9126 189.17203 321.71017 182.27579 c
318.50861 175.3815 314.72119 168.44797 310.27847 161.64513 c
305.83749 154.84406 300.73929 148.17455 294.96112 141.85521 c
289.18561 135.53685 282.72842 129.57095 275.63876 124.20364 c
268.55234 118.83587 260.83295 114.07024 252.61748 110.14059 c
244.40503 106.2086 235.69791 103.11639 226.71548 101.03441 c
217.73491 98.948479 208.4823 97.875305 199.22766 97.877602 c
189.97302 97.875305 180.7204 98.948479 171.73984 101.03441 c
162.75742 103.11639 154.05029 106.2086 145.83784 110.14059 c
137.62238 114.07024 129.90297 118.83587 122.81654 124.20364 c
115.72691 129.57095 109.26972 135.53685 103.49419 141.85521 c
97.716019 148.17455 92.617813 154.84406 88.176842 161.64513 c
83.734138 168.44797 79.946716 175.3815 76.74514 182.27579 c
73.542725 189.17203 70.924538 196.02917 68.798851 202.73024 c
66.672997 209.43301 65.038574 215.98041 63.799835 222.30203 c
62.561352 228.625 61.717976 234.72304 61.181065 240.56183 c
60.644604 246.40157 60.414391 251.9828 60.414139 257.29642 c
60.414391 262.61002 60.644604 268.19125 61.181065 274.03098 c
61.717976 279.86978 62.561352 285.9678 63.799835 292.29077 c
65.038574 298.6124 66.672997 305.15979 68.798851 311.86258 c
70.924538 318.56363 73.542725 325.42078 76.74514 332.31702 c
79.946716 339.2113 83.734138 346.14484 88.176842 352.94769 c
92.617813 359.74875 97.716019 366.41827 103.49419 372.73761 c
109.26972 379.05597 115.72691 385.02185 122.81654 390.38916 c
129.90297 395.75693 137.62238 400.52255 145.83784 404.45221 c
154.05029 408.38422 162.75742 411.47641 171.73984 413.55841 c
180.7204 415.64432 189.97302 416.7175 199.22766 416.71521 c
h
199.22766 416.71521 m
S
316.4603 284.24231 m
316.46201 276.85696 315.67001 269.47324 314.13058 262.30661 c
312.59409 255.13852 310.31204 248.19011 307.41025 241.63646 c
304.51016 235.0804 300.99316 228.9202 297.03174 223.26514 c
293.07068 217.6075 288.66785 212.45457 284.00491 207.84563 c
279.34125 203.23456 274.41919 199.16612 269.39999 195.62216 c
264.37952 192.07681 259.26257 189.0544 254.17461 186.4995 c
249.08521 183.94392 244.02464 181.85457 239.07927 180.15823 c
234.13263 178.46178 229.30067 177.15749 224.63533 176.16896 c
219.96899 175.18063 215.46864 174.5076 211.15962 174.07915 c
206.84991 173.65103 202.73097 173.46733 198.80956 173.46712 c
194.88812 173.46733 190.76918 173.65103 186.45947 174.07915 c
182.15045 174.5076 177.6501 175.18063 172.98378 176.16896 c
168.31842 177.15749 163.48647 178.46178 158.53983 180.15823 c
153.59445 181.85457 148.53389 183.94392 143.44449 186.4995 c
138.35652 189.0544 133.23958 192.07681 128.2191 195.62216 c
123.19992 199.16612 118.27784 203.23456 113.61417 207.84563 c
108.95124 212.45457 104.54842 217.6075 100.58736 223.26514 c
96.625946 228.9202 93.108925 235.0804 90.208847 241.63646 c
87.307045 248.19011 85.025002 255.13852 83.48851 262.30661 c
81.949097 269.47324 81.157097 276.85696 81.158791 284.24231 c
81.157097 291.62762 81.949097 299.01135 83.48851 306.17798 c
85.025002 313.34607 87.307045 320.29449 90.208847 326.84814 c
93.108925 333.40421 96.625946 339.56439 100.58736 345.21945 c
104.54842 350.87711 108.95124 356.03003 113.61417 360.63898 c
118.27784 365.25003 123.19992 369.31848 128.2191 372.86243 c
133.23958 376.40778 138.35652 379.43021 143.44449 381.98511 c
148.53389 384.54068 153.59445 386.63004 158.53983 388.32635 c
163.48647 390.0228 168.31842 391.32712 172.98378 392.31564 c
177.6501 393.30396 182.15045 393.97699 186.45947 394.40546 c
190.76918 394.83356 194.88812 395.01727 198.80956 395.01749 c
202.73097 395.01727 206.84991 394.83356 211.15962 394.40546 c
215.46864 393.97699 219.96899 393.30396 224.63533 392.31564 c
229.30067 391.32712 234.13263 390.0228 239.07927 388.32635 c
244.02464 386.63004 249.08521 384.54068 254.17461 381.98511 c
259.26257 379.43021 264.37952 376.40778 269.39999 372.86243 c
274.41919 369.31848 279.34125 365.25003 284.00491 360.63898 c
288.66785 356.03003 293.07068 350.87711 297.03174 345.21945 c
300.99316 339.56439 304.51016 333.40421 307.41025 326.84814 c
310.31204 320.29449 312.59409 313.34607 314.13058 306.17798 c
315.67001 299.01135 316.46201 291.62762 316.4603 284.24231 c
h
316.4603 284.24231 m
S
235.83179 250.24953 m
235.83232 248.75702 235.5831 247.26485 235.09868 245.81653 c
234.61517 244.36794 233.89706 242.96371 232.98393 241.63928 c
232.07133 240.31438 230.9646 239.06946 229.71803 237.92662 c
228.47156 236.78326 227.08609 235.74191 225.61876 234.81049 c
224.1512 233.87863 222.60233 233.05643 221.02289 232.34023 c
219.44305 231.62375 217.83286 231.01295 216.23178 230.49663 c
214.63025 229.98016 213.0378 229.55794 211.4816 229.21512 c
209.92499 228.87228 208.40446 228.60869 206.93639 228.40892 c
205.46799 228.2092 204.05182 228.07318 202.69586 227.98659 c
201.33969 227.90007 200.04353 227.86295 198.80956 227.86292 c
197.57556 227.86295 196.27942 227.90007 194.92323 227.98659 c
193.56728 228.07318 192.15111 228.2092 190.68271 228.40892 c
189.21463 228.60869 187.69411 228.87228 186.13751 229.21512 c
184.5813 229.55794 182.98885 229.98016 181.38731 230.49663 c
179.78624 231.01295 178.17604 231.62375 176.59621 232.34023 c
175.01677 233.05643 173.4679 233.87863 172.00034 234.81049 c
170.533 235.74191 169.14754 236.78326 167.90106 237.92662 c
166.6545 239.06946 165.54776 240.31438 164.63516 241.63928 c
163.72203 242.96371 163.00392 244.36794 162.52042 245.81653 c
162.036 247.26485 161.78677 248.75702 161.78731 250.24953 c
161.78677 251.74203 162.036 253.23422 162.52042 254.68253 c
163.00392 256.13113 163.72203 257.53534 164.63516 258.85977 c
165.54776 260.18469 166.6545 261.4296 167.90106 262.57245 c
169.14754 263.71579 170.533 264.75714 172.00034 265.68857 c
173.4679 266.62042 175.01677 267.44263 176.59621 268.15881 c
178.17604 268.87531 179.78624 269.48611 181.38731 270.00244 c
182.98885 270.51889 184.5813 270.94113 186.13751 271.28394 c
187.69411 271.62677 189.21463 271.89035 190.68271 272.09015 c
192.15111 272.28986 193.56728 272.42587 194.92323 272.51245 c
196.27942 272.59897 197.57556 272.63611 198.80956 272.63614 c
200.04353 272.63611 201.33969 272.59897 202.69586 272.51245 c
204.05182 272.42587 205.46799 272.28986 206.93639 272.09015 c
208.40446 271.89035 209.92499 271.62677 211.4816 271.28394 c
213.0378 270.94113 214.63025 270.51889 216.23178 270.00244 c
217.83286 269.48611 219.44305 268.87531 221.02289 268.15881 c
222.60233 267.44263 224.1512 266.62042 225.61876 265.68857 c
227.08609 264.75714 228.47156 263.71579 229.71803 262.57245 c
230.9646 261.4296 232.07133 260.18469 232.98393 258.85977 c
233.89706 257.53534 234.61517 256.13113 235.09868 254.68253 c
235.5831 253.23422 235.83232 251.74203 235.83179 250.24953 c
h
235.83179 250.24953 m
S
198.80956 430.8688 m
200.99622 430.87009 203.1824 430.2785 205.30432 429.12863 c
207.42668 427.98093 209.48398 426.27634 211.42441 424.10883 c
213.36554 421.9426 215.18947 419.31552 216.86383 416.35654 c
218.53897 413.3978 220.06465 410.10907 221.42929 406.62607 c
222.79454 403.14252 223.99915 399.46594 225.04845 395.71683 c
226.09816 391.96677 226.99304 388.14462 227.74951 384.34415 c
228.50616 380.54257 229.12479 376.76257 229.62704 373.06857 c
230.12933 369.37366 230.51552 365.7644 230.8082 362.2796 c
231.10083 358.79404 231.30011 355.4325 231.42696 352.21384 c
231.55371 348.99469 231.60811 345.918 231.60817 342.98886 c
231.60811 340.05975 231.55371 336.98306 231.42696 333.76392 c
231.30011 330.54526 231.10083 327.18372 230.8082 323.69815 c
230.51552 320.21335 230.12933 316.6041 229.62704 312.90915 c
229.12479 309.21518 228.50616 305.43518 227.74951 301.63361 c
226.99304 297.83313 226.09816 294.01099 225.04845 290.26089 c
223.99915 286.51181 222.79454 282.83524 221.42929 279.35168 c
220.06465 275.86868 218.53897 272.57996 216.86383 269.62122 c
215.18947 266.66223 213.36554 264.03516 211.42441 261.86893 c
209.48398 259.70142 207.42668 257.99683 205.30432 256.84912 c
203.1824 255.69925 200.99622 255.10767 198.80956 255.10893 c
196.62288 255.10767 194.43669 255.69925 192.31477 256.84912 c
190.19241 257.99683 188.13512 259.70142 186.19469 261.86893 c
184.25356 264.03516 182.42963 266.66223 180.75526 269.62122 c
179.08014 272.57996 177.55444 275.86868 176.1898 279.35168 c
174.82455 282.83524 173.61995 286.51181 172.57065 290.26089 c
171.52094 294.01099 170.62605 297.83313 169.86958 301.63361 c
169.11293 305.43518 168.49431 309.21518 167.99205 312.90915 c
167.48976 316.6041 167.10358 320.21335 166.8109 323.69815 c
166.51826 327.18372 166.319 330.54526 166.19214 333.76392 c
166.06538 336.98306 166.01099 340.05975 166.01093 342.98886 c
166.01099 345.918 166.06538 348.99469 166.19214 352.21384 c
166.319 355.4325 166.51826 358.79404 166.8109 362.2796 c
167.10358 365.7644 167.48976 369.37366 167.99205 373.06857 c
168.49431 376.76257 169.11293 380.54257 169.86958 384.34415 c
170.62605 388.14462 171.52094 391.96677 172.57065 395.71683 c
173.61995 399.46594 174.82455 403.14252 176.1898 406.62607 c
177.55444 410.10907 179.08014 413.3978 180.75526 416.35654 c
182.42963 419.31552 184.25356 421.9426 186.19469 424.10883 c
188.13512 426.27634 190.19241 427.98093 192.31477 429.12863 c
194.43669 430.2785 196.62288 430.87009 198.80956 430.8688 c
h
198.80956 430.8688 m
S
1.4173229 w
198.80956 430.8688 m
203.04381 430.87009 207.27715 430.2785 211.38602 429.12863 c
215.49573 427.98093 219.47948 426.27634 223.23691 424.10883 c
226.99571 421.9426 230.52757 419.31552 233.76981 416.35654 c
237.01352 413.3978 239.96786 410.10907 242.61034 406.62607 c
245.25401 403.14252 247.58659 399.46594 249.61845 395.71683 c
251.65112 391.96677 253.38397 388.14462 254.84879 384.34415 c
256.314 380.54257 257.51187 376.76257 258.48444 373.06857 c
259.45709 369.37366 260.20486 365.7644 260.77164 362.2796 c
261.33829 358.79404 261.72415 355.4325 261.96979 352.21384 c
262.21524 348.99469 262.32056 345.918 262.32068 342.98886 c
262.32056 340.05975 262.21524 336.98306 261.96979 333.76392 c
261.72415 330.54526 261.33829 327.18372 260.77164 323.69815 c
260.20486 320.21335 259.45709 316.6041 258.48444 312.90915 c
257.51187 309.21518 256.314 305.43518 254.84879 301.63361 c
253.38397 297.83313 251.65112 294.01099 249.61845 290.26089 c
247.58659 286.51181 245.25401 282.83524 242.61034 279.35168 c
239.96786 275.86868 237.01352 272.57996 233.76981 269.62122 c
230.52757 266.66223 226.99571 264.03516 223.23691 261.86893 c
219.47948 259.70142 215.49573 257.99683 211.38602 256.84912 c
207.27715 255.69925 203.04381 255.10767 198.80956 255.10893 c
194.57529 255.10767 190.34195 255.69925 186.23308 256.84912 c
182.12337 257.99683 178.13962 259.70142 174.38219 261.86893 c
170.62338 264.03516 167.09152 266.66223 163.84929 269.62122 c
160.60558 272.57996 157.65123 275.86868 155.00876 279.35168 c
152.36508 282.83524 150.03252 286.51181 148.00064 290.26089 c
145.96797 294.01099 144.23512 297.83313 142.77031 301.63361 c
141.30511 305.43518 140.10722 309.21518 139.13466 312.90915 c
138.16202 316.6041 137.41422 320.21335 136.84746 323.69815 c
136.28082 327.18372 135.89496 330.54526 135.64931 333.76392 c
135.40385 336.98306 135.29852 340.05975 135.29842 342.98886 c
135.29852 345.918 135.40385 348.99469 135.64931 352.21384 c
135.89496 355.4325 136.28082 358.79404 136.84746 362.2796 c
137.41422 365.7644 138.16202 369.37366 139.13466 373.06857 c
140.10722 376.76257 141.30511 380.54257 142.77031 384.34415 c
144.23512 388.14462 145.96797 391.96677 148.00064 395.71683 c
150.03252 399.46594 152.36508 403.14252 155.00876 406.62607 c
157.65123 410.10907 160.60558 413.3978 163.84929 416.35654 c
167.09152 419.31552 170.62338 421.9426 174.38219 424.10883 c
178.13962 426.27634 182.12337 427.98093 186.23308 429.12863 c
190.34195 430.2785 194.57529 430.87009 198.80956 430.8688 c
h
198.80956 430.8688 m
S
198.80956 430.8688 m
199.57236 430.87009 200.33501 430.2785 201.07523 429.12863 c
201.8156 427.98093 202.53326 426.27634 203.21017 424.10883 c
203.88733 421.9426 204.52361 419.31552 205.1077 416.35654 c
205.69206 413.3978 206.22429 410.10907 206.70033 406.62607 c
207.17661 403.14252 207.59682 399.46594 207.96286 395.71683 c
208.32904 391.96677 208.64122 388.14462 208.90511 384.34415 c
209.16907 380.54257 209.38487 376.76257 209.56009 373.06857 c
209.73531 369.37366 209.87003 365.7644 209.97212 362.2796 c
210.0742 358.79404 210.14372 355.4325 210.18797 352.21384 c
210.23219 348.99469 210.25116 345.918 210.25119 342.98886 c
210.25116 340.05975 210.23219 336.98306 210.18797 333.76392 c
210.14372 330.54526 210.0742 327.18372 209.97212 323.69815 c
209.87003 320.21335 209.73531 316.6041 209.56009 312.90915 c
209.38487 309.21518 209.16907 305.43518 208.90511 301.63361 c
208.64122 297.83313 208.32904 294.01099 207.96286 290.26089 c
207.59682 286.51181 207.17661 282.83524 206.70033 279.35168 c
206.22429 275.86868 205.69206 272.57996 205.1077 269.62122 c
204.52361 266.66223 203.88733 264.03516 203.21017 261.86893 c
202.53326 259.70142 201.8156 257.99683 201.07523 256.84912 c
200.33501 255.69925 199.57236 255.10767 198.80956 255.10893 c
198.04674 255.10767 197.2841 255.69925 196.54388 256.84912 c
195.80351 257.99683 195.08583 259.70142 194.40892 261.86893 c
193.73177 264.03516 193.09549 266.66223 192.5114 269.62122 c
191.92703 272.57996 191.39481 275.86868 190.91876 279.35168 c
190.4425 282.83524 190.02228 286.51181 189.65623 290.26089 c
189.29005 294.01099 188.97787 297.83313 188.71399 301.63361 c
188.45003 305.43518 188.23422 309.21518 188.05902 312.90915 c
187.88379 316.6041 187.74907 320.21335 187.64697 323.69815 c
187.54489 327.18372 187.47537 330.54526 187.43112 333.76392 c
187.3869 336.98306 187.36794 340.05975 187.3679 342.98886 c
187.36794 345.918 187.3869 348.99469 187.43112 352.21384 c
187.47537 355.4325 187.54489 358.79404 187.64697 362.2796 c
187.74907 365.7644 187.88379 369.37366 188.05902 373.06857 c
188.23422 376.76257 188.45003 380.54257 188.71399 384.34415 c
188.97787 388.14462 189.29005 391.96677 189.65623 395.71683 c
190.02228 399.46594 190.4425 403.14252 190.91876 406.62607 c
191.39481 410.10907 191.92703 413.3978 192.5114 416.35654 c
193.09549 419.31552 193.73177 421.9426 194.40892 424.10883 c
195.08583 426.27634 195.80351 427.98093 196.54388 429.12863 c
197.2841 430.2785 198.04674 430.87009 198.80956 430.8688 c
h
198.80956 430.8688 m
S
287.14307 343.96231 m
287.14941 332.45319 284.86111 320.94913 280.4509 310.31854 c
276.05243 299.68307 269.53589 289.93039 261.39325 281.79672 c
253.25957 273.65405 243.5069 267.13754 232.87143 262.73907 c
222.24083 258.32883 210.73677 256.04053 199.22766 256.04691 c
187.71855 256.04053 176.21448 258.32883 165.58389 262.73907 c
154.94843 267.13754 145.19576 273.65405 137.06207 281.79672 c
128.91942 289.93039 122.40289 299.68307 118.00442 310.31854 c
113.59419 320.94913 111.30589 332.45319 111.31226 343.96231 c
111.30589 355.47141 113.59419 366.97549 118.00442 377.60608 c
122.40289 388.24155 128.91942 397.9942 137.06207 406.1279 c
145.19576 414.27054 154.94843 420.78708 165.58389 425.18555 c
176.21448 429.59576 187.71855 431.88406 199.22766 431.87772 c
210.73677 431.88406 222.24083 429.59576 232.87143 425.18555 c
243.5069 420.78708 253.25957 414.27054 261.39325 406.1279 c
269.53589 397.9942 276.05243 388.24155 280.4509 377.60608 c
284.86111 366.97549 287.14941 355.47141 287.14307 343.96231 c
h
287.14307 343.96231 m
S
Q
1.4173229 w
q
0 0 898.0304 249.89629 rc
1 0 0 -1 -110.60359 474.26529 cm
335.43106 392.03122 m
635.72632 392.03122 l
S
362.69186 414.38773 m
608.03821 414.38773 l
S
Q
1.4173229 w
q
202.83871 220.7484 m
547.94171 220.7484 l
547.94171 39.857571 l
202.83871 39.857571 l
h
202.83871 220.7484 m
W
204.12236 221.1555 m
320.33743 221.1555 l
320.33743 38.695847 l
204.12236 38.695847 l
h
204.12236 221.1555 m
W
0 0 898.0304 249.89629 rc
1 0 0 -0.78155965 -110.60359 399.16232 cm
545.13226 343.81458 m
545.1405 328.86566 542.16827 313.92331 536.43994 300.11548 c
530.72693 286.30133 522.26276 273.63382 511.68643 263.06918 c
501.1218 252.49286 488.45425 244.0287 474.64011 238.31563 c
460.83231 232.5873 445.88992 229.61508 430.94104 229.62334 c
415.99213 229.61508 401.04977 232.5873 387.24194 238.31563 c
373.4278 244.0287 360.76025 252.49286 350.19565 263.06918 c
339.61932 273.63382 331.15515 286.30133 325.44208 300.11548 c
319.71375 313.92331 316.74155 328.86566 316.74979 343.81458 c
316.74155 358.76349 319.71375 373.70584 325.44208 387.51367 c
331.15515 401.32782 339.61932 413.99533 350.19565 424.55997 c
360.76025 435.13626 373.4278 443.60043 387.24194 449.31351 c
401.04977 455.04184 415.99213 458.01407 430.94104 458.0058 c
445.88992 458.01407 460.83231 455.04184 474.64011 449.31351 c
488.45425 443.60043 501.1218 435.13626 511.68643 424.55997 c
522.26276 413.99533 530.72693 401.32782 536.43994 387.51367 c
542.16827 373.70584 545.1405 358.76349 545.13226 343.81458 c
h
545.13226 343.81458 m
S
Q
1.4173229 w
q
202.83871 220.7484 m
547.94171 220.7484 l
547.94171 39.857571 l
202.83871 39.857571 l
h
202.83871 220.7484 m
W
546.63739 220.90314 m
430.42233 220.90314 l
430.42233 38.443481 l
546.63739 38.443481 l
h
546.63739 220.90314 m
W
0 0 898.0304 249.89629 rc
-1 0 0 -0.78155965 1087.6633 399.10718 cm
771.43219 344.06693 m
771.44049 329.11801 768.46826 314.17566 762.73993 300.36783 c
757.02686 286.55368 748.56268 273.88617 737.98639 263.32153 c
727.42175 252.74522 714.75421 244.28107 700.94006 238.56799 c
687.13226 232.83966 672.18988 229.86745 657.24097 229.8757 c
642.29211 229.86745 627.34973 232.83966 613.54193 238.56799 c
599.72778 244.28107 587.06024 252.74522 576.49561 263.32153 c
565.91931 273.88617 557.45514 286.55368 551.74207 300.36783 c
546.01373 314.17566 543.0415 329.11801 543.04974 344.06693 c
543.0415 359.01584 546.01373 373.95819 551.74207 387.76602 c
557.45514 401.58017 565.91931 414.24768 576.49561 424.81232 c
587.06024 435.38864 599.72778 443.85281 613.54193 449.56586 c
627.34973 455.29419 642.29211 458.26642 657.24097 458.25815 c
672.18988 458.26642 687.13226 455.29419 700.94006 449.56586 c
714.75421 443.85281 727.42175 435.38864 737.98639 424.81232 c
748.56268 414.24768 757.02686 401.58017 762.73993 387.76602 c
768.46826 373.95819 771.44049 359.01584 771.43219 344.06693 c
h
771.43219 344.06693 m
S
Q
1.4173229 w
q
202.83871 220.7484 m
547.94171 220.7484 l
547.94171 39.857571 l
202.83871 39.857571 l
h
202.83871 220.7484 m
W
0 0 898.0304 249.89629 rc
1 0 0 -1 -110.60359 474.26529 cm
431.70316 254.74763 m
540.40088 254.74763 l
S
1.4173229 w
431.61319 433.17178 m
540.31091 433.17178 l
S
362.69186 272.75192 m
608.03821 272.75192 l
S
335.43106 295.5321 m
635.72632 295.5321 l
S
322.47632 319.72903 m
649.94855 319.72903 l
S
317.23392 344.46579 m
655.36945 344.46579 l
S
322.47632 369.53503 m
649.94855 369.53503 l
S
1 w
603.53015 344.46579 m
603.53186 337.65213 602.74054 330.83997 601.20251 324.22809 c
599.66736 317.61487 597.38733 311.20432 594.4881 305.15796 c
591.59058 299.10938 588.07666 293.42603 584.11877 288.20868 c
580.16119 282.98901 575.76227 278.23495 571.10352 273.98276 c
566.44397 269.72861 561.52625 265.9751 556.51147 262.70547 c
551.49542 259.43457 546.38306 256.64612 541.29956 254.28897 c
536.21466 251.93121 531.15857 250.0036 526.21759 248.43857 c
521.27533 246.87343 516.44763 245.67009 511.78641 244.75809 c
507.12421 243.84627 502.62784 243.22533 498.32263 242.83003 c
494.01672 242.43507 489.90143 242.26558 485.98346 242.2654 c
482.06552 242.26558 477.95023 242.43507 473.64432 242.83003 c
469.33911 243.22533 464.84274 243.84627 460.18054 244.75809 c
455.51932 245.67009 450.69165 246.87343 445.74936 248.43857 c
440.80838 250.0036 435.75229 251.93121 430.66739 254.28897 c
425.58392 256.64612 420.4715 259.43457 415.45547 262.70547 c
410.44073 265.9751 405.52301 269.72861 400.86346 273.98276 c
396.20465 278.23495 391.80573 282.98901 387.84818 288.20868 c
383.89026 293.42603 380.37634 299.10938 377.47885 305.15796 c
374.57959 311.20432 372.29959 317.61487 370.76443 324.22809 c
369.22641 330.83997 368.43509 337.65213 368.4368 344.46579 c
368.43509 351.27945 369.22641 358.09161 370.76443 364.70349 c
372.29959 371.31674 374.57959 377.72729 377.47885 383.77365 c
380.37634 389.8222 383.89026 395.50558 387.84818 400.7229 c
391.80573 405.9426 396.20465 410.69666 400.86346 414.94885 c
405.52301 419.20297 410.44073 422.95648 415.45547 426.22614 c
420.4715 429.49704 425.58392 432.28549 430.66739 434.64264 c
435.75229 437.00037 440.80838 438.92801 445.74936 440.49301 c
450.69165 442.05817 455.51932 443.26151 460.18054 444.17352 c
464.84274 445.08533 469.33911 445.70627 473.64432 446.10156 c
477.95023 446.49652 482.06552 446.66602 485.98346 446.6662 c
489.90143 446.66602 494.01672 446.49652 498.32263 446.10156 c
502.62784 445.70627 507.12421 445.08533 511.78641 444.17352 c
516.44763 443.26151 521.27533 442.05817 526.21759 440.49301 c
531.15857 438.92801 536.21466 437.00037 541.29956 434.64264 c
546.38306 432.28549 551.49542 429.49704 556.51147 426.22614 c
561.52625 422.95648 566.44397 419.20297 571.10352 414.94885 c
575.76227 410.69666 580.16119 405.9426 584.11877 400.7229 c
588.07666 395.50558 591.59058 389.8222 594.4881 383.77365 c
597.38733 377.72729 599.66736 371.31674 601.20251 364.70349 c
602.74054 358.09161 603.53186 351.27945 603.53015 344.46579 c
h
603.53015 344.46579 m
S
485.98346 446.6662 m
490.767 446.66766 495.5495 445.97968 500.19138 444.64243 c
504.8342 443.30771 509.33472 441.32538 513.57959 438.80463 c
517.82599 436.2854 521.81598 433.23026 525.47882 429.78906 c
529.14331 426.34821 532.4809 422.52356 535.46613 418.47299 c
538.45276 414.42178 541.08789 410.14609 543.38336 405.78604 c
545.67969 401.42487 547.63733 396.97992 549.29218 392.56012 c
550.94745 388.13907 552.30072 383.74307 553.39948 379.44714 c
554.49823 375.15012 555.34308 370.9527 555.98334 366.90002 c
556.62347 362.8465 557.05939 358.93716 557.33691 355.19403 c
557.6142 351.45029 557.73322 347.87225 557.73334 344.46579 c
557.73322 341.05936 557.6142 337.48132 557.33691 333.73758 c
557.05939 329.99445 556.62347 326.08508 555.98334 322.03156 c
555.34308 317.97888 554.49823 313.78149 553.39948 309.48444 c
552.30072 305.18854 550.94745 300.79254 549.29218 296.37149 c
547.63733 291.95169 545.67969 287.50674 543.38336 283.14557 c
541.08789 278.78552 538.45276 274.50983 535.46613 270.45862 c
532.4809 266.40802 529.14331 262.5834 525.47882 259.14252 c
521.81598 255.70134 517.82599 252.64619 513.57959 250.12697 c
509.33472 247.60623 504.8342 245.62389 500.19138 244.28917 c
495.5495 242.9519 490.767 242.26392 485.98346 242.2654 c
481.19995 242.26392 476.41745 242.9519 471.77557 244.28917 c
467.13275 245.62389 462.63223 247.60623 458.38736 250.12697 c
454.14096 252.64619 450.15097 255.70134 446.48813 259.14252 c
442.82364 262.5834 439.48605 266.40802 436.50082 270.45862 c
433.51419 274.50983 430.87903 278.78552 428.58359 283.14557 c
426.28723 287.50674 424.32959 291.95169 422.67477 296.37149 c
421.0195 300.79254 419.66623 305.18854 418.5675 309.48444 c
417.46869 313.78149 416.6239 317.97888 415.98361 322.03156 c
415.34348 326.08508 414.90753 329.99445 414.63004 333.73758 c
414.35272 337.48132 414.23373 341.05936 414.23361 344.46579 c
414.23373 347.87225 414.35272 351.45029 414.63004 355.19403 c
414.90753 358.93716 415.34348 362.8465 415.98361 366.90002 c
416.6239 370.9527 417.46869 375.15012 418.5675 379.44714 c
419.66623 383.74307 421.0195 388.13907 422.67477 392.56012 c
424.32959 396.97992 426.28723 401.42487 428.58359 405.78604 c
430.87903 410.14609 433.51419 414.42178 436.50082 418.47299 c
439.48605 422.52356 442.82364 426.34821 446.48813 429.78906 c
450.15097 433.23026 454.14096 436.2854 458.38736 438.80463 c
462.63223 441.32538 467.13275 443.30771 471.77557 444.64243 c
476.41745 445.97968 481.19995 446.66766 485.98346 446.6662 c
h
485.98346 446.6662 m
S
485.98346 446.6662 m
487.91068 446.66766 489.83746 445.97968 491.70758 444.64243 c
493.57809 443.30771 495.3913 441.32538 497.10147 438.80463 c
498.81229 436.2854 500.41977 433.23026 501.89548 429.78906 c
503.37183 426.34821 504.71649 422.52356 505.91919 418.47299 c
507.12247 414.42178 508.18411 410.14609 509.10892 405.78604 c
510.03406 401.42487 510.82275 396.97992 511.48947 392.56012 c
512.15637 388.13907 512.70154 383.74307 513.14423 379.44714 c
513.58691 375.15012 513.92725 370.9527 514.18524 366.90002 c
514.44312 362.8465 514.61877 358.93716 514.73059 355.19403 c
514.84229 351.45029 514.8902 347.87225 514.89026 344.46579 c
514.8902 341.05936 514.84229 337.48132 514.73059 333.73758 c
514.61877 329.99445 514.44312 326.08508 514.18524 322.03156 c
513.92725 317.97888 513.58691 313.78149 513.14423 309.48444 c
512.70154 305.18854 512.15637 300.79254 511.48947 296.37149 c
510.82275 291.95169 510.03406 287.50674 509.10892 283.14557 c
508.18411 278.78552 507.12247 274.50983 505.91919 270.45862 c
504.71649 266.40802 503.37183 262.5834 501.89548 259.14252 c
500.41977 255.70134 498.81229 252.64619 497.10147 250.12697 c
495.3913 247.60623 493.57809 245.62389 491.70758 244.28917 c
489.83746 242.9519 487.91068 242.26392 485.98346 242.2654 c
484.05627 242.26392 482.12949 242.9519 480.25937 244.28917 c
478.38882 245.62389 476.57565 247.60623 474.86548 250.12697 c
473.15466 252.64619 471.54715 255.70134 470.07147 259.14252 c
468.59512 262.5834 467.25046 266.40802 466.04776 270.45862 c
464.84448 274.50983 463.78284 278.78552 462.85803 283.14557 c
461.93289 287.50674 461.14417 291.95169 460.47748 296.37149 c
459.81061 300.79254 459.26538 305.18854 458.82272 309.48444 c
458.38004 313.78149 458.03967 317.97888 457.78171 322.03156 c
457.5238 326.08508 457.34818 329.99445 457.23639 333.73758 c
457.12466 337.48132 457.07672 341.05936 457.07666 344.46579 c
457.07672 347.87225 457.12466 351.45029 457.23639 355.19403 c
457.34818 358.93716 457.5238 362.8465 457.78171 366.90002 c
458.03967 370.9527 458.38004 375.15012 458.82272 379.44714 c
459.26538 383.74307 459.81061 388.13907 460.47748 392.56012 c
461.14417 396.97992 461.93289 401.42487 462.85803 405.78604 c
463.78284 410.14609 464.84448 414.42178 466.04776 418.47299 c
467.25046 422.52356 468.59512 426.34821 470.07147 429.78906 c
471.54715 433.23026 473.15466 436.2854 474.86548 438.80463 c
476.57565 441.32538 478.38882 443.30771 480.25937 444.64243 c
482.12949 445.97968 484.05627 446.66766 485.98346 446.6662 c
h
485.98346 446.6662 m
S
Q
1 w
1 1 1 sc
q
0 0 898.0304 249.89629 rc
1 0 0 -1 -110.60359 474.26529 cm
429.59427 253.48949 m
544.69373 253.77248 l
S
424.26599 434.08963 m
545.1178 434.35992 l
S
1.4173229 w
0 0 0 sc
686.20496 263.82462 m
1007.8826 263.82462 l
S
686.20496 424.10001 m
1007.8705 424.10001 l
S
686.20496 283.60855 m
1007.9161 283.60855 l
S
686.20496 304.04297 m
1007.8589 304.04297 l
S
686.20496 325.39053 m
1007.4185 325.39053 l
S
686.20496 345.26028 m
1007.7629 345.26028 l
S
686.20496 365.45663 m
1007.7051 365.45663 l
S
686.20496 385.65793 m
1007.7907 385.65793 l
S
686.20496 404.7446 m
1007.6326 404.7446 l
S
1.4173229 w
685.99957 263.93127 m
685.99957 423.88385 l
S
1.4173229 w
707.4613 263.93127 m
707.4613 423.88385 l
S
728.92303 263.93127 m
728.92303 423.88385 l
S
750.38477 263.93127 m
750.38477 423.88385 l
S
771.84644 263.93127 m
771.84644 423.88385 l
S
793.30817 263.93127 m
793.30817 423.88385 l
S
814.7699 263.93127 m
814.7699 423.88385 l
S
836.23163 263.93127 m
836.23163 423.88385 l
S
857.69336 263.93127 m
857.69336 423.88385 l
S
879.15503 263.93127 m
879.15503 423.88385 l
S
900.61676 263.93127 m
900.61676 423.88385 l
S
922.07849 263.93127 m
922.07849 423.88385 l
S
943.54022 263.93127 m
943.54022 423.88385 l
S
965.00189 263.93127 m
965.00189 423.88385 l
S
986.46362 263.93127 m
986.46362 423.88385 l
S
1007.9254 263.93127 m
1007.9254 423.88385 l
S
1.4173229 w
1 0 0.35294119 sc
681.01593 259.21295 m
600.14587 211.11832 576.43427 221.54813 563.2746 243.68851 c
S
CM
449.14493 223.94579 m
449.95047 231.90512 l
454.87817 229.52521 l
h
449.14493 223.94579 m
f
0.35433072 w
1 0 0 -1 -110.60359 474.26529 cm
559.74854 250.3195 m
560.55408 242.36017 l
565.48175 244.7401 l
h
559.74854 250.3195 m
S
1.4173229 w
681.16772 427.43124 m
600.29767 475.52588 576.58612 465.09607 563.42639 442.95569 c
S
CM
449.29675 37.940613 m
455.03 32.361195 l
450.10229 29.981272 l
h
449.29675 37.940613 m
f
0.35433072 w
1 0 0 -1 -110.60359 474.26529 cm
559.90033 436.32468 m
565.63361 441.90408 l
560.70587 444.28403 l
h
559.90033 436.32468 m
S
0 0 0 sc
0 i
/F1.1[ 18 0 0 -18 0 0]sf
166.09473 466.43106 m
(!"#$)[ 5.994141 10.010742 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
193.09473 466.43106 m
(!")[ 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
435.17648 467.07794 m
(!%#$)[ 5.994141 10.010742 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
462.17648 467.07794 m
(!"#$)[ 18.000000 18.000000 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
795.50781 467.07794 m
(!&#$)[ 5.994141 9.000000 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
821.49707 467.07794 m
(%&'\()[ 18.000000 18.000000 18.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
