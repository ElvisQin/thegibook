%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.2 (Build 17C88) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 681 325
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 681 325
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ANYOOY+Helvetica
%!FontType1-1.0: ANYOOY+Helvetica 1.0000.0.0000
14 dict begin/FontName /ANYOOY+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /hyphen put
dup 34 /X put
dup 35 /F put
dup 36 /A put
dup 37 /C put
dup 38 /E put
dup 39 /space put
dup 40 /one put
dup 41 /plus put
dup 42 /Z put
dup 43 /four put
dup 44 /zero put
dup 45 /five put
dup 46 /Y put
dup 47 /two put
dup 48 /three put
dup 49 /u put
dup 50 /v put
dup 51 /y put
dup 52 /z put
dup 53 /x put
dup 54 /parenleft put
dup 55 /a put
dup 56 /parenright put
dup 57 /b put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000036C6670676D000000000000040800000A1D676C79660000000000000E28000013A06865616400000000000021C80000003668686561000000000000220000000024686D747800000000000022240000006C6C6F63610000000000002290000000386D61787000000000000022C8000000207072657000000000000022E8000003CF05C0001005BD00280580001A042F001F0000FFD90000FFDA0000FFD9FE55FFE605C70010FE6DFFF1033B000000B9000000B902FE3F3C00C0008D009B00AF000600A800C00028005E009800C9016A00B9015C00B400D6011E002E0080000400B8004C00CC01FFFFD1006600A400AF007400C2009500B1000C0028006D0015004C008E0125FF7A000C0040004C00620084FFA200240038008600BD0039005E008E00EDFFA9FFB300400052005500AA00AB00C200CB012302B10413FFAEFFE4000800510074008400AA00D1FF4CFFAF0012002C004200500051008400BE012503DAFF680018003B0098009C009F00A100C100EC018201B4FF68FF76FFD0FFE100020018001C00530053007D01B401E103AF0486FF9CFFEAFFFE001F0028002A00520060009300A300AA00AF00AF00C001000145016B0174019301950240028202B404850517FEFD00060029004700470048006F008800B400B900C400F200F901EF02180310037403C5FF35FFF3000B004B004C0052005500650076007600870087008E00AB00BB0106013001430150017D0194019501D3022A025502580277027802E6034E035C037903D3047304B2058C0598060BFEF5FFBBFFC7FFD50017001D005B0072007E009C00C200D000F400FA01030106011C0125013B0142015E015E0180019B02B901A101B9025001C001D002AA01DF01E301EF01FB0205020C0215022B0274029302AB02C202CE03690395039903DF03F5043E050205A105E5062507DBFE62FE89FECEFF3BFFE1FFF800030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3011C00ED00F800F901000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F602000200020902110217021C02530262026D028002D50280031B032A034A035A03AF03AF03C803D603FB03FB04050413041504470449008C046D049A049A04A604A804B204CF0539053E054E055605800589058C036305D105D6067E068E06B206EF06F00728074C076F078C00B400C900C000C10000000000000000000000000004012400AF0032006E0063014401620096014301A10161008A00740064018801EF01700028FF5D037E0347023000AA00BE007B0062009A007D0089035C00A1FFD803AA00D70093006C0000008000A70442001D0597001D00820030002A


B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592D00000000020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA0007000000562BBA0002000500562B3031331121112711211142048EB8FCE205BDFA43B8044DFBB300000001008EFE5E026105D50014003E4009141109131617171A09BB019C00080014019C400E400080044C10191516F7216C5218B80732852B2B4EF44DED1ADD1AEDD4ED4E456544E6003F3F3130010207061110171613232E01272627263510373613025E9D2F475132937992462938160B5D3BBB05D5FECF90DBFEE1FEDEF094FEEAE47E6C94A8574F0128E7930125000000010044FE5E021705D500130036400C081100131517171A044C0F13BB019C00000009019C400908191415F7213F7B182B2B4EF44DEDD4EDDDED4E456544E6003F3F3130131237361110272603331E01171E011510070603479F2E46513293799A412630295E3BBAFE5E01368ED701210121F0940116F673657DF471FED8E895FEDE00000001005C0000046F0415000B0037401C037A050220080B7A0A0A0D17171A067A040920030A7A00190C3F52182B4E10F44DF43CFD3CF44E456544E6003F4DF43CFD3CF431301335211133112115211123115C01B4AB01B4FE



2B01103C2B2B2B2B818181005D015D2416333237363D010E010F0106070615013637363534262322070607233E01333217161511141633323637150E0123222726270E012322263534363713010E724E5F59962168326D62315301B43E150C837A8D3B210AA805F7A3BD767517250C1E112A2C265D2A160937CE7C95BDBA978ACF5A2C49A691151C060E0D1C2F67016C082C182D5C534C2A53C69B484898FD971C220303850C06422340486AB58895A41301E40000020076FFDE042505C20011001E0070402EA607A71CD71C0322080F1E02050000171D0507110A1E1D0B0B1427081A201A2E102E01290011191F208721BD5D182B2B4EF43C4DFDE4E44E10F64DED003FED3F3FED3F113911393130437940181216060A1606142601120A142601150717260113091E26002B2B012B2B8181005D1333113E01333212111402232227262715232436353426232206151417163376AF3BA460C8F9F6DA7A543239A6026691918D7BB92647C205C2FDEB4D51FEEDFEF4FEFEB03B234D897DE8BEA9DEB6D1975EB1000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC011E012BC5FE6CC0FE75042FFC980368FBD1042F0001000B000003E1042F000B002300B10A083FB00633B100063FB0033301B00C2FB00DD600B1000A1112B102083939303113331B0117090123090123011EE9F6F9DBFE970179E6FEF6FEFEE40179042FFE87017905FDFBFDDB0192FE6E02250000020015FE4903E804490018001900CA406E8A158818A71803070617063812481258126707770377078C1498009705981597169717A800A8


00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/hyphen 5 def
/zero 6 def
/one 7 def
/two 8 def
/three 9 def
/four 10 def
/five 11 def
/A 12 def
/C 13 def
/E 14 def
/F 15 def
/X 16 def
/Y 17 def
/Z 18 def
/a 19 def
/b 20 def
/u 21 def
/v 22 def
/x 23 def
/y 24 def
/z 25 def
/u20B8 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926597C1DAC1BA3798797E796C89ECAEC4435602C69EF8DE4A69515109638DF86B62BEC4457DD235B018F13E50EF61B04CEB8E3062CDF2AFC8BADD47299D478A46B2E1E6448B7A26CF42AB37E06DC278FC1822864D5079D7823450BD66FA46070696AE612902D7110D04B8B5EE1B8A98821C9DD334B6044EA127AE4B1F87A5EA984FC0C52C37685B5A54AE285EDFFA1F5702D279479AD03200C6346C9C031BD04D7930AEB7DE52105622D1730814DE7D6EFB13F098104BFC526B71E48CF1FD4CA8A79B00BCEF5AAD69BDB311D78359DEB32E81F7A09F687DA8F1677B9875383FD014F28BDD72602790E6BCDE52B72F416C359D768094777E080168C8ABF5B7494ABA7F6F40F7281A973DDC9DB6B66E8968D8A6E2084E5D7E92DD3BB14CA1C2B526C4849F008FF18EDA9271DBA1AB39D1F739AF3F561713841558F976D37E5F40ADCA28121135CA31716877018A120C1225E3871EF4BA5213DE26724AF5F00AD20584A6D5A069C3EB5AB037C6D086C433C488B633D4C18A879235D93DC2A4EC409DD434DA0234680B515801ED8EE0125A596658387589D25E19EA33EF1738E964176E4C9AB20E697C796F784512BD066D8091C82262BF8C0425E8406D04BFA8A3A770F305EC6BFDC8553CE620E131C39BBF5E5362BE34BC07834C99203495EB088B15F7B85EEE4AF11CF0AA079A91C37FBCBE2C4F289CC57651FF2B00CCC2BC1B47A6DAA142FFE93AA5263726B903EED070DD660E1449C73A35E04769B584E9E3FB
9E45573B97A3E46EA6EEF6F1B86CDBD173FD65A41449E58B545D80CF0391B63A9F41FDAC9095D604DBD75BFB0DB7A5AD483294978312E52AEA04E454B53934924D1C44942BA7B42210A0D7FD61E2F5AFEE84EFBF1DD60F8ED8498167CBC187B6E35EDBB6C2AF2A4DBD3506E229D200E6893EF242BB041557D9CB897333505CDE5DAD079287C0EBDF0525F007D4FAF5270D22EFCA3EE82FF4E91026D74B3E59FCF4C883E567D5445520740E5C6647F1B431D9C02594E9958F3FF820E5A2E6458E6002660737DF6963FFBCF12618A921B5AFEE3B57C7A83A6264289429EE183E375A5CBB5AD91B7E057BD78B9A43C49B5D2D889B95F6000AAF016DE9E6E5D23F824485DF713BC779156DF8554E78D40F46394196186AB9CE9DD4FE7B65E0F0D4F49C7B1CEBBF2DADAED0BE77CE6293A6210A8C6D21534BBAF82D073FFCF5B4D6B319642C9E812E28B4AF61CA3B38F709C8899D2F9EAFDB27118872BB395ACFBB1F227882F5130C88927090F28071AD5C8CE5BC75866999CBEEEC5FAE1CBBFCDEAB7503356C50F3196A5EA39404195A29ACC1834D997910F415762E6E5B90692282897CA6A8E7981F8DB6A34CA31C2D26853EDBF4688576C7F0EC8480D02F08F9377ED88D6F5FB1DB2F82219198248BCA8EAA17CFC08A6C03ECF7548C10993DAC1E7A02F6193965EA1C3DE906215DC2B211B01B8DEDAD92AD29D8AA87FF1FA8D73F495FCFFA0BF23D5A1A612B457033965689BCA35DB876451F90A4FA7CC425D679A381BA0155A20648C2B0B9B00B10BFC9D7B8D7339FD98A37DC189320C5E25690D4105AAE69298E0F849D4D994A40F7352F27F01256A8D70F4B74EA7870456B1D8848E61681C0D8928D7ABF88DC929B4633DC96A8E83E2CDBEDE9D3C84EBF42AAE7A67E92534942802CD6CD3B0A420C20ED091C3B4515394CC683731362B01A62621FFDDF6ACC29C7E66EFA003A0BFA07529759BD87F904AFD8841E70DE9BA588A75A5B8EDEDDD71C1F6D72FB2472FE46895D924A372F6CD7031830C2CD244F46EB3057832BA3DD192F5378538D659E714A5C9D17419255627B220192C35FC8460DAC7ADFF9F30301263AE43F1990496003A602F4E53B04559BCADF5AF14FA6C444F29154D032ED394E328A7D4B11AF88BE774F33DD5C53C263D45338539B544A32133AB189BB1CEAE4B6EA30616CD01015D5DDB178F652CB8A65416D8F0F82CC1BAED70EC008167004CECA011768324437ACACC5463DD076895B76DE11B72BADBDC14DAC8B3665B519A529874881EB85C04169E15126DCFC8C6DA04D553E132297B87DF8BC9FAE85BAE73A2310ECBF20F65A208AF08E6B408C921701D379ACEFB91720B489E8267D02BEBE0FB6C8385E8464F9F80AF06A0B5631CC21F43C5836BDAFBED5DADA9E2F66476477ACCCE5B953DDA66E9FC800D9411A08F2C764A594
505BD26560195600F14B8B3F73296288EFA5A5AA62AE79C6FB351D5F96955EA7A8314181309ABE49408EEC0274DBCA13727C9517EF78FEA01617F4245B381405AE5181CC3A741285EB52B1F3AE0DECA6FA4D6DF5337D8438BE966516541A431DACB32071AF46CB6A72ADAD017F177764180D3FB9D65878AB56B7C762BC21F70AE47F99DD1D4687513314C1CFCBED56A54FC39DF8A60C7848C7660093F995B846713AF63AB4FC9C7F1459FCE6513D966907265A4E83E517798CA0508C7DA9A7F59B987D7AFA90FC7CAB9B9CC1636D0675B96E9DEF568243A6CF2C9EE7157ECD19F164802864EF1F7EB2FB10EF404CE02EEC3702280C61597CE4E92FE7870795BBE35F03BA587DEA59CFAD6C3C9336465CB7228E26B41F56BFD0B751BF381AD85C8FDE84266C8EEBC64A671FDD3025FE1729AFD19B2B60C24BF0F06FA8194A06A9821C87DEF1E337975B5840CBD4D755DC5AEB0C190870D28F43F93B3BDA2977B2A5500026097E33C2A51616BA1615E74D9F8CAACCB33C813B435895200E86FB4AC1771EFC51A710182DFC11F0236318C9D1568F9F922CF1709F6CD763CF1222BDA969DDE9EB3ED9252D1E045B7E00877FFE03D21D0BB8DF17F2705F0E4B7389F99D38D886114FA1B11AC90B0F1C5474E9948FA3D62F1B78F8FCF8736DA79B8F62ACF7933F4ECF83A459486B8AF05048E0F31EB138B0A2E4ED9A049707531E8C27C49E1F2210370929FE7DEFF43419CE311EE3A0D59D77807E2A2C2F8CA39BAECD5FFD47BE202960062694BFA04DF5FBF34C3F4CAF97A167D252695559E9A055BA89CE377391950AFD924A77B13549E46E412A45E3F55ED7EA6944C27B3E4AC55962C4A5EDA1484523018A99394B1B608AA1A3D76076D94F01E2D73AA0175D159F207F18497504A268CFA713FDE68F81DE5AA351B7BA6BF5B4FBA636A9A122010A4340075155464E2B9242B66B22F2620FA39AD552A8CB05CE1406E79C144654C2D5D666D038BBA7027AF035963BFD14B12132D525CF8E697B06FDB9D9F55498F1FA2AD3835E06B620260F270B951B794547A9CD1C2782E101AD398C7D62614A31A7DD74B90B9BB98CE4C690BF4F5D6F192D15E418575AD76DBB97D8FDD0B04BE31BC3C9B5BECFB6B3822A85F869FAE0E118EAF35E98E3D6E4A5A2DE53138D6015F9097CF32EC72A5EA7238477E1C62FABA6949A05A0AF873C1F2326B60A87BD5DE81C4B91F49C2130B158A43E236A3A2186F27640A51C74FFBF04815ECE954079F210543FCDA9BA5F6B935ABE47AD3DE7E816BFFA4A8262268AA23BE80CAA7FD6A663332618F471070EA8682D8359E775F2864B07D1CDBE6D4A719490D24F7742603DEB6B2A81E56410F67379ECA128E7D169C66C46EAC30E3A7E5D94C72B6DF7DBF9F770D09D9041B995B12D79C6C092AE60A957D9EB723A2EB101EF645F26BC
D6B9890D95D7777949B8C144F173E8071F0FBD21BA24D39C02C4FED9AE8EB9821834A2E03DADAFFE9FA386F449C9DFE244513CE95B0F45BB15C9CAC2B0A2C807FDB7F6D9314DE5ED75D85476556627F0D427BE2A92251CACB6B87306C23F74F1942F0B4855E79250794663AB9F11434AF6A0E546B835248928185845A6ED65D757105BAA99F0ED6F43F25407517BB1D065A022AF99A43C6B0B5031B83F29D05477B0E74DAC476BABA2520DF1D7EA3722F4B96515116EE8028DF9F0C37FA79715287220402FFDC8531607B7CB93791BF93F3FF9EBB9A5BB20D1AE82481966996E61A510C650A4715B6D4192614CD255873EC6AD20841D763A3E02CB5D7959AC7BD40B172D48571D96691A47CE8CB2FD414101EC66B66823B90C01D800A35DCED71DAD38A81828869DB12E9C279BAEE57387109511BED7FA6B6E757A7DB3617D05138F90B66B4240FD1F0C231360CFDC1F5A7CBD69B3CEFF8BFAFE9FFDDC451C50AF94911026A78F624F01C2865C56945C249D45DDB4B7D3BFDA795FAB6EE2AF4E956AFDD57EB18F3ACAEC41D658BB37F7544DDC6AADB67D088D873129A23B2EF923D686CFCB713704ADC8113E9B68D45FC5AD7ADD497631AC7E8B7836404D5BD147BEFCC68E4B3CAEF88445BDF5CCD9941D9859DF8B20374B715F99493E43D134889DCE4FD3BBC7A98E3AC6A9F357B6EBF3ADC41726EA456F60BBF209DF736E9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ANYOOY+Helvetica cguidfix
/F1.1/ANYOOY+Helvetica renmfont
%RBIBeginFontSubset: DLTVRQ+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 12/29/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1262 putdup 2 /gid4696 putdup 3 /gid4788 putdup 4 /gid5230 putdup 5 /gid5462 putdup 6 /gid7413 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA66220E183507C2670BFFEE9B10FE56DD319F768A004B17A59025002D9D95F7E82180B7E78244889EE81177017741CF63E954EC0AAC8B981AE8B7CAFDB1C89BFFACDD7B4760D51191028A9FDF86066C7680AC05E8950A62AF4482915B85D91F34DFC987F7960A33E208B6E1D319F15A56EA2C28FF17ED839B8B06FB94B5DBEB97A5CF46C206EBC84A44ADA177ACB3C051DE6820F1B5C1B983A4F2723961C8487ECFB53B47B8DBFD987DC6B21E535D063B3CA7A67E3CBC0A11C71B4460961AD5A6FB505DD84EE4C697EAA4F76A0AD5DFDBA66CB417AAEC5BF2BA5656640550C54723C32BB9D7B84F87D59F76D81BE74686CCAB2583A55F284FEF46DE9A5244492DEA40433578AFD0623D632C9B2ED190051FCCA9DE0FDADA64684400C61896B19D15C135D19B2FD53A9050CAFE24533B12DCDC79C2499A929D90DFD1A1BAF3D28AF28AC22B64F6E8710E022DF5C28EE630A673AC87BCAB0B2A022EF9DF1E0BBC92B6493B43A040462BDCAF057A0F9CF6C23DEC2D33B10712E70B105615011A728F6A74F6D4683ABED71FB74714B606F6C296C39D3D10714A14FB8A3BB30EFA3B14A4FFFF180D728D23BE301413BCE8F828FD6EB77CD57325B5A34CC379A76C682570ED226D8D8CAF2415EE557486C83DA5F87CDD682EF0CB2EB69F9A0F98AD4120A4C3937C7D75D711B6E1BE1A923EB2FAD5C3317DF9D66A9C055558C0A13F9CF3223B535CEA41A4608EC82F3AE59D58AE6A709F982A7BC7A3A860F63EBF8DF58B7D2611F1E740E2C2B7674B85ED8AC8B8C938DDC0162E60E58F3AAC85458FCE160A8D7831DE16F56A4D47301249B05550C005764AADE02718573A531876AE377E914CAD0115E7D5F1B730B16E0E0F63211E59BD9D554291ECE6C871F0FF11734CF2725924CD1FB71F629BE004EAE4B2AA7D0DEFCA342959CAAB65A61AE85299CF9DACCA63A30E851043BD80C613A75941D4130A250D916889116269ED8C40E1F1FA604E7BA1F45D5EB19C000C4BE0C0EF6B4B5F2E07AA3790CDD2E0651E05926F8453828F90DD04D4FA043E396324E383D5DAB96584083BEAD26186CF4B3EE0D14307BF9486736572F2DC56A0755D43B6C26E348337DA9544CF9931A49079629610AEFB8335D23A9616E8F440E48FAE58497C9B5675B2DB78CFE66C8512BA034542DF806255781ABB91ECCA3847E85092003F4DBEC7AB8951584F361E54E6B38D84280109E56C0B677332793386672C3943A6789C206BCB91B9CA47E30DE939EEE57B57BBADFAB877AAF0748BDF9DCA5BFFD3CE7F53BE05DF1E59CEDE2B4FE05BEB2D755BC4A07F5DBC3CD4BACA088BCD6E7D6817134E7AF63590712D846CCFF1498FDCB8A0B6DEC29491873DB1617E63C767D4B7185D9CACD47D2E0DC466BA651EA7120BE0FF592C8D89BB86A7A98931DD95195A32A5E5B0DB29F8AF1585ABB0C06ED202BC8A163800C6F17F32D20212C5BEF0BBCD75F9363A986E5CA961B3F8477FEABAE687DA628CB74A9644DBFD5552275CF2FD75B2926BC486B3F7D26367F519825659E854A8BD6FC9A913029760E1EA544EC704F81842933AA77C49A741849ECB4CA28AA23702E4D98D2422EFCA8DCA5811FD66296D64C2B1EE5F516D0950B885A08DF04BE7D07453E9684DFCA568D764CC55B35460966B6775B2E69A8EFC3D87696CA3E637EF2232E19E75BE5AC49DA59E6F8E54C2B8990836D63A42EDFB072FD3939AEC4E26DE178C5B8749964C5174D1D4CE38EC97B62E95ABA03B8D7C2AFDAE84BE94683E75162290E6028192ED2E33796EE4F483520897A541AC22943124F8D0B7150DD70E91AC227BCA0F01E2065C40E4B2640022036B8BF18E4A5C016F54E3549428C299F80BA958AFCA928426C0E3CC396D5F4900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: DLTVRQ+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /DLTVRQ+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid1262 putdup 34 /gid4788 putdup 35 /gid5230 putdup 36 /gid7413 putdup 37 /gid5462 putdup 38 /gid4696 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 8 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1262 {(\001) 0 $SP} putdup /gid4696 {(\002) 0 $SP} putdup /gid4788 {(\003) 0 $SP} putdup /gid5230 {(\004) 0 $SP} putdup /gid5462 {(\005) 0 $SP} putdup /gid7413 {(\006) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/DLTVRQ+PingFangSC-Regular cguidfix
/F2.1/DLTVRQ+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.10588235 0.63137257 0.88627452 sc
q
0 0 680.55298 324.9574 rc
233.51225 216.25 m
341.51224 216.25 l
341.51224 108.25 l
233.51225 108.25 l
h
233.51225 216.25 m
f*
0.5 w
1 J
1 j
3 M
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
386.07501 126.25 m
494.07501 126.25 l
494.07501 234.25 l
386.07501 234.25 l
h
386.07501 126.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
436.155 177.25 m
(!")[ 3.330089 0.000000 ] xS
1.4173229 w
2 J
0 j
10 M
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
213.56517 194.53973 m
313.73065 194.53973 l
255.91435 266.71646 l
155.74889 266.71646 l
h
213.56517 194.53973 m
S
1 1 1 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
426.35501 189.3905 m
(#$%&'\()[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0.60000002 i
0.10588235 0.63137257 0.88627452 sc
CM
341.51224 216.25 m
449.51224 216.25 l
449.51224 108.25 l
341.51224 108.25 l
h
341.51224 216.25 m
f*
0.5 w
1 J
1 j
3 M
[] 0 d
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
494.07501 126.25 m
602.07501 126.25 l
602.07501 234.25 l
494.07501 234.25 l
h
494.07501 126.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
542.755 177.25 m
(\)*)[ 5.839862 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
533.27502 189.3905 m
(#$%&'+)[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0.60000002 i
0.10588235 0.63137257 0.88627452 sc
CM
449.51224 216.25 m
557.51227 216.25 l
557.51227 108.25 l
449.51224 108.25 l
h
449.51224 216.25 m
f*
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
602.07501 126.25 m
710.07501 126.25 l
710.07501 234.25 l
602.07501 234.25 l
h
602.07501 126.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
650.64502 177.25 m
(\)")[ 5.839862 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
641.005 189.3905 m
(#$%&',)[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0.60000002 i
0.10588235 0.63137257 0.88627452 sc
CM
557.51227 216.25 m
665.51227 216.25 l
665.51227 108.25 l
557.51227 108.25 l
h
557.51227 216.25 m
f*
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
710.07501 126.25 m
818.07501 126.25 l
818.07501 234.25 l
710.07501 234.25 l
h
710.07501 126.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
760.255 177.25 m
(!*)[ 3.330089 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
749.255 189.3905 m
(#$%&'-)[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0.60000002 i
0.10588235 0.63137257 0.88627452 sc
CM
341.51224 324.25 m
449.51224 324.25 l
449.51224 216.25 l
341.51224 216.25 l
h
341.51224 324.25 m
f*
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
494.07501 18.25 m
602.07501 18.25 l
602.07501 126.25 l
494.07501 126.25 l
h
494.07501 18.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
542.76501 69.25 m
(\).)[ 5.839862 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
533.60791 81.3713 m
(#$%&'/)[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0.60000002 i
0.10588235 0.63137257 0.88627452 sc
CM
341.51224 108.25 m
449.51224 108.25 l
449.51224 0.25 l
341.51224 0.25 l
h
341.51224 108.25 m
f*
1 1 1 sc
1 0 0 -1 -152.56274 342.5 cm
494.07501 234.25 m
602.07501 234.25 l
602.07501 342.25 l
494.07501 342.25 l
h
494.07501 234.25 m
S
0 i
/F1.1[ 10.000032 0 0 -10.000032 0 0]sf
544.26501 285.25 m
(!.)[ 3.330089 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
533.495 298.11148 m
(#$%&'0)[ 6.673828 8.003906 8.666016 8.003906 3.333984 0.000000 ] xS
0 0 0 sc
/F1.1[ 15.8742 0 0 -15.8742 0 0]sf
569.65851 248.5426 m
(1)s
592.17859 271.04257 m
(2)s
0.60000002 i
573.25702 268 m
573.25702 256.04001 l
S
CM
416.91925 86.459999 m
420.69424 94.010002 l
424.46924 86.459999 l
416.91925 86.459999 l
f
1 0 0 -1 -152.56274 342.5 cm
573.25702 268 m
585.21698 268 l
S
CM
432.65424 78.275002 m
440.20425 74.5 l
432.65424 70.724998 l
432.65424 78.275002 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
785.65851 140.5426 m
(1)s
808.17859 163.04257 m
(2)s
0.60000002 i
789.25702 160 m
789.25702 148.03999 l
S
CM
632.91925 194.46001 m
636.69427 202.00999 l
640.46924 194.46001 l
632.91925 194.46001 l
f
1 0 0 -1 -152.56274 342.5 cm
789.25702 160 m
801.21698 160 l
S
CM
648.65424 186.27499 m
656.20422 182.5 l
648.65424 178.72501 l
648.65424 186.27499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
677.65851 140.5426 m
(1)s
700.17859 163.04257 m
(2)s
0.60000002 i
681.25702 160 m
681.25702 148.03999 l
S
CM
524.91925 194.46001 m
528.69427 202.00999 l
532.46924 194.46001 l
524.91925 194.46001 l
f
1 0 0 -1 -152.56274 342.5 cm
681.25702 160 m
693.21698 160 l
S
CM
540.65424 186.27499 m
548.20422 182.5 l
540.65424 178.72501 l
540.65424 186.27499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
569.65851 140.5426 m
(1)s
592.17859 163.04257 m
(2)s
0.60000002 i
573.25702 160 m
573.25702 148.03999 l
S
CM
416.91925 194.46001 m
420.69424 202.00999 l
424.46924 194.46001 l
416.91925 194.46001 l
f
1 0 0 -1 -152.56274 342.5 cm
573.25702 160 m
585.21698 160 l
S
CM
432.65424 186.27499 m
440.20425 182.5 l
432.65424 178.72501 l
432.65424 186.27499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
569.65851 32.542599 m
(1)s
592.17859 55.042568 m
(2)s
0.60000002 i
573.25702 52 m
573.25702 40.040001 l
S
CM
416.91925 302.45999 m
420.69424 310.01001 l
424.46924 302.45999 l
416.91925 302.45999 l
f
1 0 0 -1 -152.56274 342.5 cm
573.25702 52 m
585.21698 52 l
S
CM
432.65424 294.27499 m
440.20425 290.5 l
432.65424 286.72501 l
432.65424 294.27499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
461.65808 140.5426 m
(1)s
484.17819 163.04257 m
(2)s
0.60000002 i
465.25659 160 m
465.25659 148.03999 l
S
CM
308.91885 194.46001 m
312.69385 202.00999 l
316.46884 194.46001 l
308.91885 194.46001 l
f
1 0 0 -1 -152.56274 342.5 cm
465.25659 160 m
477.21661 160 l
S
CM
324.65384 186.27499 m
332.20386 182.5 l
324.65384 178.72501 l
324.65384 186.27499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
392.01648 202.49001 m
(3)s
414.24661 228.29257 m
(4)s
0.60000002 i
395.07501 225.25 m
395.07501 213.28999 l
S
CM
238.73724 129.21001 m
242.51225 136.75999 l
246.28725 129.21001 l
238.73724 129.21001 l
f
1 0 0 -1 -152.56274 342.5 cm
395.07501 225.25 m
407.035 225.25 l
S
CM
254.47224 121.025 m
262.02225 117.25 l
254.47224 113.475 l
254.47224 121.025 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
500.01648 202.49001 m
(3)s
522.06659 228.29257 m
(5)s
0.60000002 i
503.07501 225.25 m
503.07501 213.28999 l
S
CM
346.73724 129.21001 m
350.51224 136.75999 l
354.28726 129.21001 l
346.73724 129.21001 l
f
1 0 0 -1 -152.56274 342.5 cm
503.07501 225.25 m
515.03497 225.25 l
S
CM
362.47226 121.025 m
370.02225 117.25 l
362.47226 113.475 l
362.47226 121.025 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
608.01648 202.49001 m
(3)s
630.04498 228.29257 m
(!4)[ 5.286233 0.000000 ] xS
0.60000002 i
611.07501 225.25 m
611.07501 213.28999 l
S
CM
454.73724 129.21001 m
458.51224 136.75999 l
462.28726 129.21001 l
454.73724 129.21001 l
f
1 0 0 -1 -152.56274 342.5 cm
611.07501 225.25 m
623.03497 225.25 l
S
CM
470.47226 121.025 m
478.02225 117.25 l
470.47226 113.475 l
470.47226 121.025 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
718.69849 202.49001 m
(3)s
740.547 228.29257 m
(!5)[ 5.286233 0.000000 ] xS
0.60000002 i
721.75702 225.25 m
721.75702 213.28999 l
S
CM
565.41925 129.21001 m
569.19427 136.75999 l
572.96924 129.21001 l
565.41925 129.21001 l
f
1 0 0 -1 -152.56274 342.5 cm
721.75702 225.25 m
733.71698 225.25 l
S
CM
581.15424 121.025 m
588.70422 117.25 l
581.15424 113.475 l
581.15424 121.025 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
500.18649 310.48999 m
(4)s
522.06659 336.29257 m
(5)s
0.60000002 i
503.07501 333.25 m
503.07501 321.29001 l
S
CM
346.73724 21.209999 m
350.51224 28.76 l
354.28726 21.209999 l
346.73724 21.209999 l
f
1 0 0 -1 -152.56274 342.5 cm
503.07501 333.25 m
515.03497 333.25 l
S
CM
362.47226 13.025 m
370.02225 9.25 l
362.47226 5.4749999 l
362.47226 13.025 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
498.16647 94.489998 m
(!4)[ 5.286233 0.000000 ] xS
522.06659 120.29257 m
(5)s
0.60000002 i
503.07501 117.25 m
503.07501 105.29 l
S
CM
346.73724 237.21001 m
350.51224 244.75999 l
354.28726 237.21001 l
346.73724 237.21001 l
f
1 0 0 -1 -152.56274 342.5 cm
503.07501 117.25 m
515.03497 117.25 l
S
CM
362.47226 229.02499 m
370.02225 225.25 l
362.47226 221.47501 l
362.47226 229.02499 l
f
0 i
1 0 0 -1 -152.56274 342.5 cm
/F1.1[ 18 0 0 -18 0 0]sf
157.56274 332.40063 m
(678')[ 5.994141 10.010742 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
184.56274 332.40063 m
(!"#$)[ 18.000000 18.000000 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
378.19003 332.40063 m
(698')[ 5.994141 10.010742 5.994141 0.000000 ] xS
/F2.1[ 18 0 0 -18 0 0]sf
405.19003 332.40063 m
(%&#$)[ 18.000000 18.000000 18.000000 0.000000 ] xS
1.4173229 w
2 J
0 j
10 M
0.60000002 i
212.9462 93.783546 m
313.11166 93.783546 l
255.29538 165.96027 l
155.12991 165.96027 l
h
212.9462 93.783546 m
S
313.71503 93.854591 m
313.71503 194.43591 l
S
256.19476 266.41928 m
313.30142 195.05421 l
S
[
4
4
] 0 d
212.75616 93.854591 m
212.75616 194.43591 l
S
[] 0 d
0.4000048 0.80004358 0.99893916 sc
186.73965 180.79254 m
278.24295 180.79254 l
S
CM
26.659357 161.70746 m
34.176899 164.44363 l
34.176899 158.9713 l
h
133.19775 161.70746 m
125.68021 158.9713 l
125.68021 164.44363 l
h
133.19775 161.70746 m
f
0.35433072 w
1 0 0 -1 -152.56274 342.5 cm
179.22211 180.79254 m
186.73965 178.05637 l
186.73965 183.5287 l
h
285.7605 180.79254 m
278.24295 183.5287 l
278.24295 178.05637 l
h
285.7605 180.79254 m
S
/Cs2 SC
10 0 0 2 76 214 cm
BI
/Width 30
/Height 6
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
VuN[pVuN[pgA_3+o$IEjrre>8s69=-s*t
~> %APLeod
EI
15 0 0 101 73 113 cm
BI
/Width 45
/Height 303
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
_Z'l#pA\7:s0q1-s2+dCY3#[]aT$D3s8N#9s2G!Ir;Q_5d/S49s'EqLh=SYc`W$Cunc)q>s*rW"@EnhN
j2Cu:rt(d[s's=RJ(FXCe,O..s8)]7s2b3RpAFr$c2W(=s*rW"J(FX+bl?,]a8a6\'?fhD?H`@uf)L6N
s*rW"A^17@h8fQ:rt^OHs(K^XJ(FXLf)L6Ns*E2p@EniDqo\r^ru(5"s'O"MI+A7Hf)L6Ns*rW"J(FX+
bQ#TLb5]Zb)85>8?H`@uf)L6Ns*rW"J(FXLf)KO4s+K%Is3(E^He&.6dJn^Is*rW"J(FXLf)L6Ns*`Gt
?d/Q7ps&iaru^7os'EnKIb"IJf)L6Ns*rW"J(FXLf)L6Ns'NtL\*)$9cMo)kjo8`5s*rW"J(FXLf)L6N
s*rW"J(FXLf)Ka;s)lfjrr1:EdJkNjrr6i^s)c]hJ(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"?-E9(o[*Wc
s!?7ds'EnKJ(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FX.c2X^%d/VMn.%T8qA'P%'f)L6Ns*rW"J(FXL
f)L6Ns*rW"J(FXLf)KpBs(TgZqYenCeGh&mr;U9Os*<,oJ(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FXL
f)K(#s3^>bs4%'!b3o:9bQ!(Cs*rW"J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FX2c2X*ce,Rqt/rSH`
B[6X-f)L6Ns*rW"J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"He&.)c2[D4f)OA%1%"f:?d/Otec1-Ms*rW"
J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FXLf)K(#s2OHWs4@9*^$>W(bl<1Ds*rW"J(FXLf)K7)s$O['
6c/jj_Z*HQs*rW"J(FXLf)L6Ns(fs\K\+fTfDd[Sec/jrs(TgZC!Zfnci7_*s%p`81qioG^&Kq&s$+@"
C!Zfnci7_*s(TgZB?pN[b5^`$g&Ke+2t-VCSDX@3h>`brs-;F?Q/2J*h>_KBs%1308]C^$`W',as-;F?
Q/2J*h>`brs-;F?QeqbjnCdi\rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>P
f)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6N
s.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV
%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"
J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXi
ho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cb
li2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6N
s*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ub
s2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3
J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXL
f)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6
rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ic
s*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"
SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I
_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXL
f)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t
`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3
s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"
J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b
`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>P
f)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6N
s.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV
%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"
J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXi
ho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cb
li2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6N
s*rW"SDV9b`Batg>&>C+THJHO+EsJ+CQ$.t_uL5p49/H5!*=[N=+C9<A&SGd!"C>=!*=[N=+C9PJ,hrH
`;mgV%4F===+C9PJ,iZ$!(188!6'Bs@#:C;Q+fGI^-7gr9ouTuI`;<r_s@>Pf)L6Ns*rW"SDV9b`W$Cb
li2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6N
s*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ub
s2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3
J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXL
f)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6
rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ic
s*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"
SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I
_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXL
f)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t
`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3
s*rW"J(FXLf)M8t`;b>Co`*b>s5!>Ih=Ua'o`*b>s5!>Ih=Ua'o`*b>s5!>Ih=Ua'o`*b>s5!>Ih=Ua'
o`*b>s5!>Ih=U`Hj8X#Ds)-3`DUAE=g&Kn#s5!>Ih=Ua'o`*b>s5!>Ih=Ua'o`*b>s5!>Ih=Ua'o`*b>
s5!>Ih=Ua'o`*b>s5!;Os5!>Ih=U_sG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:
f)KpEs)uunG1Q\:f)KpEs)uun>0R"-_>cR4s#S!r8B1[Qf)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpE
s)uunG1Q\:f)KpEs)uunG1Q\:f)KpE#6/kts)uunIs0ECG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:
f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs'!YH3l1hW_>cR4s%(00G1Q\:f)KpEs)uunG1Q\:f)KpE
s)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:ecu.tf)KpEs*o4Cs)uunG1Q\:f)KpEs)uunG1Q\:
f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)Jpts#S!r3l1hW_>d'Gs)uunG1Q\:f)KpE
s)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1HltG1Q\:f)L5Cf)KpEs)uunG1Q\:
f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q[sbl9`?s#S!r3l1he`rC55
s)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)uunG1Q\:f)KpEs)urts)uunG1Q]4rscm3
s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"
J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b
`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>P
f)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6N
s.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV
%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"
J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXi
ho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cb
li2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6N
s*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ub
s2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,QlrosICrXQg2rdNDsIb"FHec)&qs8N#^
s5<nR!<1gCs8M!:!"C>=!*=[N=+C9PJ,hrHrW)rRn,NCGhuNWSrn[&Cro)i:%4F===+C9PJ,iZ$!(18q
!<1gCs8M!8!;ccqh=(CCiSjhH-p.K2J,iZ$!*=[N6Y$)qrn[&Cro)c8qZ-WOn,NCGiW'E949/H5!*=[N
=+C9<A,ZK-h=(CCiSX_5_>a2ts8MfR_%)[AcX=6?@(5'%\);G?g&Ahep[A.]pu'!-rscm3s*rW"J(FXL
f)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6
rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ic
s*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"
SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I
_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXL
f)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t
`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3
s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"
J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b
`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>P
f)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6N
s.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV
%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"
J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXi
ho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cb
li2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6N
s*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ub
s2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3
J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXL
f)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6
rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"SDV9b`W$Cbli2Ic
s*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs2G!I_s@>Pf)L6Ns*rW"
SDV9b`W$Cbli2Ics*rW"J(FXiho,Q6rscm3s*rW"J(FXLf)M8t`;dgV%E%N3J(FXLf)L6Ns.%ubs4[K3
meQmBg])oYs+Au(K@p3Vf`-TVs('CS5f3Od_Z)m<s%g]8K@p3Vf`-TVs+Au(K@p3Yf`07cg&K\(1kF6X
?H`@ed/S%2s)69aDp\M`aT"35s#7[l2no;Z_Z+Q$s)69aDp\N&d/Rq/s'3bImJ5H8fDdSCli1;7s*rW"
J(FXLf)L6Ns(9RV8]:X#`;`EIs&I/?J(FXLf)L6Ns*rW"B[6X9g=H;Us"X'?s'a1PHe&.Gf)L6Ns*rW"
J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FX+bl>lSf)O8"/sG,kB$UF+f)L6Ns*rW"J(FXLf)L6Ns*rW"
J(FXLf)L6Ns*rW"H.;k)c2[M8f)O8"/'m\a?HiG!f)L6Ns*rW"J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"
A'P%Ehp_VTs"!pDs(BXWGLQSAf)L6Ns*rW"J(FXLf)L6Ns*rW"J(FXLf)L6Ns'EqLf(%5hdJkVjir<K3
s*rW"J(FXLf)L6Ns*rW"J(FXLf)L6Ns*rW"FOU8,d/X%Ce,Rhq-/8%k?-E7tf)L6Ns*rW"J(FXLf)L6N
s*rW"J(FXLf)K.&s/tJ1s3^imrr<"=dJn78s*rW"J(FXLf)L6Ns*rW"J(FXLf)L3Ls'EqLiq:[ucMnun
kPno5s*rW"J(FXLf)L6Ns*rW"J(FXLf)KX8s*N;@s3CWdkP,!_bQ!%As*rW"J(FXLf)L6Ns*rW"J(FX+
bl>B@c2Yue*.c]@Cs`33f)L6Ns*rW"J(FXLf)L-Js'NtLmJ5$,bPrHtli1;7s*rW"J(FXLf)L6Ns*rW"
B[?^;g<0H=ru(A's'a1PHe&.Gf)L6Ns*rW"J(FX*bQ#cRb5]Q_(6dPRB$UF+f)L6Ns*rW"H.;k)c2[M8
b5]Q_'@?7K?HiG!f)L6Ns*rW"A'P%Fi5bl=rtG5,s(BXWGLQSAf)L6Ns'EqLfCHu^`W$LFir<H2s*rW"
FOL2+d/X%Ca8a-Y%GULS?H`@uf)K.&s0(S's2G!Irr<">df4=7s'EnKiq:7i_Z'kJkPn>ts*N83s2+d@
kP,!]bQ#9?_>h:M"I.aBmeO^!J,
~> %APLeod
EI
10 0 0 2 76 111 cm
BI
/Width 30
/Height 6
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
gA_33p!E`:s/5mps/5mps*t
~> %APLeod
EI
1.4173229 w
/Cs1 SC
0.4000048 0.80004358 0.99893916 sc
1 0 0 -1 -152.56274 342.5 cm
208.02138 212.44508 m
255.73422 152.81929 l
S
CM
50.761719 124.18528 m
53.322254 131.76443 l
57.594994 128.34538 l
h
107.86838 195.55034 m
105.30785 187.97118 l
101.03511 191.39024 l
h
107.86838 195.55034 m
f
0.35433072 w
1 0 0 -1 -152.56274 342.5 cm
203.32448 218.31471 m
205.88501 210.73557 l
210.15775 214.15462 l
h
260.43112 146.94966 m
257.87061 154.52882 l
253.59785 151.10976 l
h
260.43112 146.94966 m
S
0 0 0 sc
0 i
/F1.1[ 15.874 0 0 -15.874 0 0]sf
197.36673 229.84993 m
(!4)[ 5.286166 0.000000 ] xS
250.64873 142.1062 m
(\)4)[ 9.270168 0.000000 ] xS
226.36974 123.73761 m
(\)3)[ 9.270168 0.000000 ] xS
225.76157 241.77666 m
(!3)[ 5.286166 0.000000 ] xS
162.86607 184.65868 m
(!5)[ 5.286166 0.000000 ] xS
292.22266 184.73698 m
(\)5)[ 9.270168 0.000000 ] xS
1.4173229 w
0.60000002 i
154.75807 165.88835 m
255.58617 165.88835 l
255.58617 266.71646 l
154.75807 266.71646 l
h
154.75807 165.88835 m
S
ep
end
%%Trailer
%%EOF
