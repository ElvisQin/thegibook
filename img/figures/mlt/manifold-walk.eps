%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 514 239
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 514 239
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: NLTLHU+Helvetica
%!FontType1-1.0: NLTLHU+Helvetica 1.0000.0.0000
14 dict begin/FontName /NLTLHU+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /x put
dup 34 /two put
dup 35 /one put
dup 36 /three put
dup 37 /four put
dup 38 /parenleft put
dup 39 /parenright put
dup 40 /C put
dup 41 /underscore put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/C 7 def
/underscore 8 def
/x 9 def
/u20B8 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D184194DC83C1FA8CC47E0FA3502698ED749907FE4D5A0F8823ADB9FED67C3EB209665DC2531F3E7B9C105852DE6D94CD503F07FCE430C1EC82A169B45C5B92CFB88C2AF0E7FD994B4C83C2E1B992A4F79250273607C991600EDFE5048E8455254A2DAE4DD9D2C035441DF7495716C6B3FE39A0BE5AA3FFB6885F2E630A4F886E93249D59E38573DDEA847096EC2328E7EE929E5FDC13B7B5B3DBB5EF2EACC21C1DB477060D2AB7845171400A3B72F932B044F51D58E55FD9FA9EA5CA78E701155948C859D1CBBDE56E98702D3B2F0D04AFEBDD461895B64A04750F2BEDF43C19A426551CEDE1C016695237DDA3298DEA3C798D1FFED609B6FE4FE3645267735BDE948501EA90CD3933736408185A124BAF79C76B9D1C38FD482E025FDE39E0691861A1C01CA04E9FCB404727E6E4EA9F729C6834F33819402B71239F3174EF49CD8C4DCDC57C4A38EFA6721D9C33AD83B0FB4231D316A6C3F35E41148AD5CEFA97306D10449958073C80629B3316A1EAA8203B1BB2E23AF48E1E976BA1508DBEC469E9A719F224AD149EF3608434AB391E78FE4D056FEEF788F45FA6B3C44A90D658ABDDCAEE4382D96D9C89DFA0583B3B4406DE092BB7FB9E73B83DF68B9BBBD3795B192AA7A0D0C64606A81E489695ED628AEBC62BE7A36AC92FD695452CB38EC1D7CECD634FF40B9584D0C59B1279BABBCA3525A75CB61B6F735E1082C272793777701

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NLTLHU+Helvetica cguidfix
/F1.1/NLTLHU+Helvetica renmfont
%RBIBeginFontSubset: WPXVGJ+PingFangSC-Regular
%!FontType1-1.0: AAAAAF+PingFangHK-Regular 001.003%%CreationDate: 7/27/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAF+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid3 putdup 2 /cid11 putdup 3 /cid12 putdup 4 /cid19 putdup 5 /cid32 putdup 6 /cid68 putdup 7 /cid69 putdup 8 /cid2228 putdup 9 /cid2468 putdup 10 /cid2599 putdup 11 /cid3979 putdup 12 /cid4197 putdup 13 /cid4457 putdup 14 /cid5087 putdup 15 /cid6776 putdup 16 /cid7612 putdup 17 /cid43466 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6D97DA4F9D0B7B8E3ED0D6C2A78456C76B9C46E093EBE8A0B6046A77D5C0274440824A9536CC9DFBE621977FF6118320E382965E69C00687C7FB4738515F7314DAEBC519F13B547240A8AA9C9A46A036505D8E44CFDA38238B143F144B565284546AC9B32E539CD690B41B631E0D9E9E1E0E5D7D6793B5781B5D616316F67438D1308D524B81D6A2372103B5A17214224C8277EA4F4B726FF5707A0B23DBFE033FC45DC70348D7D22F4C0B6492F57162486FBF8C105548D0AB3C9799248AADC8C58E6C4A95E10272F3EEFC86BB3AEF7E1189A8074E609C377CF7F3EF298188062721A5CFD7FACE877984B10248D81DAEEE9B40CB1AA062AC7F3FCF95FDE416806965CBA3342142F3E76C9A8507CEBD122E0DA321A645D24996707984CEF7B9E5F653AD3F57DCBD867C42135E742F4FD62391DA6AA50533C84BD601BE2739A4BC6FC5982AC437260518495F1B83247B3E8CA8024E16973DF7B6975AD454FA30D61A4DB7740C9BE855312447A620F9329103904802BB420748C92C6ECD933ADA431C57684898A69E7269626C5B7BA0F0F354548A059F7C96875DD0D54ABF9CDCA2562B26FFCE1C100F7AF49753FBD718002956674B32B3491B7D4E07B190B2C3D8FD5A07984CAD8B6AC68C98BB8FE5B2476D33FDB3BBCC392F5AA1426260D19F0B0C2B42EEC7A633A07B8C38209300AE63A15A7D181496D61D0FFA7E34F5D0935B62E6DA94F81890272D15ABCB88BD6EC8E25235DBC6C433F1B55A79D5E06C61D67B93BC4FC537483F64E2F66D5A652B79219BCB301C7CCC2231E4F75EF0647D6BD6BB82B0753FCBD533660A3334076F9BBDBDD35460FB9C5DD5AD8A7CFB12BD936AFDEB3BE6901E81E2A0310068E99F6A4B648D56D52FBC5CD565FE82631841BBE8C8E28497030D14EE2244BB9D21D6200EC9020F789D6C5AD185DAC26C02DF080F8F192FFE5D06470E7CD2B151035718E67122E3A59D887644B9DBC3F6476AAD01B289DDAE0652DE57B21AF5ECC655206BFFE374D0A34B1AB884A0618392A58030CCB55339B9CE65898D77DFDEA281CC21942B6261BA808493388B32894F651341EFECDF3D11C94F085BA201F2FCFB3693FFBB79695FFE69D294E17C54F60F5FE50F9BF086B8A4B3EE5A8A2C4A0EA3C2146DF89A4A1466C41E8433BA79381217DDA94199B18632B765DBB6C6063C73E6D3D8DF7DCBE706CFAC1F9688A552571E1D3D4D06FBB2C213A0E87684233C5BAF0729C9158CCBD1DE53DA59E57C53FDC0A8285DE042200B3F867C58525B708EE83AD4B0BB6D03E5668ED261C3EB9AB3FD60B8F0F4BA2E6C0F75E0CCF12816962A42E0518DD73F1FF0C36DBD59449B810DFD13040E86FC11DCBAAF47008C74C0035ADA5B3C932AB97B0A798CC6C7100D94DE854DB95F890011C0E39B69E0DF744259DCF3F2F253662D3C42408349DBCFDB928E04738BB349BF6F460B1B614BBBC4C4B3C2BD7966AF0D2EC66B525212A49FE0F13DBE447C1B5E347EC2DA8519CEB471858927E18E53C3D696D4DD59A45D3CB9E9ADBC3504483A6446002612583BB1E375BA5BE1BFEE0BF1CA2CD78DDC1355D7C005250BB8538183DBDBED9193BD0D499ACFE13A564455C477A94064C35658FB98716DD8399DCE7A719848EFA08C6FE8C4F12B2D6B5AF2BF2B74FDC70F424D519E6143ECCF2A4677F2416FE6CAD2828DC2A25CA573CF4353A8D3F52B59869FB8A7F0DD6CB1E5D4FA496681A2F0FD6FD2D1BAFD5B5E0C1694F7C92D83695EDE358906E1CA3D23AB13F8DE26ABEC816C2BE7273AE29B91EEE2B509A36ABA9704CE75F0C1E8ACB4AB215C6553505FAB0C89B8ED5F9FE5893210D9EF836C8F1FA14A84A5F6D6D2D231AE5596B45855F58B2DF2BAEC610F45EF026D9AB3F47AB4D1C958D9CCC1AC06C64E229ADB93D394F9A71F3414FD2B07556D47763B5655FA3110771346110C2EBC2017507C83EAED130A6173DB44FB56E5560CBE4568CF37E6920AE4350A50286C9BA4B52C5F81F29D3189B8A600A245CD28214D84AA201EFA2F85FE5367C1673F2F777953EB643E4443EE4CC9794092AF8ECE8ADC3C9A3880F4C2007E618C81354C467836A8C753C42268D71B8C5A652752573961445FE6DD3AD94AE2ABC745DE5323D467A334166A94E602481654E5370CBDE592CDAF11F9FBA2B4502C76631A95976B71B4EBFD7F0A595E2A40831211720C560A7F41FD83A5D4882692CB5111B480DB6063D7CEC5720BFCC50E38779C8C537ECBF9190AD8FC5776050C06C6721F27C75DBD8DED1A50CF484FE26F07DE86AF6B91E6F9EE93EC2C721113A154C2F11004B32F0B5ABBB631F3E90295A0D61CFFFC9C7D92806E4E1DEA4335771429C2F095A601A242BA55BD6C71832931F81514AB6DD4E128869743C6348C6986601CFBEB00A6BFF41154574F28C3547B3574C7D77BD75D00D3C43498E41E3983E8293A73195F1015B95777FCCC81CB6D71F0F6581B31BD3364F4BF4CCDE304685D0CDC6CD19BDC47AB5A82A7A40142874F4AE55118EA3FE22AD6A5425ECB539EB2EDAB0B51F1D804867B7E5C347C09E0E41AD700C5B156451E257CDAAB6961A07D3AE15C7D46F00E02EB63F22FDF9838BE17208E20F46BC404FCC40D1809CB0D8CA09D1AAB3D0E3492BC45EF89C95EA16F0727C4E008A495D275D026058F051B0080E6710072E4F7A3F7A59128574F6F409CE6D7A278068B56CDBD4C2E3731C241541E65F87FE2532172E7BD19A16365D78DE2A9C616FDBA52D2D7FCC202FB0FAE90F921ED8CF2F944EAAD68F99F8E35E5A83AC5CBF6F445831D973E3F469D8DAB56C7D4A1BCD03310F030C9E7CD8078B1B3040893E8B971415F7F381ECCB38650978E770E44D2E47A8E9960F1474F5B82616FF1C0B9908E714B8DE4334343D5FB799FCDBB5B5EDA584584F5FAD639DA6EE3EAC1726057B379F839C6D9D440D6891D8F94C0389C2C2FD834E42300A55176D1743A7D2CF2CFAD0670369CF49FA64F2BA5D585E3A7651AD6FCA5FDBBB58EA893147C1EB8805580FCE392EC40AE79530507C03F5EA3559984C6FC6949492CC30D7A402EF98BC4332B01390547CA2EBE93240DA006C16E36A843CECD27107A8C3BBCC80997708B54EA46261C58DEF92BF348CF8FE82FC684D044AB472AFC561D0CFC60A26DD5512A289E0FFA54E004575C1A30EE08030C8CB191844B1CBEF67F2E3DB52D5385B83D5759ED1EB4289673F5A0E57FE5E4A9E367CB3CB6695C4BE1E0F67813F3692282DE4F2A040636C543EB7634C60825FC8380151DAA858258EA95B2D70EAF4614D0A4B280FE37E2ED2A7E6B8D43763E869D57BDE45E944362261C6B70ED1CFEFB6F4489884C0CB0DBEF81A14468D32608B68339B93863D7CBB9224532C0C2231EE985B1F7DE9018280ED06B533E9A4B8E465CFB150C5355AF13E6598EC60931680C15F26C82149A9586C5EB5EF256A7EBB8FE080A774D835245C728B72C32A696F2A3A0B0719EC9DBED21A84D53E597B113E99C7C74CC4D2483120ABB0F8EDCF6CA6F752FB46B31B3DE73E4E106B90F22364DCA7495CB47176EC24808B0B5EF6CEB9C7056A7D0F8E188D071A2A1AF65191B0FBCB856474C1D326D04EB440C3EDA51F81E5E0575BEF68B486EC7B6A5F733AF1BC32216DE9560C4F27DC31EBB7B7641470D26071216F480DA581C64DF6534CC4BB1DF0C0C3B586393EE16FB08E880FA5B32E537946B35E01D57C69A65C7323B08135096AC067C2A2513C92527FD1F4A1C1B409DBFECEF23C1BE3293DBECBDA5B0FE6113DA7537B85065A786FA3786A4AD47DB23DB985CF569E8B4A6F0C4E1E953C4FC0DA48F785A59550819ECA3867046B56873FA4D7EEA307C031D4D6CC2AABD279D38DC854749800CBDF35B5CD23CAD78A0D3826573005CA97492225B63D6D4E3E932CF9F0FEDB3EDA1EEC3C4A4F10508DA2819E41291BCD4363091856380876F198D91FB3B4826AF66BEAC59B9CE7384EB868C4987222ADCCC5083FAB136FA51653D775C8304AD52B47AFED8227009FE603C393D8CF439C012A3F428418FA71BC35D3B63F6EAB2BF0C45D65BE53D5A0506573E9AD8BC5682204E5547E8A9D510ED1443A890EF1D6D1DFC16790B2403DA43F527A40B01B68BB59213F252F65EA7D359A04062A051C97C0F312C6B2D7526A402A76FB969B2CC4E3CCC74F159215074975B26E957CF17F11AD90C6980F42C17368DF4739527932B601CA1DC77EB45D4999EF9026C0435E7190A99B480A6A828DE698F6A0786000EE193710928E21BEB14910D2EF3D1345C56C0408F079B664E93ED27CDA4EE39B8ADE700A9C886D6F1678A91B1C7975FEC05D543381517FDB510BDEA32B5E5529DCE833AE12E9D3BBB23F0D1FFDE98C3C9108388C9A7BA1B1C72E14F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: WPXVGJ+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /WPXVGJ+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid2228 putdup 34 /cid2599 putdup 35 /cid6776 putdup 36 /cid2468 putdup 37 /cid4457 putdup 38 /cid11 putdup 39 /cid12 putdup 40 /cid3 putdup 41 /cid32 putdup 42 /cid19 putdup 43 /cid3979 putdup 44 /cid5087 putdup 45 /cid7612 putdup 46 /cid4197 putdup 47 /cid43466 putdup 48 /cid68 putdup 49 /cid69 putreadonly def/$SubFontArray [/AAAAAF+PingFangHK-Regular findfont ] def/CharProcs 19 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid3 {(\001) 0 $SP} putdup /cid11 {(\002) 0 $SP} putdup /cid12 {(\003) 0 $SP} putdup /cid19 {(\004) 0 $SP} putdup /cid32 {(\005) 0 $SP} putdup /cid68 {(\006) 0 $SP} putdup /cid69 {(\007) 0 $SP} putdup /cid2228 {(\010) 0 $SP} putdup /cid2468 {(\011) 0 $SP} putdup /cid2599 {(\012) 0 $SP} putdup /cid3979 {(\013) 0 $SP} putdup /cid4197 {(\014) 0 $SP} putdup /cid4457 {(\015) 0 $SP} putdup /cid5087 {(\016) 0 $SP} putdup /cid6776 {(\017) 0 $SP} putdup /cid7612 {(\020) 0 $SP} putdup /cid43466 {(\021) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/WPXVGJ+PingFangSC-Regular cguidfix
/F2.1/WPXVGJ+PingFangSC-Regular renmfont
%RBIBeginFontSubset: KUKMXR+PingFangSC-Semibold
%!FontType1-1.0: AAAAAG+PingFangHK-Semibold 001.003%%CreationDate: 7/27/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Semibold) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 80 defend readonly def/FontName /AAAAAG+PingFangHK-Semibold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid91 putreadonly def/FontBBox {-92 -232 1176 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC37CA26E136E26164560A2F078152EB8FD3E78D04CA76F606182FCAF429DF602F07FFC848D0A68860A555DC4BE4410B45177B42E5E974856C598E76D42BDD098B520BD1C3F2416AD51A3535151F1F2B171E1FFFF1A60700187F9197B0D272B068772D6A31DCE004B0D4E98A8C9053E11CE47FF4778A25883122E08D8E1A94DA210FE182DD1C3A483733B8CA8B87DC4BFD3C48393098608B9F98F3D5331010D23C11130D5AA3B9EDFCB4EBDE0266862BBDBB8EB9BB87B40EEC5A38099A4DC567F4AB0ADB00F4159C4B0174B386E991442B8E5F239086874AF7D1DD1FE047A240AF6D4DDA6AB671700E4B2F9657B3D85FAAD2F4085B5DC589F0CC960D2EAFE3A46BEA5C96BCB5D920F61D445FEBD5AD54E708D8E329207CB69F2C0B5D6FA4E22FA0D0CC72113D4FA11C363D16EE94EFE6E71EDAC0653F1168A66EB3B38903466538A5EDC440399259EA0DB98A5F4A3E639F76044DA5810A80605889BC70D3D869E2AF28FB4B4619D44D5A6106F2902D45D69ABA8673B08EB84C4F99FAFA4EDDABEF98BFEFFFC2943732AEBBBFEFA366D16E062168E4A8DB2855130058716DDCF176F2689C8B3EB6DC397AAA4FB124C10680F62E78A73C851B9912D06D04A66953D8017512AD8B65175C940360C2D68B83536C1D1888152509294AFE35BA286E0E449207F077F2FB8C83BF9D3F82F50A13279AE624D1E62D03BBDF68ABA95E47F10CBDC71BB94A19698642C48CCF0E2BEBDE4B4EFD052C8842C9B561BF00CE27BA393F948AECBF8E6BFACEB30F7F11311102749075E5344C527ED39F84A74B3AD326AA18292ECDF551DA171E4873BB230753E084131963936D3DD22705CF2097EE014CFE4840D942DA6FBC74230EC9BF8BC1E040303B8D41F67186B1B99C905B498637736FC0FBF255011E2989B97DDC684B40919219A9344A9CB798F7E9B7DF6B421C3759A389F3CBC4D96DB904E13BB1E43BD3F5D7852518B0845DEF246CB09E8F699272BC0A4C3001CA008341C013FEA091BCC1379EC2271803F2BBAF99227CD9CD7B31CF728E0190CAE35242782053277EFD6B67F6AF9921D0AC93F32F9AA7781A2146E2A541ED2F0ECBF235CC14D5FDF27B2D0ECFB0AB8F6FFF193C300C458F47CE4B5A135004A761AC134B4E7B40B9160D63B630C1BB4F78317B25E87B7BCFE9DE2805663623E79175DF738DF1062AB5EAC6D54BA2A52E51FA9D58B5183BA1CC7DA16CA7DC4FA390303F01A37E6F3955E262F1C94A34BDE3283EEB8800281E5552AB6B3CB93BB5DDB662A5B4D7785557A1D1845984A65FBE8467EB5D161A537B332CD4B0774499F72356EC4FBBAFCF7F95DD1788AFC149C31F60C19D08ACD4F2DAE4066447FE2FDBBC40069737296FAA7EC117D786CBEB43C8C06CE2D3ED7E4B8C1BEC7331117EE1E7D071CF1A1532D6562DEAD62B32F90353DE4A678E9EDBB19287BCAD28B4D75BFF53BA2E396A77574BDE34BE76A9324AD39CDF28BE2CC1B298F35ED5A192E9D8D2E3C6011B9BAB6B18260DE5F4E2A6131AD1520288E1F97C9B5217DCAAF9B3E25A71ED2F8D620C1A39CB2874866500E3F38DDF09BAC8FD1115FAED76B3A5DC6407A8429F11B21BCD1AABC71D760EEBBEF1EC847F453F267C7CB3A3D06E05EAEE65E0B208841167FED692F21BDD2B70BF801B58A456A71DBEB7DD98533B9CCED5852CEB6DE1B04417E054D418B6578B0EDD0CFFD833E150FDFD01781A98750DB874162F8F6488350C979E24B5681AC93D99F50926580F217DF33067313668D877F9DF7C61045453DD465921550753759E71B10B411586020CC56188B743F645C071FDD384326DDEF2A3A62E1B7F8B01FFA2B836461712DCF3FD6441EF9B5A7EF3D4A795C7392EE6B24256B948E0FCBEF17AAAD0C2A32C7AC84CB98D20D8F93BE9FEA88591EB02EBB1D57847ECF97884BACAAEE807F19C5F6947BA1FFF37C22E6049F478B3A1E43A1C371E0E9CE40E93A150CDB3410D152E70EFBF83EA162C731095A64B274A9F11772B5C0FCFC916D21ABD899A7A690F4C576F5710390C968D525D01744F6105FDEA0CD88CB5194BACB330956B1708E61343743B7AFB88F58CC131065B8466C2E7BB5EF67A2C09CC622F7987A13E03C0AF3C9BDFD8A4971792B82157908BB6DCB07AA14E35FC8809121C432A479B5F6DBE2513F6B86EC38787B28AD21EF3AD3141390AD505B6FD6E0DD35614F17ABE1311A1FEAE4A3A0C72C0E2249DCF7580AA91F0BA302FDE90A5072132456B77C7974058C270DB4D5AF14BA98C95619923D0652A047F1C18A5B166D2FB02133DBE514481823F34B1CBB99584AEB8CF1991E93658050DC937C179200F7D1164888E89A2DF82255E56F5B7E43F635673F58E33C90BC9ACA713F8A4F5D3E90E9657F5CB633F56EB7881553F8D3CE65BD40FE972C7A8FCEEDA0D2DA7AD3D11F945B4A011213AEB259BC02213114A725F3A0E61347832F952EFD502A478E1328D6C5DA17E11C0472186F0AFD5F64B8268ACDABC3ACBD6C1F5DB5475C8888E51600E6B24EFAC49CC04A70A17010108FBB9D49A432CE1D5A23838DADE40261CA136705A4CD47C8B5CBC94B4C0B5D89C540277E86E466F0B5C39E825A8426FA0C107D4416EA629E53981924ACC0C5EFC9AC1D0EE10AE39ACD907310792543E2FA30D7BC5F45BBF053DE058D4D5A28463C4A09050480BC778DB448E302723715C1A41F21A98DB273F1A531315801C1F3BC22D1727BD7FCD19EE56664883957C90223410D9440DA639F91BE04C925354B80A4C08D7EF24723781A8D4C25F0D6832CD70B506E56A2CC49BD3AA3DD140337C8F0E10DF491FC5C6AF49D71279413CDDB1EE6BB3A48F1823A08A398A318EEEA5AB4FBCA6DBD0E7330641A046FFC990A7602BA7DE60E310F46A3A38368802F4AFCCB7A215CD85308D1AAA7749D027050FC46CC767A2A373D9CE387A7340D377230C7F7F97F1FD0D82B8D680A53B95C26223F89BC512ED75BB19F1F96D06B4590F8EF1939CA83CC3016A4D4D300ED57D9400B92FFD555AEE225897974B36EA629C23CB71FA702A1D73EED56193530BCF7EB18622B39FC9E707895BB0B714726F9F6E9755DFF3DEAFE21A08C66D1E85E7531FE392446426A4E96A770C2266A98D2C948946077D08EFFF240DD6998EECB288B8230641B6FE2089020EF00BD638CEBABBBDDED46618A143DCC366511A4427EA44F8C584662EEA14E27785E4542BF7F0535D0056878B9182F2CE801316EF097547F36CF05248F1EDF0B86684D8C0385D3C3E1F242E8D1EA94A420CBAB2D51AD34CD92653603BE6AFB5281711AE39F8DBFF08C8DAA2CE9AF1B248CAAAB0BB1D788575EE73D520C69616DCD5C2C9B7CAEF5E844BABD2AF090AB42B164829EFF53F4084932F51D89FDBAF6ACE67BFA647A4B75B45C6F55C07794FC2D21AEACE9239B777F1E8F17006DB21064F927F8A399450550EE8E26A7E8E40438779B6AD06C07462855CDE57A7A81B1323AFD0DA23327934105D77A6F492EDFCD3502CF30167FEB7F4F77F13696D639E2715B6FC8C1E2FDAA6A08B93CE0617A627A560D823244B7F8515332E7F7B582946FEBF86BF0D9EEBFF6121F38D52D2B45F209EBFA71D495C8DAF7477E5A9477F2BCBCAB02463C5EA8FC10216E0BC415351BD953AB95879E53DE91EE94F4845158E4DDC0BBB404850BF254EF1191E42C8CF71CC9CFD818E531258CD589E49A73EBBEED0A38EB890BFE621DA57D6D5A23E6F061E571656D04D8C1246453AF00EEA630FEAAB61A303FDF3392FC0D49F78178E4C588A611306DD73BEBBB9125AD78DBEE6F4F4B2FF6925DCFCEB5BBA105C99F11C63D56151766B8C599D7D28D09E8610FD576B8A256C0A471D668E784E98D44CBCEAC49740348993A578E23ED41D86351C44CF0C569CEA7BB34D1E6F9290825DAF81E453DDC87E00451796B896CA598F44542BDEF0F4B02BA047F1BD28DF24D446ACDB6203681DDF2470231304D108AECE91D2A869A48656C412F2761413E2143380C81D2B982C212D1A7DDF4B477616630F9DEAC60B7EB3BA3870C631435461659209AC4200DFE7097C5D4611BC53F6899A50946F279B16A77D6F5E0F68E6639331466AA35D9800FB5F1F5CC853954657FC8BE4838F6075C7A820ACEA1F548C41F000E3D947290C57DBAFBBC6578FE813A3E6C835A45F01D74449347AA6C13B5D15685D4FE8BFDEBB11F756A93524F47EAC337A76683C51483677F81BDF20B40673CC800965B16F76AB278AF73F6489339C993FAC5F2CCF2BEFD745D19AEA7FBF0B582275CD0154609D8D366F68289A3D9FF637282317EDF6A29F2109299E6353583076D2781021C25DFA6A0741102095E9A7EABC0FAED14786B59D408A626DA73F7D81C12F6FB0149C93C93AC872F84E9C99E14E7F03C102BC2A07A8F904FB54A90E3ECD7A862D6CC7A02C583521EF3C29F5226ECE315537720E17242E23F0B8A2A24DD2C0832379B8675595A002B55F8BF28868528950E32C51EC978B65D978405DD34F3F3D7776775F976FD0EA54CD101EEC4330F9407517C84C7E7A19828F2C29A5B18A7C969A9A40E12F3DC15FE307EB999BF6B0B0EAD34B6DCC35AFF5AE52D000B9CDFDAB2840EAA4012D1BD8BFB2FB97A4A7B2FD33F1FA90724F8420DB8CC98EA8D110A271765FC5597AC8E570C6D01D18608F5D8F913D813F45153714CB2110A2CD1EFE1A43948A2558FE4C5CC89C1F3866D0E2C20B2B9A6F6091306204ECE00E7482EE5CD4DC4B669CDF0F74366FAE47789946BB7CCE85675C266422F6CA1C51AC97DFF7C4C98B4E1432CEEFF16AB2AFC5587F98722F5076F3DCCA38D16442BFDD7454FA24CFA4F7203118B95D3320F0520D879B9D9185F99DB6FB751BE05177CEB51FF4C723D09A7319F230E8D746DB643C395ECE5FFF7136E7389E4FB56F33A10752E3C330DFE7C90FB886C6FBFCA501A30155F9DF8E10B77335F326EA79114E55C384A3A909227D37C76793A1A5A26445F6E5F0A68CDA554BBE3E05AC5EE864C281ED969377B80CA99F4CC8E38051E78710CBA8E6E01D478A67EF941AFD97913B9CC659C6704B1138AA82437E634EC3745A1DDB2E7AEC7809389C3A84264A9C9E50A2A06492584A9DE394026DB071A3C1BBC780A7027CE1384021B11CE82F24835CE21A1CF2130838BDE9CB0B9AD3A9B9AD52A5A151155EFF62A36897C34AAF5D15153893DE96D9A09F69D25C2619CACFEC24FB46EF9B869737FF63DBB0108DE8A71845D4D2C1AD54CEF95E1F1B6DCB8CE9347E3E3612D5C672CEAA945D54504DD4D703AF8759F3312FC25619D515A1F215DAE4E4B9BB096259882DC6BAA98B98345889ED26402B1B201EEDAFC3A58182745044B84E36024C82F926F961625CC1883E2D71FFECD29B317C448813A6878AE459D0A5CD68F76865DFA8A16A3D090FE1658717E93CEC450342A8E62494DB99401D948436522214C222B6EB97C79E25893E164835BF7119701278AACC03FAB1A718D42099A9689E489404D05024C2CCC2136FD2F99D24A5ABEBDC21F4A7E3BCE3DC720BBD2819ECF1E63B54130877266ECA3F34F61C43021E223DC496264820D7D320261D4375D902F47C4DF475B1D551EDC9CD5DFAB5C87E5EB32D916062898030170333219C7E2D750BC4F6249A7F7D7AB91BAC66F5C6E937FEFF2BA2A78BAA3A02CA4FF37FBAA3CC5700DD9EA6BCA80429947AFEF6A44683875950CE6E5A9707D3E7525AE1A79AEB8EC7FCE0DC6AEA802D6C74299CB8A9D3BEA35BAF96995441F2D1BB5BDFE9C022AAC69634404118EDED2FA60BC8D84D2049FD729C75531620CEB62D4B59BE6960E87D40466BD0602AA1F9E03206299674CF4142B0E10A18B42550976D3556DC7414534EF4A9F2BAA72873C860AAC626F4EECF15DA3EED0E86DCA3B190957B577054A539A1D60ACC7627E8C6841A25F2C18888DC8ADE9C088038981960BBD384F84F7107AC3C55D078FDAD30B1A981124B5C9EE015E1B2DD6DE994654B7BCC9D19315D08892BAF063D21E8723741C962B9201304B6E9D88A2611FD795BF5C70AD7CF9E970D2C122DFC9F96026B479EE088D3C5258EC9949FBC8B767371275976500CC4A1FF1645D7A596C3B86ED1F9C9094DD330CCC95C1FACA9ECB7700D043D1165766B38B3BE11DBE0BD2819D21E86C5AA233BB8160CE7F306F095923EF2BA0F35DF3361C88D60973047FDC132E0929AA25B1F46DA1E53ACE8FECCCE7C2BE4C4225DA1F0CF5D1C246059AE1F803CA1E3C4792090A5C01ECB8D716689484A1699B3727C0E6F9BF33494206C51A86CD48BF150291C91715815AF9978B0A497221178B569DA276EAB76624ADE2E15D15D20005BADEB66B3A9DF0E3F5F03FB3A6C525B890FA5EE1B260522FEC4C4C6C5CE7830094145FCCE2902C6D48F2CA55CBC2E24E1D0A4CF9AFD1BD4AA5EBF33EBDF7E6F7759FF9DF43AA7BBF3EF9737358B7D58B8B0F5D8382EC15326C2E271CD50D02D98DA1837EACB008C9E3CAF23DBE6F8A2FBDFD67080FB05668E6B4F289C899DE33DC279932BA9F5CD06D34C39CA8CFD4E5AB4E372F682CF0E23E0210C1370B176132B1995AC82B5FECFDAFDD929E92C621842CAF67E965F5DEDE1AEF364B6458069EF3A9E07D3BF85AFBBD05067863A461A2937B2354308CF8C06D68DD7FA14819ED6C7F8354503F4EF5537BD74B6B45E982619962BD200DEBF541024FBA06A154A32D0D9156BD6B6B193650F5189A35C231D935FC714E6F52629CA0EC4024838463DC28C2DCFC107559CF9570C9A8C32969C9C87A92F5E5AA1A69A2D9B207B0070F7170B39F0406931982E47C4186769F53C66C9D7964D897675CF25B95156FE456509C41B9A0DD97FF02175EA7D973E5D51BDE2B62E625E685E07EC36BF7B416B919C91C6354CB4449554F8946903A52EB8AFEB0B3F0205D0CA5CDA46CEAECD7856D91A2D51B2E4DC585DF3FF34EF1C8C966190AFDD4DE29AD73C031ABED956A16E8E2B56025128ABB0BED0D69D07A1926A41709E5AD32CBF52E5DB8E18C5ED806B27F370C1CAF236C3D6FEFDBFA29697ED383312E35C53A18A0AD5302AFCDA0484D3DE8ABDE687EE84BE9A8A6AACEE3C7C49D681127D416A3933FC23A42340BECB14F3E0F1C71EF30DF2FB5544559256486C12EF5B0CD85C140C59367C8C07DB5AB03213FCE1EB4101C71CFE0C96AA87381BCF7F33B8570F0C8F2CB4FB309C462B215AF62320A85E33F59F5CF33C6629815D27B23F60D5AD8BDE7ADCCAFF87F90C0ABD6A65464DB7E79B158C669CF080A6D2DE03E0E9CF6094BE79958C7EB5009A16DBB42C2DD48BD2073D6B062B3E9D92E75133D1BF61953488FAA1F61660200157177AD061AAEEB331BA8B3752A6F751A1FA23F00C3DD9C355A6229B4A45E0C5B047ABAE0579B490662DC42F19B714F07CE09D6CDEC4F91302984AE7EC98CFB9038A166CE77A04A7051D23E0FFD60BEBD64BF6C04902D6BD324537D73505906689BA94733749BA078CEC9E750CCC7CB13E8797E16E131F2F7E756113F63590D44F9C0C088757E9D0E1EE0AE3626911363DC90ABEA864204512AC2624D7BCD3E0260FD1D9CE85AC0ECA769B5C07539129C31EA3BA198123A30F6A82BE8C358C40084154D583B7F82A438D1D90C5112A23A1C5E192A64D6847A244A0265D07B2D17DD38A537C5EBE4D5573AE797DE277200F5ECB793BEF7B31BCF631E5605AB40F5F6AC9957FDEB9268FF1075BE0010C0DDBCE8B35A5631ECEF03EBEF83608FE90576602541C10BEE4C398ACC663300EA04392AFC80144239FF207A0474EAB5324689293DC38EBE1B7B924947B492EF0633D73C071CE2079398D0680B7140A265914438C3105E9AFFFFDD2209EA701260EAAD48CE2A6A2AC7A852575F70CF9C96E4D0D142B68A1B09693ABF5A168B4CBA4D69B17A5ED31221E17A030BEF5C410DCA1D11F770EBC2E63C3A44FEED1567C22EA4468506521BD1565C957FE3BFBFA2339CD5332C5239217F1914674E7A8E878E4EBB94CB25A1E21068FFECCA0067646BDA5411A07579732BDC1AEF34B23EC2CF4DD167C7AB4CCEC198485B603C01A7E69C9AFA9766A417500F7D216E573438CDF8944DD5A06D89B9F9EDBC91CB7C97768178E41991AE8528A33C4E84D465FE67B24B74BFCC4A8249A639A5306ABFC891E67C61DDDE2FFC57A881FE51615A662EDBB4EBD30FA4E540011C196FDB7E4B2DE08FF0C3D9DEFE0F73330B7C88D63A13E8EC223FCB166B1A121BFBC4A74BFECFEDA04EBC8030C146C376477F5ED93C3B53DD66EAA27D674DEA060CD2EE7060B855F8FA9180D6E8ABA228161C0201F2048F342D5ECBFA0BEBF9F5E9B8069DB6F73712374F8477C11170E884AAE1DFA15FAF084C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: KUKMXR+PingFangSC-Semibold19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /KUKMXR+PingFangSC-Semibold def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid91 putreadonly def/$SubFontArray [/AAAAAG+PingFangHK-Semibold findfont ] def/CharProcs 3 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid91 {(\001) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/KUKMXR+PingFangSC-Semibold cguidfix
/F3.1/KUKMXR+PingFangSC-Semibold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
4.2519684 w
2 J
0.60000002 i
/Cs1 SC
0.72124326 0.72013324 0.79885787 sc
q
0 0 513.18036 238.29958 rc
1 0 0 -1 -167.64488 303.45224 cm
252.85452 103.19816 m
185.48048 83.266838 171.4469 148.90956 181.97069 176.85857 c
S
4.2519684 w
343.98712 92.596008 m
395.79175 107.37499 407.74677 158.92876 349.87952 193.53345 c
S
1.4173229 w
0 0 0 sc
220.30827 273.98807 m
403.04431 205.98563 l
S
CM
285.06558 186.51309 m
285.06592 187.14169 284.94095 187.77002 284.70007 188.35063 c
284.45984 188.9315 284.10391 189.46417 283.65918 189.90842 c
283.21494 190.35313 282.68228 190.70906 282.10141 190.94928 c
281.52078 191.19016 280.89246 191.31514 280.26389 191.31479 c
279.63528 191.31514 279.00696 191.19016 278.42633 190.94928 c
277.84546 190.70906 277.31281 190.35313 276.86856 189.90842 c
276.42383 189.46417 276.0679 188.9315 275.82767 188.35063 c
275.58679 187.77002 275.46182 187.14169 275.46216 186.51309 c
275.46182 185.88451 275.58679 185.25618 275.82767 184.67557 c
276.0679 184.09468 276.42383 183.56203 276.86856 183.11778 c
277.31281 182.67305 277.84546 182.31714 278.42633 182.0769 c
279.00696 181.83603 279.63528 181.71104 280.26389 181.7114 c
280.89246 181.71104 281.52078 181.83603 282.10141 182.0769 c
282.68228 182.31714 283.21494 182.67305 283.65918 183.11778 c
284.10391 183.56203 284.45984 184.09468 284.70007 184.67557 c
284.94095 185.25618 285.06592 185.88451 285.06558 186.51309 c
h
285.06558 186.51309 m
f
1 w
1 0 0 -1 -167.64488 303.45224 cm
452.71045 116.93916 m
452.71082 116.31056 452.58582 115.68224 452.34494 115.10163 c
452.10471 114.52074 451.74881 113.98808 451.30408 113.54385 c
450.85983 113.09911 450.32718 112.7432 449.74628 112.50297 c
449.16568 112.26209 448.53735 112.13712 447.90875 112.13746 c
447.28015 112.13712 446.65186 112.26209 446.07123 112.50297 c
445.49036 112.7432 444.95767 113.09911 444.51346 113.54385 c
444.06873 113.98808 443.7128 114.52074 443.47256 115.10163 c
443.23169 115.68224 443.10672 116.31056 443.10706 116.93916 c
443.10672 117.56776 443.23169 118.19608 443.47256 118.77669 c
443.7128 119.35757 444.06873 119.89024 444.51346 120.33447 c
444.95767 120.77921 445.49036 121.13512 446.07123 121.37535 c
446.65186 121.61623 447.28015 121.7412 447.90875 121.74086 c
448.53735 121.7412 449.16568 121.61623 449.74628 121.37535 c
450.32718 121.13512 450.85983 120.77921 451.30408 120.33447 c
451.74881 119.89024 452.10471 119.35757 452.34494 118.77669 c
452.58582 118.19608 452.71082 117.56776 452.71045 116.93916 c
h
452.71045 116.93916 m
S
CM
210.0461 195.80153 m
210.04645 196.43013 209.92146 197.05844 209.68059 197.63905 c
209.44035 198.21994 209.08444 198.75261 208.63971 199.19684 c
208.19547 199.64157 207.66281 199.99748 207.08192 200.23772 c
206.50131 200.47859 205.87299 200.60358 205.2444 200.60323 c
204.6158 200.60358 203.98747 200.47859 203.40686 200.23772 c
202.82599 199.99748 202.29332 199.64157 201.84908 199.19684 c
201.40436 198.75261 201.04843 198.21994 200.8082 197.63905 c
200.56732 197.05844 200.44235 196.43013 200.4427 195.80153 c
200.44235 195.17293 200.56732 194.54462 200.8082 193.964 c
201.04843 193.38312 201.40436 192.85045 201.84908 192.40622 c
202.29332 191.96149 202.82599 191.60558 203.40686 191.36534 c
203.98747 191.12447 204.6158 190.99948 205.2444 190.99983 c
205.87299 190.99948 206.50131 191.12447 207.08192 191.36534 c
207.66281 191.60558 208.19547 191.96149 208.63971 192.40622 c
209.08444 192.85045 209.44035 193.38312 209.68059 193.964 c
209.92146 194.54462 210.04645 195.17293 210.0461 195.80153 c
h
210.0461 195.80153 m
f
1 0 0 -1 -167.64488 303.45224 cm
377.69098 107.65073 m
377.69131 107.02213 377.56635 106.39381 377.32547 105.81319 c
377.08524 105.23232 376.72934 104.69965 376.28461 104.25541 c
375.84036 103.81068 375.30768 103.45477 374.72681 103.21453 c
374.14621 102.97366 373.51788 102.84868 372.88928 102.84902 c
372.26068 102.84868 371.63235 102.97366 371.05176 103.21453 c
370.47086 103.45477 369.9382 103.81068 369.49396 104.25541 c
369.04922 104.69965 368.69333 105.23232 368.45309 105.81319 c
368.21222 106.39381 368.08725 107.02213 368.08759 107.65073 c
368.08725 108.27932 368.21222 108.90764 368.45309 109.48826 c
368.69333 110.06914 369.04922 110.6018 369.49396 111.04604 c
369.9382 111.49077 370.47086 111.84668 371.05176 112.08691 c
371.63235 112.32779 372.26068 112.45277 372.88928 112.45242 c
373.51788 112.45277 374.14621 112.32779 374.72681 112.08691 c
375.30768 111.84668 375.84036 111.49077 376.28461 111.04604 c
376.72934 110.6018 377.08524 110.06914 377.32547 109.48826 c
377.56635 108.90764 377.69131 108.27932 377.69098 107.65073 c
h
377.69098 107.65073 m
S
CM
18.530474 160.76794 m
18.530821 161.39655 18.40584 162.02486 18.164967 162.60547 c
17.924734 163.18636 17.568819 163.71902 17.124088 164.16325 c
16.67985 164.60799 16.147186 164.9639 15.566306 165.20413 c
14.985692 165.44501 14.357371 165.56999 13.728775 165.56964 c
13.100179 165.56999 12.471858 165.44501 11.891245 165.20413 c
11.310365 164.9639 10.7777 164.60799 10.333461 164.16325 c
9.888731 163.71902 9.5328159 163.18636 9.2925835 162.60547 c
9.0517092 162.02486 8.9267282 161.39655 8.9270763 160.76794 c
8.9267282 160.13934 9.0517092 159.51103 9.2925835 158.9304 c
9.5328159 158.34953 9.888731 157.81686 10.333461 157.37263 c
10.7777 156.9279 11.310365 156.57198 11.891245 156.33176 c
12.471858 156.09088 13.100179 155.9659 13.728775 155.96625 c
14.357371 155.9659 14.985692 156.09088 15.566306 156.33176 c
16.147186 156.57198 16.67985 156.9279 17.124088 157.37263 c
17.568819 157.81686 17.924734 158.34953 18.164967 158.9304 c
18.40584 159.51103 18.530821 160.13934 18.530474 160.76794 c
h
18.530474 160.76794 m
f
1 0 0 -1 -167.64488 303.45224 cm
186.17535 142.68431 m
186.1757 142.05571 186.05072 141.4274 185.80986 140.84679 c
185.56963 140.2659 185.2137 139.73323 184.76898 139.289 c
184.32474 138.84427 183.79207 138.48836 183.2112 138.24812 c
182.63058 138.00725 182.00226 137.88226 181.37366 137.88261 c
180.74507 137.88226 180.11674 138.00725 179.53613 138.24812 c
178.95525 138.48836 178.42259 138.84427 177.97835 139.289 c
177.53362 139.73323 177.1777 140.2659 176.93747 140.84679 c
176.69659 141.4274 176.57161 142.05571 176.57196 142.68431 c
176.57161 143.31291 176.69659 143.94122 176.93747 144.52184 c
177.1777 145.10272 177.53362 145.63539 177.97835 146.07962 c
178.42259 146.52435 178.95525 146.88026 179.53613 147.1205 c
180.11674 147.36137 180.74507 147.48636 181.37366 147.48601 c
182.00226 147.48636 182.63058 147.36137 183.2112 147.1205 c
183.79207 146.88026 184.32474 146.52435 184.76898 146.07962 c
185.2137 145.63539 185.56963 145.10272 185.80986 144.52184 c
186.05072 143.94122 186.1757 143.31291 186.17535 142.68431 c
h
186.17535 142.68431 m
S
CM
151.71288 65.613533 m
151.71323 66.242126 151.58824 66.870445 151.34737 67.451065 c
151.10713 68.031944 150.75122 68.564606 150.30649 69.008842 c
149.86226 69.453575 149.32959 69.809494 148.7487 70.049721 c
148.16809 70.290596 147.53978 70.415581 146.91118 70.41523 c
146.28258 70.415581 145.65427 70.290596 145.07365 70.049721 c
144.49277 69.809494 143.9601 69.453575 143.51587 69.008842 c
143.07114 68.564606 142.71523 68.031944 142.47499 67.451065 c
142.23412 66.870445 142.10913 66.242126 142.10948 65.613533 c
142.10913 64.984932 142.23412 64.356613 142.47499 63.776001 c
142.71523 63.195122 143.07114 62.662457 143.51587 62.218216 c
143.9601 61.773487 144.49277 61.417572 145.07365 61.177341 c
145.65427 60.936466 146.28258 60.811485 146.91118 60.811832 c
147.53978 60.811485 148.16809 60.936466 148.7487 61.177341 c
149.32959 61.417572 149.86226 61.773487 150.30649 62.218216 c
150.75122 62.662457 151.10713 63.195122 151.34737 63.776001 c
151.58824 64.356613 151.71323 64.984932 151.71288 65.613533 c
h
151.71288 65.613533 m
f
1 0 0 -1 -167.64488 303.45224 cm
319.35776 237.83871 m
319.35812 237.21013 319.23312 236.5818 318.99225 236.00119 c
318.75201 235.42032 318.39612 234.88765 317.95139 234.44341 c
317.50714 233.99867 316.97449 233.64276 316.39359 233.40253 c
315.81299 233.16165 315.18466 233.03668 314.55606 233.03702 c
313.92746 233.03668 313.29913 233.16165 312.71854 233.40253 c
312.13766 233.64276 311.60498 233.99867 311.16074 234.44341 c
310.71603 234.88765 310.36011 235.42032 310.11987 236.00119 c
309.879 236.5818 309.75403 237.21013 309.75436 237.83871 c
309.75403 238.46732 309.879 239.09564 310.11987 239.67625 c
310.36011 240.25713 310.71603 240.78979 311.16074 241.23404 c
311.60498 241.67877 312.13766 242.03468 312.71854 242.27492 c
313.29913 242.51579 313.92746 242.64076 314.55606 242.64043 c
315.18466 242.64076 315.81299 242.51579 316.39359 242.27492 c
316.97449 242.03468 317.50714 241.67877 317.95139 241.23404 c
318.39612 240.78979 318.75201 240.25713 318.99225 239.67625 c
319.23312 239.09564 319.35812 238.46732 319.35776 237.83871 c
h
319.35776 237.83871 m
S
2.1259842 w
373.37924 106.7895 m
440.86542 117.98297 l
S
2.1259842 w
372.74881 108.80675 m
182.19344 143.08098 l
S
314.95166 238.10966 m
180.95514 144.09959 l
S
1.4173229 w
396.00406 150.06775 m
442.41458 122.63888 l
S
CM
219.62227 148.22095 m
226.47978 156.56447 l
230.23854 150.20453 l
h
219.62227 148.22095 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
387.26715 155.23131 m
394.12466 146.88779 l
397.88342 153.24773 l
h
387.26715 155.23131 m
S
CM
222.31099 145.49576 m
222.31134 146.12434 222.18636 146.75267 221.94548 147.33328 c
221.70525 147.91417 221.34933 148.44682 220.9046 148.89107 c
220.46036 149.3358 219.9277 149.69171 219.34682 149.93195 c
218.7662 150.17282 218.13788 150.29781 217.50929 150.29745 c
216.88069 150.29781 216.25237 150.17282 215.67175 149.93195 c
215.09088 149.69171 214.55821 149.3358 214.11397 148.89107 c
213.66925 148.44682 213.31332 147.91417 213.0731 147.33328 c
212.83223 146.75267 212.70724 146.12434 212.7076 145.49576 c
212.70724 144.86716 212.83223 144.23883 213.0731 143.65822 c
213.31332 143.07735 213.66925 142.54468 214.11397 142.10043 c
214.55821 141.65572 215.09088 141.29979 215.67175 141.05957 c
216.25237 140.8187 216.88069 140.69371 217.50929 140.69406 c
218.13788 140.69371 218.7662 140.8187 219.34682 141.05957 c
219.9277 141.29979 220.46036 141.65572 220.9046 142.10043 c
221.34933 142.54468 221.70525 143.07735 221.94548 143.65822 c
222.18636 144.23883 222.31134 144.86716 222.31099 145.49576 c
h
222.31099 145.49576 m
f
1 w
1 0 0 -1 -167.64488 303.45224 cm
389.95587 157.9565 m
389.95621 157.3279 389.83124 156.69958 389.59036 156.11897 c
389.35013 155.53809 388.99423 155.00542 388.5495 154.56119 c
388.10526 154.11646 387.5726 153.76054 386.9917 153.52031 c
386.4111 153.27943 385.78278 153.15445 385.15417 153.1548 c
384.52557 153.15445 383.89725 153.27943 383.31665 153.52031 c
382.73578 153.76054 382.20309 154.11646 381.75885 154.56119 c
381.31412 155.00542 380.95822 155.53809 380.71799 156.11897 c
380.47711 156.69958 380.35214 157.3279 380.35248 157.9565 c
380.35214 158.5851 380.47711 159.21341 380.71799 159.79404 c
380.95822 160.37491 381.31412 160.90758 381.75885 161.35181 c
382.20309 161.79654 382.73578 162.15247 383.31665 162.39268 c
383.89725 162.63356 384.52557 162.75854 385.15417 162.75819 c
385.78278 162.75854 386.4111 162.63356 386.9917 162.39268 c
387.5726 162.15247 388.10526 161.79654 388.5495 161.35181 c
388.99423 160.90758 389.35013 160.37491 389.59036 159.79404 c
389.83124 159.21341 389.95621 158.5851 389.95587 157.9565 c
h
389.95587 157.9565 m
S
CM
127.36411 56.216354 m
127.36445 56.844952 127.23947 57.47327 126.9986 58.053886 c
126.75836 58.634766 126.40245 59.167431 125.95772 59.611671 c
125.51348 60.0564 124.98081 60.412315 124.39993 60.652546 c
123.81932 60.893421 123.191 61.018402 122.5624 61.018055 c
121.93381 61.018402 121.30549 60.893421 120.72487 60.652546 c
120.14399 60.412315 119.61133 60.0564 119.16709 59.611671 c
118.72236 59.167431 118.36645 58.634766 118.12621 58.053886 c
117.88534 57.47327 117.76035 56.844952 117.7607 56.216354 c
117.76035 55.587761 117.88534 54.959438 118.12621 54.378826 c
118.36645 53.797947 118.72236 53.265282 119.16709 52.821041 c
119.61133 52.376312 120.14399 52.020397 120.72487 51.780163 c
121.30549 51.539291 121.93381 51.41431 122.5624 51.414658 c
123.191 51.41431 123.81932 51.539291 124.39993 51.780163 c
124.98081 52.020397 125.51348 52.376312 125.95772 52.821041 c
126.40245 53.265282 126.75836 53.797947 126.9986 54.378826 c
127.23947 54.959438 127.36445 55.587761 127.36411 56.216354 c
h
127.36411 56.216354 m
f
1 0 0 -1 -167.64488 303.45224 cm
295.009 247.2359 m
295.00934 246.6073 294.88437 245.97899 294.64349 245.39836 c
294.40326 244.81749 294.04733 244.28482 293.6026 243.84059 c
293.15836 243.39586 292.6257 243.03993 292.04483 242.79971 c
291.4642 242.55884 290.83588 242.43385 290.20728 242.4342 c
289.5787 242.43385 288.95038 242.55884 288.36975 242.79971 c
287.78888 243.03993 287.25623 243.39586 286.81198 243.84059 c
286.36725 244.28482 286.01132 244.81749 285.77109 245.39836 c
285.53021 245.97899 285.40524 246.6073 285.40558 247.2359 c
285.40524 247.86449 285.53021 248.49281 285.77109 249.07343 c
286.01132 249.65431 286.36725 250.18697 286.81198 250.63121 c
287.25623 251.07594 287.78888 251.43185 288.36975 251.67209 c
288.95038 251.91296 289.5787 252.03795 290.20728 252.0376 c
290.83588 252.03795 291.4642 251.91296 292.04483 251.67209 c
292.6257 251.43185 293.15836 251.07594 293.6026 250.63121 c
294.04733 250.18697 294.40326 249.65431 294.64349 249.07343 c
294.88437 248.49281 295.00934 247.86449 295.009 247.2359 c
h
295.009 247.2359 m
S
1.4173229 w
398.22049 130.94531 m
395.32794 128.18251 l
S
392.43536 125.41972 m
389.54279 122.65692 l
S
386.65021 119.89413 m
383.75766 117.13133 l
S
380.86508 114.36854 m
377.9725 111.60574 l
S
CM
237.91455 165.49727 m
228.02429 169.83578 l
233.12692 175.1781 l
h
237.91455 165.49727 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
405.55945 137.95499 m
395.66919 133.61647 l
400.77182 128.27415 l
h
405.55945 137.95499 m
S
1.4173229 w
181.90649 122.02285 m
181.46521 125.99843 l
S
181.02394 129.97401 m
180.58266 133.9496 l
S
180.14137 137.92519 m
179.70009 141.90077 l
S
CM
15.381213 191.51614 m
17.93288 181.02191 l
10.590339 181.83691 l
h
15.381213 191.51614 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
183.02611 111.93611 m
185.57777 122.43035 l
178.23523 121.61534 l
h
183.02611 111.93611 m
S
1 w
188.63991 105.33268 m
188.64026 104.70409 188.51527 104.07576 188.2744 103.49515 c
188.03416 102.91427 187.67825 102.38161 187.23352 101.93736 c
186.78928 101.49264 186.25662 101.13672 185.67574 100.89649 c
185.09512 100.65562 184.4668 100.53063 183.83821 100.53098 c
183.20961 100.53063 182.5813 100.65562 182.00067 100.89649 c
181.4198 101.13672 180.88713 101.49264 180.4429 101.93736 c
179.99817 102.38161 179.64224 102.91427 179.40202 103.49515 c
179.16115 104.07576 179.03616 104.70409 179.03651 105.33268 c
179.03616 105.96127 179.16115 106.5896 179.40202 107.17021 c
179.64224 107.75109 179.99817 108.28375 180.4429 108.728 c
180.88713 109.17272 181.4198 109.52864 182.00067 109.76888 c
182.5813 110.00974 183.20961 110.13473 183.83821 110.13438 c
184.4668 110.13473 185.09512 110.00974 185.67574 109.76888 c
186.25662 109.52864 186.78928 109.17272 187.23352 108.728 c
187.67825 108.28375 188.03416 107.75109 188.2744 107.17021 c
188.51527 106.5896 188.64026 105.96127 188.63991 105.33268 c
h
188.63991 105.33268 m
S
1 1 1 sc
CM
105.51321 47.868847 m
105.51356 48.497444 105.38857 49.125763 105.1477 49.706379 c
104.90747 50.287258 104.55155 50.819923 104.10682 51.26416 c
103.66258 51.708893 103.12992 52.064808 102.54904 52.305038 c
101.96842 52.545914 101.3401 52.670895 100.71151 52.670547 c
100.08292 52.670895 99.45459 52.545914 98.873978 52.305038 c
98.293098 52.064808 97.760437 51.708893 97.316193 51.26416 c
96.871468 50.819923 96.515549 50.287258 96.275314 49.706379 c
96.034447 49.125763 95.909462 48.497444 95.909813 47.868847 c
95.909462 47.24025 96.034447 46.611931 96.275314 46.031315 c
96.515549 45.450436 96.871468 44.91777 97.316193 44.473534 c
97.760437 44.028805 98.293098 43.67289 98.873978 43.432655 c
99.45459 43.19178 100.08292 43.066799 100.71151 43.067146 c
101.3401 43.066799 101.96842 43.19178 102.54904 43.432655 c
103.12992 43.67289 103.66258 44.028805 104.10682 44.473534 c
104.55155 44.91777 104.90747 45.450436 105.1477 46.031315 c
105.38857 46.611931 105.51356 47.24025 105.51321 47.868847 c
h
105.51321 47.868847 m
f
0 0 0 sc
1 0 0 -1 -167.64488 303.45224 cm
273.15808 255.5834 m
273.15845 254.9548 273.03345 254.32649 272.79257 253.74588 c
272.55237 253.16499 272.19644 252.63232 271.75171 252.1881 c
271.30746 251.74336 270.77481 251.38745 270.19394 251.14722 c
269.61331 250.90634 268.98499 250.78136 268.35638 250.78171 c
267.72781 250.78136 267.09949 250.90634 266.51886 251.14722 c
265.93799 251.38745 265.40533 251.74336 264.96109 252.1881 c
264.51636 252.63232 264.16043 253.16499 263.9202 253.74588 c
263.67932 254.32649 263.55435 254.9548 263.55469 255.5834 c
263.55435 256.21201 263.67932 256.84033 263.9202 257.42093 c
264.16043 258.00183 264.51636 258.53448 264.96109 258.97873 c
265.40533 259.42346 265.93799 259.77936 266.51886 260.01959 c
267.09949 260.26047 267.72781 260.38547 268.35638 260.3851 c
268.98499 260.38547 269.61331 260.26047 270.19394 260.01959 c
270.77481 259.77936 271.30746 259.42346 271.75171 258.97873 c
272.19644 258.53448 272.55237 258.00183 272.79257 257.42093 c
273.03345 256.84033 273.15845 256.21201 273.15808 255.5834 c
h
273.15808 255.5834 m
S
1 1 1 sc
CM
245.89685 161.05344 m
245.8972 161.68204 245.77222 162.31035 245.53136 162.89098 c
245.29112 163.47185 244.9352 164.00452 244.49048 164.44875 c
244.04623 164.89348 243.51357 165.2494 242.93269 165.48962 c
242.35208 165.7305 241.72375 165.85548 241.09515 165.85513 c
240.46657 165.85548 239.83824 165.7305 239.25763 165.48962 c
238.67674 165.2494 238.14409 164.89348 237.69984 164.44875 c
237.25511 164.00452 236.8992 163.47185 236.65897 162.89098 c
236.41809 162.31035 236.29311 161.68204 236.29346 161.05344 c
236.29311 160.42485 236.41809 159.79652 236.65897 159.21591 c
236.8992 158.63503 237.25511 158.10237 237.69984 157.65813 c
238.14409 157.21339 238.67674 156.85748 239.25763 156.61725 c
239.83824 156.37637 240.46657 156.25139 241.09515 156.25174 c
241.72375 156.25139 242.35208 156.37637 242.93269 156.61725 c
243.51357 156.85748 244.04623 157.21339 244.49048 157.65813 c
244.9352 158.10237 245.29112 158.63503 245.53136 159.21591 c
245.77222 159.79652 245.8972 160.42485 245.89685 161.05344 c
h
245.89685 161.05344 m
f
0 0 0 sc
1 0 0 -1 -167.64488 303.45224 cm
413.54175 142.39882 m
413.54208 141.77022 413.41711 141.14189 413.17624 140.56128 c
412.936 139.98041 412.58008 139.44774 412.13535 139.00349 c
411.69113 138.55878 411.15845 138.20285 410.57758 137.96262 c
409.99695 137.72176 409.36865 137.59677 408.74005 137.59712 c
408.11145 137.59677 407.48312 137.72176 406.90253 137.96262 c
406.32162 138.20285 405.78897 138.55878 405.34473 139.00349 c
404.89999 139.44774 404.5441 139.98041 404.30386 140.56128 c
404.06299 141.14189 403.93799 141.77022 403.93835 142.39882 c
403.93799 143.0274 404.06299 143.65573 404.30386 144.23634 c
404.5441 144.81723 404.89999 145.34988 405.34473 145.79413 c
405.78897 146.23886 406.32162 146.59477 406.90253 146.83501 c
407.48312 147.07588 408.11145 147.20087 408.74005 147.20052 c
409.36865 147.20087 409.99695 147.07588 410.57758 146.83501 c
411.15845 146.59477 411.69113 146.23886 412.13535 145.79413 c
412.58008 145.34988 412.936 144.81723 413.17624 144.23634 c
413.41711 143.65573 413.54208 143.0274 413.54175 142.39882 c
h
413.54175 142.39882 m
S
1.4173229 w
215.58313 115.66366 m
386.03885 157.2648 l
S
CM
38.078945 190.19484 m
48.814041 191.37709 l
47.062439 184.2001 l
h
38.078945 190.19484 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
205.72383 113.25741 m
216.45892 112.07516 l
214.70732 119.25214 l
h
205.72383 113.25741 m
S
1.4173229 w
280.74628 232.79784 m
200.0602 111.53022 l
S
CM
118.72321 62.20509 m
110.0261 68.608246 l
116.1767 72.700584 l
h
118.72321 62.20509 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
286.3681 241.24716 m
277.67099 234.84401 l
283.82159 230.75168 l
h
286.3681 241.24716 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
367.98288 88.152679 m
(!)s
/F1.1[ 14 0 0 -14 0 0]sf
379.98288 94.152679 m
(")s
/F1.1[ 24 0 0 -24 0 0]sf
460.73257 115.05522 m
(!)s
/F1.1[ 14 0 0 -14 0 0]sf
472.73257 121.05522 m
(#)s
/F1.1[ 24 0 0 -24 0 0]sf
172.64488 166.50232 m
(!)s
/F1.1[ 14 0 0 -14 0 0]sf
184.64488 172.50232 m
($)s
/F1.1[ 24 0 0 -24 0 0]sf
310.55591 224.78851 m
(!)s
/F1.1[ 14 0 0 -14 0 0]sf
322.55591 230.78851 m
(%)s
0.60000002 i
CM
36.918728 192.56912 m
36.919075 193.19771 36.794094 193.82603 36.553219 194.40665 c
36.312988 194.98753 35.957073 195.52019 35.512341 195.96443 c
35.068104 196.40916 34.535439 196.76508 33.954559 197.00531 c
33.373943 197.24619 32.745625 197.37117 32.117027 197.37082 c
31.488432 197.37117 30.860111 197.24619 30.279497 197.00531 c
29.698618 196.76508 29.165953 196.40916 28.721714 195.96443 c
28.276983 195.52019 27.921068 194.98753 27.680836 194.40665 c
27.439962 193.82603 27.314981 193.19771 27.315329 192.56912 c
27.314981 191.94052 27.439962 191.31219 27.680836 190.73158 c
27.921068 190.15071 28.276983 189.61804 28.721714 189.1738 c
29.165953 188.72908 29.698618 188.37315 30.279497 188.13292 c
30.860111 187.89206 31.488432 187.76707 32.117027 187.76743 c
32.745625 187.76707 33.373943 187.89206 33.954559 188.13292 c
34.535439 188.37315 35.068104 188.72908 35.512341 189.1738 c
35.957073 189.61804 36.312988 190.15071 36.553219 190.73158 c
36.794094 191.31219 36.919075 191.94052 36.918728 192.56912 c
h
36.918728 192.56912 m
f
1 w
1 0 0 -1 -167.64488 303.45224 cm
204.56361 110.88313 m
204.56396 110.25454 204.43898 109.62622 204.1981 109.04561 c
203.95787 108.46472 203.60196 107.93206 203.15723 107.48782 c
202.71298 107.04309 202.18033 106.68718 201.59944 106.44695 c
201.01883 106.20607 200.3905 106.08109 199.76192 106.08144 c
199.13332 106.08109 198.505 106.20607 197.92438 106.44695 c
197.34351 106.68718 196.81084 107.04309 196.36661 107.48782 c
195.92188 107.93206 195.56595 108.46472 195.32573 109.04561 c
195.08485 109.62622 194.95987 110.25454 194.96022 110.88313 c
194.95987 111.51173 195.08485 112.14005 195.32573 112.72066 c
195.56595 113.30154 195.92188 113.83421 196.36661 114.27845 c
196.81084 114.72318 197.34351 115.07909 197.92438 115.31933 c
198.505 115.5602 199.13332 115.68518 199.76192 115.68484 c
200.3905 115.68518 201.01883 115.5602 201.59944 115.31933 c
202.18033 115.07909 202.71298 114.72318 203.15723 114.27845 c
203.60196 113.83421 203.95787 113.30154 204.1981 112.72066 c
204.43898 112.14005 204.56396 111.51173 204.56361 110.88313 c
h
204.56361 110.88313 m
S
0 i
/F1.1[ 18 0 0 -18 0 0]sf
446.19223 142.59212 m
(&)s
/F2.1[ 18 0 0 -18 0 0]sf
452.18637 142.59212 m
(!")[ 18.000000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
488.18637 142.59212 m
(')s
/F2.1[ 18 0 0 -18 0 0]sf
335.33356 248.76741 m
(#$%)[ 18.000000 18.000000 0.000000 ] xS
293.86215 268.71106 m
(#$%)[ 18.000000 18.000000 0.000000 ] xS
250.70468 289.21332 m
(#$%)[ 18.000000 18.000000 0.000000 ] xS
2.1259842 w
0.60000002 i
511.3436 106.43096 m
511.3436 296.61234 l
663.81708 296.61234 l
S
CM
343.6987 210.72202 m
348.68536 197.02129 l
338.71204 197.02129 l
h
509.87292 6.8399239 m
496.17221 1.8532702 l
496.17221 11.826577 l
h
509.87292 6.8399239 m
f
0.53149605 w
1 0 0 -1 -167.64488 303.45224 cm
511.3436 92.730247 m
516.33026 106.43096 l
506.35693 106.43096 l
h
677.51782 296.61234 m
663.81708 301.59897 l
663.81708 291.62567 l
h
677.51782 296.61234 m
S
4.2519684 w
0.72124326 0.72013324 0.79885787 sc
576.08411 169.27721 m
630.12518 199.53432 591.69751 274.26953 527.15912 282.0665 c
S
0 0 0 sc
CM
427.93289 59.678162 m
427.93323 60.306759 427.80826 60.935078 427.56738 61.515694 c
427.32715 62.096573 426.97122 62.629238 426.52649 63.073475 c
426.08224 63.518208 425.54959 63.874123 424.96872 64.114357 c
424.38809 64.355225 423.75977 64.480209 423.1312 64.479858 c
422.50259 64.480209 421.87427 64.355225 421.29364 64.114357 c
420.71277 63.874123 420.18011 63.518208 419.73587 63.073475 c
419.29114 62.629238 418.93521 62.096573 418.69501 61.515694 c
418.45413 60.935078 418.32913 60.306759 418.3295 59.678162 c
418.32913 59.049568 418.45413 58.421246 418.69501 57.840633 c
418.93521 57.25975 419.29114 56.727089 419.73587 56.282848 c
420.18011 55.83812 420.71277 55.482204 421.29364 55.24197 c
421.87427 55.001095 422.50259 54.876118 423.1312 54.876465 c
423.75977 54.876118 424.38809 55.001095 424.96872 55.24197 c
425.54959 55.482204 426.08224 55.83812 426.52649 56.282848 c
426.97122 56.727089 427.32715 57.25975 427.56738 57.840633 c
427.80826 58.421246 427.93323 59.049568 427.93289 59.678162 c
h
427.93289 59.678162 m
f
1 w
1 0 0 -1 -167.64488 303.45224 cm
595.57776 243.77409 m
595.57812 243.14549 595.45312 242.51718 595.21228 241.93655 c
594.97205 241.35568 594.61609 240.82301 594.17139 240.37878 c
593.72717 239.93405 593.19446 239.57812 592.61359 239.33791 c
592.03296 239.09703 591.40466 238.97205 590.77606 238.9724 c
590.14746 238.97205 589.51917 239.09703 588.93854 239.33791 c
588.35767 239.57812 587.82501 239.93405 587.38074 240.37878 c
586.93604 240.82301 586.58014 241.35568 586.3399 241.93655 c
586.099 242.51718 585.974 243.14549 585.97437 243.77409 c
585.974 244.40269 586.099 245.03101 586.3399 245.61162 c
586.58014 246.1925 586.93604 246.72517 587.38074 247.1694 c
587.82501 247.61414 588.35767 247.97005 588.93854 248.21028 c
589.51917 248.45116 590.14746 248.57614 590.77606 248.57579 c
591.40466 248.57614 592.03296 248.45116 592.61359 248.21028 c
593.19446 247.97005 593.72717 247.61414 594.17139 247.1694 c
594.61609 246.72517 594.97205 246.1925 595.21228 245.61162 c
595.45312 245.03101 595.57812 244.40269 595.57776 243.77409 c
h
595.57776 243.77409 m
S
1.4173229 w
626.02631 211.51082 m
623.10828 214.2467 l
S
620.19025 216.9826 m
617.27222 219.71849 l
S
614.35419 222.45439 m
611.43616 225.19028 l
S
608.51813 227.92618 m
605.6001 230.66206 l
S
602.68207 233.39796 m
599.76404 236.13387 l
S
596.84601 238.86975 m
593.92798 241.60565 l
S
CM
465.78494 98.882866 m
460.90787 89.246773 l
455.85492 94.636108 l
h
465.78494 98.882866 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
633.42981 204.56938 m
628.55273 214.20547 l
623.49982 208.81615 l
h
633.42981 204.56938 m
S
1 w
641.72961 198.99968 m
641.72992 198.37108 641.60498 197.74275 641.36407 197.16214 c
641.12384 196.58127 640.76794 196.0486 640.32318 195.60435 c
639.87897 195.15962 639.34631 194.80371 638.76544 194.56348 c
638.18481 194.3226 637.55646 194.19763 636.92792 194.19797 c
636.29932 194.19763 635.67096 194.3226 635.09033 194.56348 c
634.50946 194.80371 633.97681 195.15962 633.53259 195.60435 c
633.08783 196.0486 632.73193 196.58127 632.4917 197.16214 c
632.25079 197.74275 632.12585 198.37108 632.12616 198.99968 c
632.12585 199.62827 632.25079 200.25659 632.4917 200.8372 c
632.73193 201.41809 633.08783 201.95074 633.53259 202.39499 c
633.97681 202.83972 634.50946 203.19563 635.09033 203.43587 c
635.67096 203.67674 636.29932 203.80173 636.92792 203.80138 c
637.55646 203.80173 638.18481 203.67674 638.76544 203.43587 c
639.34631 203.19563 639.87897 202.83972 640.32318 202.39499 c
640.76794 201.95074 641.12384 201.41809 641.36407 200.8372 c
641.60498 200.25659 641.72992 199.62827 641.72961 198.99968 c
h
641.72961 198.99968 m
S
CM
438.59354 99.74633 m
438.59387 100.37492 438.4689 101.00324 438.22803 101.58386 c
437.98779 102.16474 437.63187 102.6974 437.18713 103.14164 c
436.74289 103.58637 436.21024 103.94228 435.62936 104.18252 c
435.04874 104.42339 434.42041 104.54838 433.79181 104.54803 c
433.16324 104.54838 432.53491 104.42339 431.95428 104.18252 c
431.37341 103.94228 430.84076 103.58637 430.39651 103.14164 c
429.95178 102.6974 429.59586 102.16474 429.35562 101.58386 c
429.11475 101.00324 428.98978 100.37492 428.99011 99.74633 c
428.98978 99.117729 429.11475 98.48941 429.35562 97.908798 c
429.59586 97.327919 429.95178 96.79525 430.39651 96.351013 c
430.84076 95.906281 431.37341 95.550369 431.95428 95.310135 c
432.53491 95.06926 433.16324 94.944283 433.79181 94.944626 c
434.42041 94.944283 435.04874 95.06926 435.62936 95.310135 c
436.21024 95.550369 436.74289 95.906281 437.18713 96.351013 c
437.63187 96.79525 437.98779 97.327919 438.22803 97.908798 c
438.4689 98.48941 438.59387 99.117729 438.59354 99.74633 c
h
438.59354 99.74633 m
f
1 0 0 -1 -167.64488 303.45224 cm
606.2384 203.70593 m
606.23877 203.07733 606.11377 202.44901 605.87292 201.86839 c
605.63269 201.28752 605.27673 200.75485 604.83203 200.31061 c
604.38776 199.86588 603.8551 199.50996 603.27423 199.26973 c
602.6936 199.02885 602.06531 198.90388 601.43671 198.90422 c
600.80811 198.90388 600.17981 199.02885 599.59918 199.26973 c
599.01831 199.50996 598.48566 199.86588 598.04138 200.31061 c
597.59668 200.75485 597.24072 201.28752 597.00055 201.86839 c
596.75964 202.44901 596.63464 203.07733 596.63501 203.70593 c
596.63464 204.33452 596.75964 204.96284 597.00055 205.54346 c
597.24072 206.12433 597.59668 206.657 598.04138 207.10124 c
598.48566 207.54597 599.01831 207.90189 599.59918 208.14212 c
600.17981 208.383 600.80811 208.50797 601.43671 208.50763 c
602.06531 208.50797 602.6936 208.383 603.27423 208.14212 c
603.8551 207.90189 604.38776 207.54597 604.83203 207.10124 c
605.27673 206.657 605.63269 206.12433 605.87292 205.54346 c
606.11377 204.96284 606.23877 204.33452 606.2384 203.70593 c
h
606.2384 203.70593 m
S
1.4173229 w
617.61414 201.3907 m
629.83148 199.92891 l
S
CM
439.89243 100.85587 m
449.5304 105.72921 l
450.40808 98.39389 l
h
439.89243 100.85587 m
f
0.35433072 w
1 0 0 -1 -167.64488 303.45224 cm
607.53729 202.59639 m
617.17529 197.72304 l
618.05298 205.05836 l
h
607.53729 202.59639 m
S
0 i
/F1.1[ 24 0 0 -24 0 0]sf
540.19086 136.92184 m
(\()s
/F2.1[ 24 0 0 -24 0 0]sf
557.52289 136.92184 m
(&)s
/F3.1[ 24 0 0 -24 0 0]sf
565.51489 136.92184 m
(!)s
/F2.1[ 24 0 0 -24 0 0]sf
578.40289 136.92184 m
('\(\)\(*)[ 7.992000 7.992000 14.520000 7.992000 0.000000 ] xS
0.95160133 0 0 -1 -140.37302 303.45224 cm
/F1.1[ 14 0 0 -14 0 0]sf
568.48389 116.67147 m
(\))s
1 0 0 -1 -167.64488 303.45224 cm
/F2.1[ 18 0 0 -18 0 0]sf
535.27734 210.10197 m
(+,%)[ 18.000000 18.000000 0.000000 ] xS
610.3595 183.62386 m
(-.%)[ 18.000000 18.000000 0.000000 ] xS
588.36926 269.44821 m
(#$/)[ 18.000000 18.000000 0.000000 ] xS
172.64488 289.71884 m
(&0')[ 5.994000 10.062000 0.000000 ] xS
482.21722 289.71884 m
(&1')[ 5.994000 10.548000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
