%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 350 247
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 350 247
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ZOTCCB+Helvetica
%!FontType1-1.0: ZOTCCB+Helvetica 1.0000.0.0000
14 dict begin/FontName /ZOTCCB+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /a put
dup 34 /one put
dup 35 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/a 3 def
/u20B8 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec

51E234C9B8EA25E14B32774DCB5176EEF7D832F2D7B52A43C0C3CCA52F709D3FA198B3F9F633A9DB94EF29345C7568FFD61492D28E683725F4EE0F82C7AF4791F7DF036CC4E1C49BC89951424E21BB4D7E5366138B7C3993EFC299A1168A7BDBFC3B2BE7C0DCDA4E58256F4FF7B4BAED8BB146CBFEFDCFB5B96CE92F16A1DAAC8A2840656849642AF685E8A143B8913D498337168C214E623A7C7CC722B6CA30EFC9B55324369555DE13D5A31260B5F64167765107CF95E188B7CE044AE62445AD281D2432CEB0AD01B57EB062284D08AB25AE1A24721B20A1549402A2B139D1B099C7215F652F2AF76A02ADDCD0570CDC2222EB8D64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ZOTCCB+Helvetica cguidfix
/F1.1/ZOTCCB+Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
2 J
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 349.24692 246.12883 rc
1 0 0 -1 -188.34225 534.05499 cm
375.76773 514.69147 m
378.28842 512.74756 380.48206 510.38095 382.29407 507.67307 c
384.10782 504.96631 385.53983 501.91995 386.58218 498.64716 c
387.62604 495.37463 388.28101 491.87747 388.58078 488.2764 c
388.88156 484.6748 388.8284 480.97064 388.48257 477.27106 c
388.13718 473.57053 387.50031 469.87509 386.64453 466.26602 c
385.7887 462.65591 384.71472 459.13208 383.49316 455.74677 c
382.27121 452.36053 380.90207 449.11246 379.44623 446.0293 c
377.98987 442.9454 376.4469 440.02594 374.86475 437.27844 c
373.2821 434.53046 371.66016 431.95401 370.03351 429.54395 c
368.40643 427.13364 366.77444 424.88937 365.16113 422.79874 c
363.54767 420.70819 361.79031 418.56067 359.87109 416.37582 c
357.95203 414.19144 355.87079 411.96942 353.61368 409.74197 c
351.3569 407.51511 348.92383 405.28256 346.30975 403.09213 c
343.69626 400.90237 340.90125 398.7547 337.9353 396.71439 c
334.97015 394.67468 331.83359 392.74265 328.55826 390.99976 c
325.28394 389.25717 321.87061 387.70447 318.37845 386.43243 c
314.88733 385.16022 311.31757 384.16992 307.75739 383.54807 c
304.19791 382.92532 300.64893 382.67252 297.21869 382.85287 c
293.78854 383.03165 290.47873 383.64481 287.40067 384.71326 c
284.3219 385.77979 281.47659 387.30194 278.95728 389.24765 c
276.43655 391.19156 274.24295 393.55817 272.43091 396.26608 c
270.61719 398.97281 269.18515 402.01917 268.14282 405.29196 c
267.09894 408.56448 266.44397 412.06168 266.1442 415.66275 c
265.84341 419.26431 265.89661 422.96848 266.24243 426.66809 c
266.5878 430.36862 267.22467 434.06403 268.08044 437.6731 c
268.93631 441.28323 270.01025 444.80707 271.23184 448.19235 c
272.45377 451.57858 273.82291 454.82666 275.27878 457.90985 c
276.73511 460.99371 278.27808 463.91321 279.86026 466.66071 c
281.4429 469.40869 283.06482 471.98514 284.6915 474.39517 c
286.31857 476.80551 287.95053 479.04977 289.56387 481.14041 c
291.17734 483.23096 292.93469 485.37845 294.85391 487.56332 c
296.77298 489.74771 298.85422 491.9697 301.11133 494.19714 c
303.3681 496.42401 305.80118 498.65659 308.41522 500.84698 c
311.02875 503.03674 313.82373 505.18445 316.7897 507.22473 c
319.75482 509.26443 322.89139 511.19647 326.16672 512.93939 c
329.44104 514.68195 332.85437 516.23468 336.34653 517.50671 c
339.83768 518.77893 343.40741 519.76923 346.96762 520.39105 c
350.52707 521.01379 354.07608 521.2666 357.50632 521.08624 c
360.93643 520.90747 364.24628 520.29431 367.32431 519.22589 c
370.40308 518.15936 373.24838 516.63721 375.76773 514.69147 c
h
375.76773 514.69147 m
S
296.74286 395.19217 m
384.38254 382.08209 430.16483 236.90674 484.34534 338.54364 c
502.60529 372.79739 384.64316 427.84875 359.83847 495.16681 c
S
Q
q
231.87689 220.23085 m
214.29185 209.33093 183.36099 188.31479 204.64024 180.47868 c
204.64024 180.47868 204.64024 180.47868 204.64024 180.47868 c
214.90132 180.7585 221.0089 178.60173 230.15004 183.27156 c
234.17567 185.32809 228.8662 190.26859 230.24893 194.57243 c
231.83537 199.51035 238.19519 196.04405 242.41298 199.06233 c
245.78967 201.47871 244.16335 205.18488 243.93445 209.33078 c
243.6335 214.7816 235.44484 215.5497 232.08951 219.85594 c
W
0 0 349.24692 246.12883 rc
72 0 0 -56 183.36099 220.23085 cm
BI
/Width 72
/Height 56
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JH2YLm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wk
qu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
n,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^h
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;Qh
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
o)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!k
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)EeJ,
~> %APLeod
EI
Q
q
0 0 349.24692 246.12883 rc
1 0 0 -1 -188.34225 534.05499 cm
420.21915 313.82416 m
402.63412 324.72409 371.70325 345.74023 392.98251 353.57632 c
392.98251 353.57632 392.98251 353.57632 392.98251 353.57632 c
403.24359 353.29651 409.35114 355.45331 418.49228 350.78345 c
422.51791 348.72693 417.20844 343.78644 418.59119 339.48257 c
420.17764 334.54468 426.53745 338.01096 430.75525 334.99268 c
434.13193 332.57629 432.50562 328.87015 432.2767 324.72424 c
431.97577 319.27344 423.78708 318.50534 420.43176 314.19907 c
S
Q
q
110.61386 48.05077 m
113.61155 43.002037 127.57316 31.587191 131.89354 27.595728 c
137.5383 22.380718 140.4691 19.852741 140.4691 19.852741 c
143.78822 36.979931 163.92325 38.1147 155.85114 51.732788 c
149.55742 62.350628 119.55279 48.01479 111.68823 48.024834 c
W
0 0 349.24692 246.12883 rc
64 0 0 -64 110.61386 62.350628 cm
BI
/Width 64
/Height 64
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JH3Ldm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@e
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iq
p&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^h
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
rr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!km/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wkqu?Wqm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)EerW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N@em/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%brr;QhrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)iqp&G!k
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bq#C-hrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Wk
qu?Wqm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo)J^hrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)EeJ,
~> %APLeod
EI
Q
q
0 0 349.24692 246.12883 rc
1 0 0 -1 -188.34225 534.05499 cm
298.95612 486.00424 m
301.9538 491.05298 315.91541 502.46783 320.23581 506.45929 c
325.88055 511.67432 328.81137 514.20227 328.81137 514.20227 c
332.13046 497.0751 352.2655 495.94031 344.19339 482.32224 c
337.89969 471.70438 307.89505 486.04022 300.03049 486.03018 c
S
2.1259842 w
313.61588 500.1698 m
331.70502 518.90918 l
S
CM
148.58379 9.7371387 m
141.39413 13.245549 l
145.33136 17.046154 l
h
148.58379 9.7371387 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
336.92606 524.31787 m
329.73639 520.80945 l
333.67361 517.00885 l
h
336.92606 524.31787 m
S
2.1259842 w
313.78201 499.85757 m
336.55057 487.9039 l
S
CM
154.8643 49.645565 m
149.48018 43.728535 l
146.93643 48.5737 l
h
154.8643 49.645565 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
343.20654 484.40945 m
337.82245 490.32648 l
335.27869 485.48132 l
h
343.20654 484.40945 m
S
2.1259842 w
400.28375 338.06366 m
418.37289 356.80301 l
S
CM
235.25166 171.84329 m
228.06201 175.3517 l
231.99924 179.15231 l
h
235.25166 171.84329 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
423.59393 362.21173 m
416.40427 358.70331 l
420.34149 354.90271 l
h
423.59393 362.21173 m
S
2.1259842 w
399.36349 337.73752 m
422.13205 325.78381 l
S
CM
240.44579 211.76566 m
235.06166 205.84862 l
232.51791 210.69379 l
h
240.44579 211.76566 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
428.78802 322.28937 m
423.40393 328.20639 l
420.86017 323.36124 l
h
428.78802 322.28937 m
S
1 w
369.17807 403.65192 m
437.80441 398.44229 453.89706 351.62927 459.24756 336.61746 c
S
381.86655 399.67511 m
391.10898 365.72879 439.72568 362.74515 450.08636 354.33197 c
S
1 1 1 sc
CM
149.40024 136.4045 m
149.40102 137.80811 149.12195 139.21112 148.58409 140.5076 c
148.04765 141.80467 147.25291 142.99408 146.25986 143.98604 c
145.2679 144.97911 144.07849 145.77385 142.78142 146.31027 c
141.48494 146.84813 140.08192 147.1272 138.6783 147.12643 c
137.27469 147.1272 135.87167 146.84813 134.5752 146.31027 c
133.27812 145.77385 132.08871 144.97911 131.09676 143.98604 c
130.10368 142.99408 129.30894 141.80467 128.77252 140.5076 c
128.23466 139.21112 127.95559 137.80811 127.95637 136.4045 c
127.95559 135.00087 128.23466 133.59785 128.77252 132.30138 c
129.30894 131.0043 130.10368 129.8149 131.09676 128.82294 c
132.08871 127.82987 133.27812 127.03513 134.5752 126.49871 c
135.87167 125.96085 137.27469 125.68178 138.6783 125.68255 c
140.08192 125.68178 141.48494 125.96085 142.78142 126.49871 c
144.07849 127.03513 145.2679 127.82987 146.25986 128.82294 c
147.25291 129.8149 148.04765 131.0043 148.58409 132.30138 c
149.12195 133.59785 149.40102 135.00087 149.40024 136.4045 c
h
149.40024 136.4045 m
f
197.68332 84.778557 m
197.6841 86.182182 197.40503 87.58519 196.86717 88.881668 c
196.33073 90.178741 195.536 91.368156 194.54294 92.360115 c
193.55098 93.353172 192.36157 94.147911 191.0645 94.684341 c
189.76802 95.222198 188.36501 95.501274 186.96138 95.500496 c
185.55777 95.501274 184.15475 95.222198 182.85828 94.684341 c
181.5612 94.147911 180.3718 93.353172 179.37984 92.360115 c
178.38676 91.368156 177.59203 90.178741 177.0556 88.881668 c
176.51775 87.58519 176.23868 86.182182 176.23944 84.778557 c
176.23868 83.374939 176.51775 81.971931 177.0556 80.675453 c
177.59203 79.37838 178.38676 78.188965 179.37984 77.197006 c
180.3718 76.203949 181.5612 75.409203 182.85828 74.87278 c
184.15475 74.334923 185.55777 74.055847 186.96138 74.056618 c
188.36501 74.055847 189.76802 74.334923 191.0645 74.87278 c
192.36157 75.409203 193.55098 76.203949 194.54294 77.197006 c
195.536 78.188965 196.33073 79.37838 196.86717 80.675453 c
197.40503 81.971931 197.6841 83.374939 197.68332 84.778557 c
h
197.68332 84.778557 m
f
190.414 94.150154 m
190.71976 94.44239 190.86696 94.899986 190.85594 95.504753 c
190.84558 96.108971 190.67728 96.859871 190.3689 97.724297 c
190.06094 98.588463 189.61345 99.565521 189.05634 100.61519 c
188.4994 101.66489 187.83339 102.78665 187.09294 103.94109 c
186.35243 105.09575 185.53789 106.28278 184.68227 107.46926 c
183.82645 108.65607 182.92973 109.84227 182.01949 111.00391 c
181.10896 112.16588 180.18492 113.30336 179.26764 114.40126 c
178.3501 115.49944 177.43924 116.55817 176.5486 117.56966 c
175.65775 118.58137 174.787 119.54597 173.94434 120.46102 c
173.10152 121.3762 172.2867 122.24194 171.50371 123.05923 c
170.72072 123.87651 169.89069 124.72769 169.01247 125.60895 c
168.13437 126.49004 167.20796 127.40133 166.23537 128.33472 c
165.26295 129.26788 164.24423 130.22327 163.18639 131.18703 c
162.1288 132.15051 161.03195 133.12245 159.91006 134.08191 c
158.78851 135.04111 157.64182 135.98782 156.49277 136.89372 c
155.34404 137.79939 154.19301 138.66406 153.07114 139.45335 c
151.94949 140.2426 150.85728 140.95607 149.83243 141.55748 c
148.80759 142.15906 147.8506 142.64801 147.00043 142.99269 c
146.15001 143.33783 145.40701 143.53816 144.8038 143.57442 c
144.20006 143.61133 143.73657 143.48386 143.4315 143.19092 c
143.12576 142.89868 142.97855 142.44109 142.98956 141.83632 c
142.99992 141.2321 143.16823 140.4812 143.47661 139.61678 c
143.78456 138.75261 144.23206 137.77554 144.78917 136.72588 c
145.3461 135.67619 146.01212 134.55441 146.75256 133.39998 c
147.49307 132.24532 148.30762 131.05829 149.16324 129.87181 c
150.01906 128.685 150.91577 127.49879 151.82602 126.33716 c
152.73654 125.17519 153.66058 124.03771 154.57787 122.93981 c
155.49541 121.84164 156.40627 120.78291 157.29691 119.7714 c
158.18776 118.7597 159.0585 117.7951 159.90117 116.88005 c
160.74399 115.96487 161.55881 115.09914 162.3418 114.28184 c
163.12479 113.46455 163.95482 112.61338 164.83304 111.73212 c
165.71114 110.85103 166.63754 109.93974 167.61014 109.00636 c
168.58255 108.07319 169.60127 107.1178 170.65912 106.15405 c
171.71671 105.19055 172.81355 104.21863 173.93544 103.25916 c
175.05699 102.29996 176.20369 101.35324 177.35274 100.44735 c
178.50146 99.541679 179.6525 98.677017 180.77437 97.887711 c
181.89601 97.098473 182.98822 96.385002 184.01308 95.7836 c
185.03792 95.182014 185.9949 94.693062 186.84508 94.348381 c
187.6955 94.003235 188.43849 93.802902 189.0417 93.766655 c
189.64545 93.729744 190.10893 93.857208 190.414 94.150154 c
h
190.414 94.150154 m
f
0 0 0 sc
1 0 0 -1 -188.34225 534.05499 cm
188.84225 365.866 m
276.80283 365.866 l
S
202.59987 288.88232 m
202.59987 380.81073 l
S
Q
q
82.560966 205.28554 m
82.563225 209.36473 81.752182 213.44212 80.189064 217.20993 c
78.630112 220.97946 76.320457 224.4361 73.434448 227.31892 c
70.551628 230.20493 67.094978 232.51459 63.325447 234.07355 c
59.55764 235.63666 55.480247 236.44771 51.401066 236.44545 c
47.321888 236.44771 43.244495 235.63666 39.476688 234.07355 c
35.707157 232.51459 32.250511 230.20493 29.367689 227.31892 c
26.48168 224.4361 24.172022 220.97946 22.613071 217.20993 c
21.049953 213.44212 20.238911 209.36473 20.241165 205.28554 c
20.238911 201.20636 21.049953 197.12897 22.613071 193.36116 c
24.172022 189.59163 26.48168 186.13499 29.367689 183.25217 c
32.250511 180.36617 35.707157 178.0565 39.476688 176.49754 c
43.244495 174.93443 47.321888 174.12338 51.401066 174.12564 c
55.480247 174.12338 59.55764 174.93443 63.325447 176.49754 c
67.094978 178.0565 70.551628 180.36617 73.434448 183.25217 c
76.320457 186.13499 78.630112 189.59163 80.189064 193.36116 c
81.752182 197.12897 82.563225 201.20636 82.560966 205.28554 c
h
82.560966 205.28554 m
W
0 0 349.24692 246.12883 rc
72 0 0 -72 20.238911 236.44771 cm
BI
/Width 72
/Height 72
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JH2YLrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)`n
o)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N:brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqu?-b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N:b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rtm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
qu?-brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<n
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
n,N:brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqu?-brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rt
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brr;rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bn,N:brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp&F^brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bqu?-brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)rtJ,
~> %APLeod
EI
Q
q
0 0 349.24692 246.12883 rc
1 0 0 -1 -188.34225 534.05499 cm
270.90323 328.76947 m
270.90549 324.69031 270.09445 320.61292 268.53131 316.84509 c
266.97238 313.07556 264.66272 309.61893 261.7767 306.73608 c
258.89389 303.8501 255.43724 301.54044 251.66771 299.98148 c
247.8999 298.41837 243.82251 297.60733 239.74333 297.60956 c
235.66415 297.60733 231.58676 298.41837 227.81895 299.98148 c
224.04941 301.54044 220.59277 303.8501 217.70995 306.73608 c
214.82394 309.61893 212.51428 313.07556 210.95532 316.84509 c
209.39221 320.61292 208.58116 324.69031 208.58342 328.76947 c
208.58116 332.84866 209.39221 336.92606 210.95532 340.69385 c
212.51428 344.46338 214.82394 347.92004 217.70995 350.80286 c
220.59277 353.68887 224.04941 355.9985 227.81895 357.55746 c
231.58676 359.12057 235.66415 359.93164 239.74333 359.92938 c
243.82251 359.93164 247.8999 359.12057 251.66771 357.55746 c
255.43724 355.9985 258.89389 353.68887 261.7767 350.80286 c
264.66272 347.92004 266.97238 344.46338 268.53131 340.69385 c
270.09445 336.92606 270.90549 332.84866 270.90323 328.76947 c
h
270.90323 328.76947 m
S
285.05807 318.21298 m
310.48331 314.85416 356.51999 317.45892 376.72839 320.125 c
S
CM
195.79486 212.6972 m
187.85426 211.72418 l
189.08656 217.05595 l
h
195.79486 212.6972 m
f
0.25 w
1 0 0 -1 -188.34225 534.05499 cm
384.13712 321.35782 m
376.1965 322.33084 l
377.42883 316.99905 l
h
384.13712 321.35782 m
S
1 w
449.12863 518.61029 m
537.08917 518.61029 l
S
462.88623 441.62662 m
462.88623 533.55499 l
S
Q
q
313.12671 15.444733 m
321.86078 15.470078 330.59488 15.495423 339.32895 15.520769 c
339.29242 32.151619 327.53165 45.599545 313.06055 45.557552 c
298.63727 45.515694 286.95547 32.085449 286.92441 15.509573 c
295.65851 15.48796 304.39261 15.466346 313.12671 15.444733 c
h
313.12671 15.444733 m
W
0 0 349.24692 246.12883 rc
104 0 0 -64 286.92441 45.599545 cm
BI
/Width 104
/Height 64
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JH16$aT2;?m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brr;rt
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)Eequ?Wqm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%b!<;HdrW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/I%c!<<,ds8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjf
s8W&um/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%b
m/R%brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R(brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bn,N:brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)fpoDedim/R%bo)JLbrW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)osnGiIfm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brVurumJm.cm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<b!!!$"!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"
rW)<brW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<b
rW)otm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brr;rtm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)Eequ?Wqm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%brVuBerW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%b!<;HdrW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/I%c!<<,ds8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&u
m/R%bm/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R(brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bn,N:brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)fpoDedim/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)osnGiIfm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brVurumJm.cm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
!!!$"!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<b
rW)<brW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)ot
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brr;rtm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)Eequ?Wqm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%brVuBerW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%b!<;HdrW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c
!<<,ds8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%b
m/R%brr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R(brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bn,N:brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)fpoDedim/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)osnGiIfm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brVurumJm.cm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b!!!$"
!:9ab!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<b
rW)rtm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bnc/OerW)<brW)<brW)otm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bo`+aerW)<brW)<brr;rtm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bp]'serW)<brW)Eequ?Wqm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%bm/R%bm/R%bqZ$0erW)<brW)Nhq#C<nm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%bm/R%bm/R%brVuBerW)<brW)Wkp&G!km/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%b
m/R%b!<;HdrW)<brW)`no)J[hm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/R%bm/I%c!<<,d
s8E#bs8E#qs6p!e!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:9ab!:Kjfs8W&um/R%bm/R%b
rr;?brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Kgr;Z`rm/R%bm/R%brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)Tjq>^Eom/R%bm/R(brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)<brW)<brW)]mpAb*lm/R%bn,N:brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)<brW)<brW)fpoDedim/R%bo)JLbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rW)<brW)<brW)osnGiIfm/R%bp&F^brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b
rVurumJm.cm/R%bq#BpbrW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<brW)<b!!!$"!:9ab
!:9ab!;lfbs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#bs8E#drrN0"rW)<brW)<brW)rt
J,
~> %APLeod
EI
Q
q
0 0 349.24692 246.12883 rc
1 0 0 -1 -188.34225 534.05499 cm
501.46896 518.61029 m
510.20303 518.58496 518.93713 518.55957 527.6712 518.53424 c
527.6347 501.90341 515.8739 488.45547 501.4028 488.49747 c
486.97952 488.53934 475.29773 501.96957 475.26666 518.54547 c
484.00076 518.56708 492.73486 518.58868 501.46896 518.61029 c
h
501.46896 518.61029 m
S
478.67221 486.45853 m
448.53445 478.19315 423.63098 475.56772 404.47086 482.4241 c
S
CM
209.24529 48.624329 m
214.63721 54.534256 l
217.17456 49.685741 l
h
209.24529 48.624329 m
f
0.25 w
1 0 0 -1 -188.34225 534.05499 cm
397.58755 485.43069 m
402.97946 479.52075 l
405.51682 484.36929 l
h
397.58755 485.43069 m
S
2.1259842 w
229.50722 343.7114 m
254.50255 343.7114 l
S
CM
73.677826 190.34363 m
66.160286 187.60745 l
66.160286 193.07979 l
h
73.677826 190.34363 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
262.02008 343.7114 m
254.50255 346.44757 l
254.50255 340.97525 l
h
262.02008 343.7114 m
S
2.1259842 w
228.21159 342.89874 m
228.21159 317.90344 l
S
CM
39.869339 223.66913 m
42.605499 216.15158 l
37.133175 216.15158 l
h
39.869339 223.66913 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
228.21159 310.38589 m
230.94775 317.90344 l
225.47543 317.90344 l
h
228.21159 310.38589 m
S
2.1259842 w
499.50284 518.30548 m
524.49817 518.30548 l
S
CM
343.67343 15.749515 m
336.15591 13.013353 l
336.15591 18.485676 l
h
343.67343 15.749515 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
532.01569 518.30548 m
524.49817 521.04169 l
524.49817 515.56934 l
h
532.01569 518.30548 m
S
2.1259842 w
500.05005 517.49286 m
500.05005 492.49753 l
S
CM
311.70779 49.075024 m
314.44397 41.55748 l
308.97165 41.55748 l
h
311.70779 49.075024 m
f
0.53149605 w
1 0 0 -1 -188.34225 534.05499 cm
500.05005 484.98001 m
502.78622 492.49753 l
497.3139 492.49753 l
h
500.05005 484.98001 m
S
CM
41.596115 191.05806 m
41.596252 191.30954 41.546249 191.56091 41.449883 191.79321 c
41.353767 192.0256 41.211376 192.23872 41.033447 192.41644 c
40.855717 192.59438 40.642609 192.73677 40.41021 192.83289 c
40.177917 192.92926 39.92654 192.97925 39.675049 192.97911 c
39.423561 192.97925 39.172184 192.92926 38.939892 192.83289 c
38.707493 192.73677 38.494385 192.59438 38.316654 192.41644 c
38.138725 192.23872 37.99633 192.0256 37.900219 191.79321 c
37.803852 191.56091 37.753849 191.30954 37.753986 191.05806 c
37.753849 190.80656 37.803852 190.55519 37.900219 190.32289 c
37.99633 190.0905 38.138725 189.87738 38.316654 189.69966 c
38.494385 189.52173 38.707493 189.37933 38.939892 189.28322 c
39.172184 189.18686 39.423561 189.13686 39.675049 189.13699 c
39.92654 189.13686 40.177917 189.18686 40.41021 189.28322 c
40.642609 189.37933 40.855717 189.52173 41.033447 189.69966 c
41.211376 189.87738 41.353767 190.0905 41.449883 190.32289 c
41.546249 190.55519 41.596252 190.80656 41.596115 191.05806 c
h
41.596115 191.05806 m
f
1 w
1 0 0 -1 -188.34225 534.05499 cm
229.93837 342.99698 m
229.93851 342.74548 229.8885 342.49411 229.79214 342.26181 c
229.69603 342.02942 229.55363 341.81631 229.3757 341.63858 c
229.19797 341.46063 228.98486 341.31824 228.75247 341.22214 c
228.52017 341.12576 228.2688 341.07578 228.0173 341.0759 c
227.76582 341.07578 227.51443 341.12576 227.28215 341.22214 c
227.04974 341.31824 226.83664 341.46063 226.65891 341.63858 c
226.48099 341.81631 226.33859 342.02942 226.24248 342.26181 c
226.1461 342.49411 226.0961 342.74548 226.09625 342.99698 c
226.0961 343.24844 226.1461 343.49985 226.24248 343.73212 c
226.33859 343.96454 226.48099 344.17764 226.65891 344.35538 c
226.83664 344.53329 227.04974 344.67569 227.28215 344.77179 c
227.51443 344.86816 227.76582 344.91818 228.0173 344.91803 c
228.2688 344.91818 228.52017 344.86816 228.75247 344.77179 c
228.98486 344.67569 229.19797 344.53329 229.3757 344.35538 c
229.55363 344.17764 229.69603 343.96454 229.79214 343.73212 c
229.8885 343.49985 229.93851 343.24844 229.93837 342.99698 c
h
229.93837 342.99698 m
S
CM
127.77509 33.893665 m
127.77522 34.145153 127.72523 34.39653 127.62885 34.628822 c
127.53275 34.861221 127.39035 35.074329 127.21242 35.25206 c
127.03469 35.429989 126.82158 35.572384 126.58918 35.668495 c
126.35689 35.764862 126.10551 35.814865 125.85403 35.814728 c
125.60254 35.814865 125.35116 35.764862 125.11887 35.668495 c
124.88647 35.572384 124.67336 35.429989 124.49563 35.25206 c
124.3177 35.074329 124.17531 34.861221 124.07919 34.628822 c
123.98283 34.39653 123.93282 34.145153 123.93296 33.893665 c
123.93282 33.642174 123.98283 33.390797 124.07919 33.158504 c
124.17531 32.926105 124.3177 32.712997 124.49563 32.535267 c
124.67336 32.357338 124.88647 32.214947 125.11887 32.118832 c
125.35116 32.022465 125.60254 31.972462 125.85403 31.972601 c
126.10551 31.972462 126.35689 32.022465 126.58918 32.118832 c
126.82158 32.214947 127.03469 32.357338 127.21242 32.535267 c
127.39035 32.712997 127.53275 32.926105 127.62885 33.158504 c
127.72523 33.390797 127.77522 33.642174 127.77509 33.893665 c
h
127.77509 33.893665 m
f
1 0 0 -1 -188.34225 534.05499 cm
316.11734 500.16135 m
316.11749 499.90988 316.06747 499.65848 315.9711 499.42621 c
315.875 499.19379 315.7326 498.98068 315.55469 498.80295 c
315.37695 498.62503 315.16385 498.48264 314.93143 498.38654 c
314.69916 498.29016 314.44778 498.24014 314.19629 498.2403 c
313.94479 498.24014 313.69342 498.29016 313.46112 498.38654 c
313.22873 498.48264 313.01562 498.62503 312.83789 498.80295 c
312.65997 498.98068 312.51758 499.19379 312.42145 499.42621 c
312.32507 499.65848 312.27509 499.90988 312.27521 500.16135 c
312.27509 500.41284 312.32507 500.66422 312.42145 500.89651 c
312.51758 501.12891 312.65997 501.34201 312.83789 501.51974 c
313.01562 501.69769 313.22873 501.84009 313.46112 501.93619 c
313.69342 502.03256 313.94479 502.08255 314.19629 502.08243 c
314.44778 502.08255 314.69916 502.03256 314.93143 501.93619 c
315.16385 501.84009 315.37695 501.69769 315.55469 501.51974 c
315.7326 501.34201 315.875 501.12891 315.9711 500.89651 c
316.06747 500.66422 316.11749 500.41284 316.11734 500.16135 c
h
316.11734 500.16135 m
S
CM
213.20862 195.88322 m
213.20877 196.13472 213.15877 196.38609 213.06239 196.61839 c
212.96628 196.85078 212.82388 197.06389 212.64597 197.24162 c
212.46823 197.41956 212.25511 197.56195 212.02272 197.65805 c
211.79044 197.75443 211.53905 197.80443 211.28757 197.80429 c
211.03607 197.80443 210.7847 197.75443 210.5524 197.65805 c
210.32001 197.56195 210.1069 197.41956 209.92917 197.24162 c
209.75124 197.06389 209.60884 196.85078 209.51273 196.61839 c
209.41637 196.38609 209.36636 196.13472 209.3665 195.88322 c
209.36636 195.63174 209.41637 195.38036 209.51273 195.14807 c
209.60884 194.91566 209.75124 194.70256 209.92917 194.52483 c
210.1069 194.34691 210.32001 194.20451 210.5524 194.1084 c
210.7847 194.01202 211.03607 193.96202 211.28757 193.96216 c
211.53905 193.96202 211.79044 194.01202 212.02272 194.1084 c
212.25511 194.20451 212.46823 194.34691 212.64597 194.52483 c
212.82388 194.70256 212.96628 194.91566 213.06239 195.14807 c
213.15877 195.38036 213.20877 195.63174 213.20862 195.88322 c
h
213.20862 195.88322 m
f
1 0 0 -1 -188.34225 534.05499 cm
401.55087 338.17178 m
401.55103 337.92032 401.50101 337.66891 401.40466 337.43665 c
401.30853 337.20422 401.16614 336.99112 400.98822 336.81339 c
400.81049 336.63547 400.59738 336.49307 400.36499 336.39697 c
400.13269 336.3006 399.88132 336.25058 399.62982 336.25073 c
399.37833 336.25058 399.12695 336.3006 398.89465 336.39697 c
398.66226 336.49307 398.44916 336.63547 398.27142 336.81339 c
398.09351 336.99112 397.95111 337.20422 397.85498 337.43665 c
397.75861 337.66891 397.70862 337.92032 397.70877 338.17178 c
397.70862 338.42328 397.75861 338.67465 397.85498 338.90695 c
397.95111 339.13934 398.09351 339.35245 398.27142 339.53018 c
398.44916 339.70813 398.66226 339.85052 398.89465 339.94662 c
399.12695 340.043 399.37833 340.09299 399.62982 340.09286 c
399.88132 340.09299 400.13269 340.043 400.36499 339.94662 c
400.59738 339.85052 400.81049 339.70813 400.98822 339.53018 c
401.16614 339.35245 401.30853 339.13934 401.40466 338.90695 c
401.50101 338.67465 401.55103 338.42328 401.55087 338.17178 c
h
401.55087 338.17178 m
S
CM
313.76831 16.056908 m
313.76843 16.308397 313.71844 16.559776 313.62207 16.792067 c
313.52597 17.024466 313.38358 17.237574 313.20563 17.415306 c
313.02792 17.593233 312.81479 17.735628 312.5824 17.831739 c
312.3501 17.928108 312.09872 17.978111 311.84723 17.977972 c
311.59576 17.978111 311.34439 17.928108 311.11209 17.831739 c
310.8797 17.735628 310.66656 17.593233 310.48886 17.415306 c
310.31091 17.237574 310.16852 17.024466 310.07242 16.792067 c
309.97604 16.559776 309.92606 16.308397 309.92618 16.056908 c
309.92606 15.80542 309.97604 15.554041 310.07242 15.32175 c
310.16852 15.089351 310.31091 14.876243 310.48886 14.698511 c
310.66656 14.520584 310.8797 14.378189 311.11209 14.282078 c
311.34439 14.185708 311.59576 14.135706 311.84723 14.135845 c
312.09872 14.135706 312.3501 14.185708 312.5824 14.282078 c
312.81479 14.378189 313.02792 14.520584 313.20563 14.698511 c
313.38358 14.876243 313.52597 15.089351 313.62207 15.32175 c
313.71844 15.554041 313.76843 15.80542 313.76831 16.056908 c
h
313.76831 16.056908 m
f
1 0 0 -1 -188.34225 534.05499 cm
502.11057 517.99811 m
502.11072 517.74664 502.0607 517.49524 501.96432 517.26294 c
501.86823 517.03058 501.72583 516.81744 501.54791 516.63971 c
501.37018 516.46179 501.15707 516.3194 500.92465 516.22327 c
500.69238 516.12689 500.44098 516.0769 500.18951 516.07703 c
499.93802 516.0769 499.68665 516.12689 499.45435 516.22327 c
499.22195 516.3194 499.00885 516.46179 498.83112 516.63971 c
498.65317 516.81744 498.51077 517.03058 498.41467 517.26294 c
498.3183 517.49524 498.26831 517.74664 498.26843 517.99811 c
498.26831 518.24957 498.3183 518.50098 498.41467 518.73328 c
498.51077 518.9657 498.65317 519.17877 498.83112 519.35651 c
499.00885 519.53442 499.22195 519.67682 499.45435 519.77295 c
499.68665 519.86932 499.93802 519.91931 500.18951 519.91919 c
500.44098 519.91931 500.69238 519.86932 500.92465 519.77295 c
501.15707 519.67682 501.37018 519.53442 501.54791 519.35651 c
501.72583 519.17877 501.86823 518.9657 501.96432 518.73328 c
502.0607 518.50098 502.11072 518.24957 502.11057 517.99811 c
h
502.11057 517.99811 m
S
0 i
/F1.1[ 18 0 0 -18 0 0]sf
327.71463 305.92618 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
337.72537 311.92618 m
(")s
/F1.1[ 18 0 0 -18 0 0]sf
420.12881 469.68771 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
430.13956 474.68771 m
(#)s
ep
end
%%Trailer
%%EOF
